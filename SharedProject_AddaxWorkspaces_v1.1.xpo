Exportfile for AOT version 1.0 or later
Formatversion: 1

***Element: CLS

; Microsoft Dynamics AX Class: xppSource unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #xppSource
    PROPERTIES
      Name                #xppSource
      Origin              #{2D090B94-0000-1000-1FDE-7F536F757263}
      LegacyId            #2964
    ENDPROPERTIES
    
    METHODS
      SOURCE #historyBlock
        #Source historyBlock(boolean _firstBlock = false)
        #{
        #    UserInfo    userInfo;
        #    str         ver = _firstBlock ? '1.0.0' : '';
        #    str         reason = _firstBlock ? '    Initial version' : '';
        #
        #    select firstOnly userInfo
        #        where userInfo.id == curUserId();
        #
        #    //source += '    <date>' + date2str(systemDateGet(),321,2,-1,2,-1,4,DateFlags::None) + '</date>\n';
        #    source += '    <utcdatetime>' + datetime2str(DateTimeUtil::utcNow(),DateFlags::None) + '</utcdatetime>\n';
        #    source += '///     <author>' + userInfo.name + '</author>\n';
        #    source += '///     <version>' + ver +'</version>\n';
        #    source += '///     <reason>\n/// ' + reason + '\n///     </reason>';
        #    return source;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: EditorScripts unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #EditorScripts
    PROPERTIES
      Name                #EditorScripts
      RunOn               #Client
      Origin              #{2D0D0984-0000-1000-4BE1-54DC59156563}
      LegacyId            #2436
    ENDPROPERTIES
    
    METHODS
      SOURCE #documentation_HeaderTemplate
        #//AOSRunmode::Client
        #public void documentation_HeaderTemplate(Editor _editor)
        #{
        #    #TokenTypes
        #    #AOT
        #    #SysBPCheck
        #    #SysCompilerOutput
        #
        #    #define.startLine(2)
        #    #define.startColumn(5)
        #    #define.maxDialogString(800)
        #
        #    str source;
        #    str text;
        #    MemberFunction memberFunction = TreeNode::findNode(_editor.path());
        #    TreeNode parent = TreeNode::findNode(SysTreeNode::pathParent(_editor.path()));
        #    SysDictMethod sysDictMethod;
        #    int i;
        #    int symbol;
        #    SysScannerClass scanner;
        #    TreeNode exceptionNode;
        #    TreeNode exceptionValueNode;
        #    xRefTmpReferences tmpxRefReferences;       // the source, as the xRef sees it
        #    DictClass dictClass;
        #    ListEnumerator listEnum;
        #    str existingDoc;
        #    xppSource mySource = new xppSource();
        #
        #str formatXML(XML _xml)
        #{
        #    _xml = strReplace(_xml, '>', '>\n');
        #    _xml = strReplace(_xml, '<', '\n<');
        #
        #    _xml = strReplace(_xml, '\n<c>\n', '<c>');
        #    _xml = strReplace(_xml, '\n</c>\n', '</c>');
        #    _xml = strReplace(_xml, '\n\n', '\n');
        #
        #    return '\n'+_xml+'\n';
        #}
        #
        #    if (parent)
        #    {
        #        // Save to get latest source.
        #        parent.AOTsave();
        #
        #        source = memberFunction.AOTgetSource();
        #
        #        if (!strLen(source))
        #            return;
        #
        #        // Mark the memberfunction as dirty
        #        memberFunction.AOTsetSource(source);
        #    }
        #
        #    sysDictMethod = SysDictMethod::newMemberFunction(memberFunction);
        #
        #    if (sysDictMethod.compiledOk())
        #    {
        #        if (sysDictMethod.xmlDocumentationCanBeAutomated())
        #        {
        #            //
        #            // Truncate to max length
        #            //
        #            existingDoc = formatXml(sysDictMethod.xmlDocumentationAutomated());
        #            if (strLen(existingDoc) > #maxDialogString)
        #            {
        #                existingDoc = subStr(existingDoc, 1, #maxDialogString)+'\n...\n';
        #            }
        #
        #            if (Box::yesNo(strFmt("@SYS107202", existingDoc+'\n')+"@SYS107204", DialogButton::No, "@SYS107109") == DialogButton::No)
        #            {
        #                return;
        #            }
        #        }
        #        existingDoc = sysDictMethod.xmlDocumentationInherited();
        #
        #        if (existingDoc &&
        #            Box::yesNo(strFmt("@SYS327437", '\n'+existingDoc+'\n')+"@SYS107204", DialogButton::No, "@SYS107109") == DialogButton::No)
        #        {
        #            return;
        #        }
        #
        #        scanner = new SysScannerClass(memberFunction);
        #        appl.updatexRefSet(true);
        #        memberFunction.aoTmakeXref(1);
        #        tmpxRefReferences = xRefCreate::makeTmp(appl.lastxRef(), memberFunction.treeNodePath());
        #        appl.updatexRefSet(false);
        #
        #        //
        #        // Insert summary
        #        //
        #        text = '/// <summary>\n/// \n/// </summary>\n';
        #
        #        //
        #        // Insert parameters
        #        //
        #        for (i=1; i<=sysDictMethod.parameterCnt(); i++)
        #        {
        #            if (!sysDictMethod.parameterName(i))
        #            {
        #                // BP Deviation documented
        #                throw error("@SYS107108", '', SysInfoAction_Formrun::newFormnameControlnameDesc(formStr(SysUserSetup), identifierStr(DebuggerPopupCombo), "@SYS321"));
        #            }
        #            text += strFmt('/// <param name="%1">\n/// \n/// </param>\n', sysDictMethod.parameterName(i));
        #        }
        #
        #        //
        #        // Insert returns
        #        //
        #        if (sysDictMethod.returnType() != Types::void &&
        #            sysDictMethod.name() != #MethodNameClassDeclaration)
        #        {
        #            text += '/// <returns>\n/// \n/// </returns>\n';
        #        }
        #
        #        //
        #        // Insert remarks
        #        //
        #        text += '/// <remarks>\n/// \n/// </remarks>\n';
        #
        #        //
        #        // Insert History
        #        //
        #        text += '/// <history>\n';
        #        text += '/// ' + mySource.historyBlock(true) + '\n';
        #        text += '/// </history>\n';
        #
        #        //
        #        // Insert exceptions
        #        //
        #        if (scanner.symbolExists(#Throw_sym))
        #        {
        #            exceptionNode  = TreeNode::findNode(#SystemEnumsPath+'\\'+enumStr(Exception));
        #            scanner.firstSymbol();
        #            symbol = scanner.nextSymbol();
        #            while (symbol)
        #            {
        #                while (symbol && symbol != #Throw_sym)
        #                {
        #                    symbol = scanner.nextSymbol();
        #                }
        #                if (symbol)
        #                {
        #                    symbol = scanner.nextSymbol();
        #                    if (scanner.string() == enumStr(Exception))
        #                    {
        #                        scanner.nextSymbol();
        #                        scanner.nextSymbol();
        #                    }
        #                    //
        #                    // Get right casing
        #                    //
        #                    exceptionValueNode = exceptionNode.AOTfindChild(scanner.string());
        #                    if (exceptionValueNode)
        #                    {
        #                        text += strFmt('/// <exception cref="Exception::%1">\n/// \n/// </exception>\n', exceptionValueNode.treeNodeName());
        #                    }
        #                }
        #            }
        #        }
        #
        #        //
        #        // Insert permission
        #        //
        #        dictClass = new DictClass(classNum(CodeAccessPermission));
        #        listEnum = dictClass.extendedBy().getEnumerator();
        #        while (listEnum.moveNext())
        #        {
        #            while select tmpxRefReferences
        #                where tmpxRefReferences.ParentId == listEnum.current()
        #                  && tmpxRefReferences.Name == methodStr(CodeAccessPermission, demand)
        #                  && tmpxRefReferences.Kind == xRefKind::ClassInstanceMethod
        #            {
        #                text += strFmt('/// <permission cref="%1">\n/// \n/// </permission>\n', classId2Name(listEnum.current()));
        #
        #                //
        #                // Only add each permission class once
        #                //
        #                break;
        #            }
        #        }
        #
        #        _editor.unmark();
        #        _editor.gotoLine(1);
        #        _editor.gotoCol(1);
        #        _editor.insertLines(text);
        #        _editor.gotoLine(#startLine);
        #        _editor.gotoCol(#startColumn);
        #    }
        #    else
        #    {
        #        throw error(strFmt("@SYS97041", 1, memberFunction.treeNodePath()));
        #    }
        #}
      ENDSOURCE
      SOURCE #template_flow_history
        #public void template_flow_history(Editor editor)
        #{
        #    xppSource xppSource = new xppSource(editor.columnNo());
        #    int currentLine = editor.currentLineNo();
        #    int currentCol = editor.columnNo();
        #    Source template = xppSource.historyBlock();
        #
        #    editor.insertLines("\n/// ");
        #    editor.insertLines(template);
        #    editor.gotoLine(currentLine+5);
        #    editor.gotoCol(currentCol+5);
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: FTM

; Microsoft Dynamics AX MENUITEM : FileEditorComponentsConfig unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #FileEditorComponentsConfig
    Type: 1
    PROPERTIES
      Name                #FileEditorComponentsConfig
      Object              #FileEditorComponentsConfig
      Origin              #{45653EA5-F23F-4CBE-A478-89636762B6A9}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #FileEditorComponentsConfig
  PROPERTIES
    Name                #FileEditorComponentsConfig
    Origin              #{027E2246-6707-4B4F-BA26-3238A152AF7A}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #public class FormRun extends ObjectRun
      #{
      #}
    ENDSOURCE
    SOURCE #dispFileExists
      #display NoYesId dispFileExists()
      #{
      #    return FileEditorComponentBase::FileExistsInShareFolder();
      #}
    ENDSOURCE
    SOURCE #init
      #public void init()
      #{
      #    str description = "Create editor components file on AOS server shared folder " +
      #                      @"Proper rights is required in <AX AOS folder>\bin\Application\Share\Include folder.";
      #
      #    super();
      #
      #    SupplementalInstruction.text(description);
      #
      #    Btn_GEnFiles.enabled(!element.dispFileExists());
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Caption             #Editor Components Configuration
      Frame               #Dialog
      WindowType          #Popup
      HideToolbar         #Yes
      BackgroundColor     #Window background
      Style               #Dialog
    ENDPROPERTIES
    
    CONTAINER
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroup
          Left                #Auto (right)
          ElementPosition     #1073741822
          HierarchyParent     #DialogCommit
          Style               #DialogCommitContainer
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DialogCommit
          ElementPosition     #1431655764
          Style               #DialogCommit
          AlignChild          #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DialogContent
          ElementPosition     #715827882
          Style               #DialogContent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Footnote
          Visible             #No
          ElementPosition     #1610612734
          HierarchyParent     #DialogCommit
          FrameType           #Edged 3D Line
          Style               #MarginlessContainer
          TopMargin           #10
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Group
          ElementPosition     #1717986916
          HierarchyParent     #DialogContent
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #Btn_GenFiles
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #Group
          Text                #Generate Files
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #
            #    if (!element.dispFileExists())
            #    {
            #        FileEditorComponentBase::createFileInShareFolder();
            #    }
            #
            #    element.redraw();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #Chkbox_FilesExists
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1073741822
          HierarchyParent     #Group
          Label               #Files exists in Shared folder
          DataMethod          #dispFileExists
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #CancelButton
          ElementPosition     #1610612733
          HierarchyParent     #ButtonGroup
          Command             #264
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #OKButton
          ElementPosition     #1073741822
          HierarchyParent     #ButtonGroup
          DefaultButton       #Yes
          Command             #263
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STATICTEXT
        PROPERTIES
          Name                #MainInstruction
          ElementPosition     #858993458
          HierarchyParent     #DialogContent
          Text                #X++ Editor components Setup
          ForegroundColor     #Scroll bar
          FontSize            #13
          Style               #MainInstruction
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STATICTEXT
        PROPERTIES
          Name                #SupplementalInstruction
          AutoDeclaration     #Yes
          Width               #Column width
          ElementPosition     #1288490187
          HierarchyParent     #DialogContent
          Text                #
          DisplayLength       #80
          DisplayHeight       #2
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: CLS

; Microsoft Dynamics AX Class: AddaxEditorComponentsPlugin unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #AddaxEditorComponentsPlugin
    PROPERTIES
      Name                #AddaxEditorComponentsPlugin
      Extends             #AddaxPluginBase
      Origin              #{55A29DE7-7D3F-4858-A6B4-F54E0A042273}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #class AddaxEditorComponentsPlugin extends AddaxPluginBase implements AddaxPlugable
        #{
        #}
      ENDSOURCE
      SOURCE #configMenuFunction
        #public MenuFunction configMenuFunction()
        #{
        #    return new MenuFunction(menuitemDisplayStr(FileEditorComponentsConfig), MenuItemType::Display);
        #}
      ENDSOURCE
      SOURCE #description
        #public ClassDescription description()
        #{
        #    return @"Deploy Editor components to AOS Share\include folder. Then through SysFileDeployment framework push to connected clients. " + "\n" +
        #           @"User requires to have proper rights in <AX client folder>\bin\EditorComponents folder for the files to be copied there.";
        #}
      ENDSOURCE
      SOURCE #name
        #public Name name()
        #{
        #    return "Editor components for X++ editors";
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: FileEditorComponentOutlining unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #FileEditorComponentOutlining
    PROPERTIES
      Name                #FileEditorComponentOutlining
      Extends             #FileEditorComponentBase
      Origin              #{C19A8274-704F-4646-9BFF-6E0F9D8D720A}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #class FileEditorComponentOutlining extends FileEditorComponentBase
        #{
        #}
      ENDSOURCE
      SOURCE #filename
        #public filename filename()
        #{
        #    return "JAEE.AX.EditorExtensions.Outlining.dll";
        #}
      ENDSOURCE
      SOURCE #resourceNode
        #public resourceNode resourceNode()
        #{
        #    return SysResource::getResourceNode(resourceStr(JAEE_AX_EditorExtensions_Outlining_dll));
        #}
      ENDSOURCE
      SOURCE #filesToDeployHandler
        #public static void filesToDeployHandler(XppPrePostArgs _args)
        #{
        #    container filesToDeploy = _args.getReturnValue();
        #
        #    if (AddaxPluginTable::findClassName(classStr(AddaxEditorComponentsPlugin)).Active)
        #    {
        #        filesToDeploy += classNum(FileEditorComponentOutlining);
        #    }
        #
        #    _args.setReturnValue(filesToDeploy);
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: FileEditorComponentHighlightWord unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #FileEditorComponentHighlightWord
    PROPERTIES
      Name                #FileEditorComponentHighlightWord
      Extends             #FileEditorComponentBase
      Origin              #{A07AE395-2FEF-4A89-A57A-C386746D991C}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #class FileEditorComponentHighlightWord extends FileEditorComponentBase
        #{
        #}
      ENDSOURCE
      SOURCE #filename
        #public filename filename()
        #{
        #    return "JAEE.AX.EditorExtensions.HighlightWord.dll";
        #}
      ENDSOURCE
      SOURCE #resourceNode
        #public resourceNode resourceNode()
        #{
        #    return SysResource::getResourceNode(resourceStr(JAEE_AX_EditorExtensions_HighlightWord_d));
        #}
      ENDSOURCE
      SOURCE #filesToDeployHandler
        #public static void filesToDeployHandler(XppPrePostArgs _args)
        #{
        #    container filesToDeploy = _args.getReturnValue();
        #
        #    if (AddaxPluginTable::findClassName(classStr(AddaxEditorComponentsPlugin)).Active)
        #    {
        #        filesToDeploy += classNum(FileEditorComponentHighlightWord);
        #    }
        #
        #    _args.setReturnValue(filesToDeploy);
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: FileEditorComponentBraceMatching unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #FileEditorComponentBraceMatching
    PROPERTIES
      Name                #FileEditorComponentBraceMatching
      Extends             #FileEditorComponentBase
      Origin              #{08340DF6-0566-436D-80B8-52ED7183C36F}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #class FileEditorComponentBraceMatching extends FileEditorComponentBase
        #{
        #}
      ENDSOURCE
      SOURCE #filename
        #public filename filename()
        #{
        #    return "JAEE.AX.EditorExtensions.BraceMatching.dll";
        #}
      ENDSOURCE
      SOURCE #resourceNode
        #public resourceNode resourceNode()
        #{
        #    return SysResource::getResourceNode(resourceStr(JAEE_AX_EditorExtensions_BraceMatching_d));
        #}
      ENDSOURCE
      SOURCE #filesToDeployHandler
        #public static void filesToDeployHandler(XppPrePostArgs _args)
        #{
        #    container filesToDeploy = _args.getReturnValue();
        #
        #    if (AddaxPluginTable::findClassName(classStr(AddaxEditorComponentsPlugin)).Active)
        #    {
        #        filesToDeploy += classNum(FileEditorComponentBraceMatching);
        #    }
        #
        #    _args.setReturnValue(filesToDeploy);
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: RES

; Microsoft Dynamics AX RESOURCE : JAEE_AX_EditorExtensions_Outlining_dll unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  RESOURCE #JAEE_AX_EditorExtensions_Outlining_dll
    PROPERTIES
      Name                #JAEE_AX_EditorExtensions_Outlining_dll
      Filename            #JAEE.AX.EditorExtensions.Outlining.dll
      Label               #
      HelpText            #
      ConfigurationKey    #
      Origin              #{E169DE64-E815-4284-A150-A7B188A3CF08}
    ENDPROPERTIES
    
    BINARY 14394
      07 FD 07 07 FD FC 03 53 00 79 00 73 00 52 00 65 00 73 00 6F 00 75 00 72 00 63 00 65 00 54 00 79
      00 70 00 65 00 00 00 FF 07 07 FD 30 08 38 00 00 07 FD 30 00 38 00 00 4D 5A 90 00 03 00 00 00 04
      00 00 00 FF FF 00 00 B8 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 00 00 00 0E 1F BA 0E 00 B4 09 CD 21
      B8 01 4C CD 21 54 68 69 73 20 70 72 6F 67 72 61 6D 20 63 61 6E 6E 6F 74 20 62 65 20 72 75 6E 20
      69 6E 20 44 4F 53 20 6D 6F 64 65 2E 0D 0D 0A 24 00 00 00 00 00 00 00 50 45 00 00 4C 01 03 00 3D
      47 17 52 00 00 00 00 00 00 00 00 E0 00 02 21 0B 01 0B 00 00 2E 00 00 00 08 00 00 00 00 00 00 CE
      4D 00 00 00 20 00 00 00 60 00 00 00 00 40 00 00 20 00 00 00 02 00 00 04 00 00 00 00 00 00 00 04
      00 00 00 00 00 00 00 00 A0 00 00 00 02 00 00 00 00 00 00 03 00 40 85 00 00 10 00 00 10 00 00 00
      00 10 00 00 10 00 00 00 00 00 00 10 00 00 00 00 00 00 00 00 00 00 00 78 4D 00 00 53 00 00 00 00
      60 00 00 10 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 00 00 0C 00 00 00 C8
      4C 00 00 1C 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 08 00 00 00 00 00 00 00 00 00 00 00 08
      20 00 00 48 00 00 00 00 00 00 00 00 00 00 00 2E 74 65 78 74 00 00 00 D4 2D 00 00 00 20 00 00 00
      2E 00 00 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 60 2E 72 73 72 63 00 00 00 10
      04 00 00 00 60 00 00 00 06 00 00 00 30 00 00 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 40 2E
      72 65 6C 6F 63 00 00 0C 00 00 00 00 80 00 00 00 02 00 00 00 36 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 40 00 00 42 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 B0 4D 00 00 00 00 00 00 48
      00 00 00 02 00 05 00 D8 2B 00 00 F0 20 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 1E 02 28 14 00 00 0A 2A 13 30 02 00 16 00 00 00 01 00 00 11 00 02 7B 15 00
      00 0A 73 11 00 00 06 75 04 00 00 1B 0A 2B 00 06 2A 00 00 13 30 03 00 31 00 00 00 02 00 00 11 73
      16 00 00 0A 0B 07 03 7D 17 00 00 0A 00 07 FE 06 18 00 00 0A 73 19 00 00 0A 0A 07 7B 17 00 00 0A
      6F 1A 00 00 0A 06 6F 01 00 00 2B 0C 2B 00 08 2A 1E 02 28 14 00 00 0A 2A 00 00 00 13 30 01 00 0B
      00 00 00 03 00 00 11 02 7B 01 00 00 04 0A 2B 00 06 2A 22 02 03 7D 01 00 00 04 2A 13 30 01 00 0B
      00 00 00 03 00 00 11 02 7B 02 00 00 04 0A 2B 00 06 2A 22 02 03 7D 02 00 00 04 2A 13 30 01 00 0B
      00 00 00 03 00 00 11 02 7B 03 00 00 04 0A 2B 00 06 2A 22 02 03 7D 03 00 00 04 2A 13 30 01 00 0B
      00 00 00 04 00 00 11 02 7B 04 00 00 04 0A 2B 00 06 2A 22 02 03 7D 04 00 00 04 2A 1E 02 28 14 00
      00 0A 2A 13 30 01 00 0B 00 00 00 03 00 00 11 02 7B 05 00 00 04 0A 2B 00 06 2A 22 02 03 7D 05 00
      00 04 2A 1E 02 28 0B 00 00 06 2A 13 30 03 00 30 00 00 00 05 00 00 11 02 7B 0D 00 00 04 0A 06 0B
      07 03 28 1D 00 00 0A 74 02 00 00 1B 0C 02 7C 0D 00 00 04 08 07 28 02 00 00 2B 0A 06 07 FE 01 16
      FE 01 0D 09 2D D8 2A 13 30 03 00 30 00 00 00 05 00 00 11 02 7B 0D 00 00 04 0A 06 0B 07 03 28 1F
      00 00 0A 74 02 00 00 1B 0C 02 7C 0D 00 00 04 08 07 28 02 00 00 2B 0A 06 07 FE 01 16 FE 01 0D 09
      2D D8 2A 03 30 04 00 73 00 00 00 00 00 00 00 02 72 01 00 00 70 7D 06 00 00 04 02 72 05 00 00 70
      7D 07 00 00 04 02 72 09 00 00 70 7D 08 00 00 04 02 72 19 00 00 70 7D 09 00 00 04 02 28 14 00 00
      0A 00 00 02 03 7D 0A 00 00 04 02 03 6F 20 00 00 0A 7D 0B 00 00 04 02 73 21 00 00 0A 7D 0C 00 00
      04 02 28 14 00 00 06 00 02 7B 0A 00 00 04 02 FE 06 13 00 00 06 73 22 00 00 0A 6F 23 00 00 0A 00
      00 2A 00 13 30 02 00 56 00 00 00 06 00 00 11 28 2C 00 00 0A 6F 2D 00 00 0A 02 7B 11 00 00 04 33
      0F 02 7B 10 00 00 04 1F FE FE 01 16 FE 01 2B 01 17 0C 08 2D 0B 02 16 7D 10 00 00 04 02 0A 2B 13
      16 73 20 00 00 06 0A 06 02 7B 12 00 00 04 7D 12 00 00 04 06 02 7B 14 00 00 04 7D 13 00 00 04 06
      0B 2B 00 07 2A 00 00 13 30 01 00 0B 00 00 00 07 00 00 11 02 28 19 00 00 06 0A 2B 00 06 2A 00 1B
      30 07 00 EF 02 00 00 08 00 00 11 02 7B 10 00 00 04 0C 08 45 03 00 00 00 07 00 00 00 09 00 00 00
      02 00 00 00 2B 07 38 9D 02 00 00 2B 05 38 B9 02 00 00 02 15 7D 10 00 00 04 00 02 7B 13 00 00 04
      6F 2E 00 00 0A 16 FE 01 16 FE 01 0D 09 2D 05 38 97 02 00 00 02 02 7B 12 00 00 04 7B 0C 00 00 04
      7D 15 00 00 04 02 02 7B 12 00 00 04 7B 0B 00 00 04 7D 16 00 00 04 02 02 7B 13 00 00 04 16 6F 2F
      00 00 0A 13 04 12 04 28 30 00 00 0A 02 7B 13 00 00 04 02 7B 13 00 00 04 6F 2E 00 00 0A 17 59 6F
      2F 00 00 0A 13 04 12 04 28 31 00 00 0A 73 32 00 00 0A 13 04 12 04 02 7B 16 00 00 04 16 28 33 00
      00 0A 7D 17 00 00 04 02 02 7C 17 00 00 04 28 30 00 00 0A 13 05 12 05 28 34 00 00 0A 6F 35 00 00
      0A 7D 18 00 00 04 02 02 7C 17 00 00 04 28 31 00 00 0A 13 05 12 05 28 34 00 00 0A 6F 35 00 00 0A
      7D 19 00 00 04 00 02 02 7B 15 00 00 04 6F 36 00 00 0A 7D 1E 00 00 04 02 17 7D 10 00 00 04 38 AE
      01 00 00 02 02 7C 1E 00 00 04 28 37 00 00 0A 7D 1A 00 00 04 00 02 7B 12 00 00 04 7E 38 00 00 0A
      7D 09 00 00 04 02 7B 1A 00 00 04 6F 03 00 00 06 02 7B 19 00 00 04 30 15 02 7B 1A 00 00 04 6F 0C
      00 00 06 02 7B 18 00 00 04 FE 04 2B 01 17 0D 09 3A 5B 01 00 00 00 02 02 7B 16 00 00 04 02 7B 1A
      00 00 04 6F 03 00 00 06 6F 39 00 00 0A 7D 1B 00 00 04 02 02 7B 16 00 00 04 02 7B 1A 00 00 04 6F
      0C 00 00 06 6F 39 00 00 0A 7D 1C 00 00 04 02 02 7B 1A 00 00 04 6F 03 00 00 06 7D 1D 00 00 04 38
      89 00 00 00 00 02 7B 16 00 00 04 02 7B 1D 00 00 04 6F 39 00 00 0A 6F 3A 00 00 0A 0A 02 7B 1D 00
      00 04 02 7B 1A 00 00 04 6F 0C 00 00 06 FE 01 16 FE 01 0D 09 2D 25 00 02 7B 12 00 00 04 25 7B 09
      00 00 04 72 53 00 00 70 06 28 3B 00 00 0A 28 3C 00 00 0A 7D 09 00 00 04 00 2B 23 00 02 7B 12 00
      00 04 25 7B 09 00 00 04 72 5B 00 00 70 06 28 3B 00 00 0A 28 3C 00 00 0A 7D 09 00 00 04 00 02 25
      7B 1D 00 00 04 17 58 7D 1D 00 00 04 00 02 7B 1D 00 00 04 02 7B 1A 00 00 04 6F 0C 00 00 06 FE 02
      16 FE 01 0D 09 3A 5A FF FF FF 02 02 7B 1B 00 00 04 6F 3D 00 00 0A 02 7B 1A 00 00 04 6F 05 00 00
      06 28 3E 00 00 0A 02 7B 1C 00 00 04 6F 3F 00 00 0A 73 32 00 00 0A 16 16 02 7B 12 00 00 04 7B 08
      00 00 04 02 7B 12 00 00 04 7B 09 00 00 04 73 40 00 00 0A 73 41 00 00 0A 7D 0F 00 00 04 02 18 7D
      10 00 00 04 17 0B DE 2F 02 17 7D 10 00 00 04 00 00 02 7C 1E 00 00 04 28 42 00 00 0A 0D 09 3A 40
      FE FF FF 02 28 21 00 00 06 00 00 16 0B DE 08 02 28 1E 00 00 06 00 DC 00 07 2A 00 41 1C 00 00 04
      00 00 00 00 00 00 00 E4 02 00 00 E4 02 00 00 08 00 00 00 00 00 00 00 13 30 01 00 0B 00 00 00 09
      00 00 11 02 7B 0F 00 00 04 0A 2B 00 06 2A 1A 73 43 00 00 0A 7A 00 00 1B 30 02 00 2B 00 00 00 0A
      00 00 11 02 7B 10 00 00 04 0B 07 17 59 45 02 00 00 00 04 00 00 00 02 00 00 00 2B 04 2B 04 2B 02
      2B 0B DE 08 02 28 21 00 00 06 00 DC 00 2A 00 01 10 00 00 02 00 1F 00 02 21 00 08 00 00 00 00 13
      30 01 00 0B 00 00 00 0B 00 00 11 02 7B 0F 00 00 04 0A 2B 00 06 2A 7A 02 28 14 00 00 0A 02 03 7D
      10 00 00 04 02 28 2C 00 00 0A 6F 2D 00 00 0A 7D 11 00 00 04 2A 6A 02 15 7D 10 00 00 04 02 7C 1E
      00 00 04 FE 16 0B 00 00 1B 6F 29 00 00 0A 00 2A 00 00 00 13 30 02 00 1C 00 00 00 0C 00 00 11 1F
      FE 73 20 00 00 06 0A 06 02 7D 12 00 00 04 06 03 7D 14 00 00 04 06 0B 2B 00 07 2A 13 30 02 00 22
      00 00 00 0D 00 00 11 00 04 6F 44 00 00 0A 02 7B 0A 00 00 04 6F 20 00 00 0A FE 01 0A 06 2D 02 2B
      07 02 28 14 00 00 06 00 2A 1E 02 28 14 00 00 0A 2A 00 00 13 30 03 00 2D 00 00 00 0E 00 00 11 03
      02 7B 20 00 00 04 7B 0B 00 00 04 28 16 00 00 06 0B 12 01 02 7B 1F 00 00 04 16 28 33 00 00 0A 0B
      12 01 28 45 00 00 0A 0A 2B 00 06 2A 00 00 00 13 30 02 00 19 00 00 00 0E 00 00 11 03 02 7B 1F 00
      00 04 28 16 00 00 06 0B 12 01 28 45 00 00 0A 0A 2B 00 06 2A 00 00 00 1B 30 05 00 8D 03 00 00 0F
      00 00 11 73 22 00 00 06 13 14 11 14 02 7D 20 00 00 04 00 11 14 02 7B 0A 00 00 04 6F 20 00 00 0A
      7D 1F 00 00 04 73 21 00 00 0A 0A 14 0B 00 11 14 7B 1F 00 00 04 6F 46 00 00 0A 6F 47 00 00 0A 13
      15 38 CE 01 00 00 11 15 6F 48 00 00 0A 0C 00 15 0D 08 6F 3A 00 00 0A 13 04 11 04 02 7B 06 00 00
      04 1A 6F 49 00 00 0A 25 0D 15 FE 01 13 16 11 16 3A FC 00 00 00 00 07 2D 03 17 2B 06 07 6F 07 00
      00 06 13 05 11 04 09 12 06 28 15 00 00 06 13 16 11 16 2D 06 11 05 17 58 13 06 11 05 11 06 33 06
      07 14 FE 01 2B 01 17 13 16 11 16 3A 85 00 00 00 00 06 73 0E 00 00 06 13 07 11 07 07 6F 07 00 00
      06 6F 08 00 00 06 00 11 07 07 6F 03 00 00 06 6F 04 00 00 06 00 11 07 07 6F 05 00 00 06 6F 06 00
      00 06 00 11 07 08 6F 35 00 00 0A 6F 0D 00 00 06 00 11 07 6F 4A 00 00 0A 00 73 0B 00 00 06 13 08
      11 08 11 06 6F 08 00 00 06 00 11 08 08 6F 35 00 00 0A 6F 04 00 00 06 00 11 08 09 6F 06 00 00 06
      00 11 08 07 6F 09 00 00 06 6F 0A 00 00 06 00 11 08 0B 00 2B 36 00 73 0B 00 00 06 13 09 11 09 11
      06 6F 08 00 00 06 00 11 09 08 6F 35 00 00 0A 6F 04 00 00 06 00 11 09 09 6F 06 00 00 06 00 11 09
      07 6F 0A 00 00 06 00 11 09 0B 00 00 38 A2 00 00 00 11 04 02 7B 07 00 00 04 1A 6F 49 00 00 0A 25
      0D 15 FE 01 13 16 11 16 3A 86 00 00 00 00 07 2D 03 17 2B 06 07 6F 07 00 00 06 13 05 11 04 09 12
      0A 28 15 00 00 06 13 16 11 16 2D 04 11 05 13 0A 07 2C 0B 11 05 11 0A FE 01 16 FE 01 2B 01 17 13
      16 11 16 2D 4D 00 06 73 0E 00 00 06 13 0B 11 0B 11 05 6F 08 00 00 06 00 11 0B 07 6F 03 00 00 06
      6F 04 00 00 06 00 11 0B 07 6F 05 00 00 06 6F 06 00 00 06 00 11 0B 08 6F 35 00 00 0A 6F 0D 00 00
      06 00 11 0B 6F 4A 00 00 0A 00 07 6F 09 00 00 06 0B 00 00 00 11 15 6F 26 00 00 0A 13 16 11 16 3A
      22 FE FF FF DE 14 11 15 14 FE 01 13 16 11 16 2D 08 11 15 6F 29 00 00 0A 00 DC 00 02 7B 0C 00 00
      04 11 14 FE 06 23 00 00 06 73 4B 00 00 0A 28 03 00 00 2B 73 4D 00 00 0A 13 0C 06 11 14 FE 06 24
      00 00 06 73 4B 00 00 0A 28 03 00 00 2B 73 4D 00 00 0A 13 0D 11 0C 73 4E 00 00 0A 13 0E 11 0D 73
      4E 00 00 0A 13 0F 11 0E 11 0F 28 4F 00 00 0A 13 10 20 FF FF FF 7F 13 11 15 13 12 11 10 6F 50 00
      00 0A 16 FE 02 16 FE 01 13 16 11 16 2D 30 00 11 10 16 6F 51 00 00 0A 13 17 12 17 28 52 00 00 0A
      13 11 11 10 11 10 6F 50 00 00 0A 17 59 6F 51 00 00 0A 13 17 12 17 28 53 00 00 0A 13 12 00 11 0D
      6F 54 00 00 0A 16 FE 02 16 FE 01 13 16 11 16 2D 3E 00 11 11 11 0D 16 6F 55 00 00 0A 13 17 12 17
      28 52 00 00 0A 28 56 00 00 0A 13 11 11 12 11 0D 11 0D 6F 54 00 00 0A 17 59 6F 55 00 00 0A 13 17
      12 17 28 53 00 00 0A 28 57 00 00 0A 13 12 00 02 11 14 7B 1F 00 00 04 7D 0B 00 00 04 02 06 7D 0C
      00 00 04 11 11 11 12 FE 02 13 16 11 16 2D 3F 00 02 7B 0B 00 00 04 13 13 02 7B 0D 00 00 04 14 FE
      01 13 16 11 16 2D 26 02 7B 0D 00 00 04 02 02 7B 0B 00 00 04 11 11 11 12 28 58 00 00 0A 73 59 00
      00 0A 73 5A 00 00 0A 6F 5B 00 00 0A 00 00 00 2A 00 00 00 41 1C 00 00 02 00 00 00 3E 00 00 00 E5
      01 00 00 23 02 00 00 14 00 00 00 00 00 00 00 13 30 03 00 38 00 00 00 10 00 00 11 00 04 15 54 02
      6F 5C 00 00 0A 03 19 58 FE 02 16 FE 01 0B 07 2D 1C 00 02 03 17 58 6F 5D 00 00 0A 04 28 5E 00 00
      0A 16 FE 01 0B 07 2D 04 17 0A 2B 05 00 16 0A 2B 00 06 2A 13 30 03 00 4D 00 00 00 11 00 00 11 00
      03 02 6F 03 00 00 06 6F 39 00 00 0A 0A 02 6F 03 00 00 06 02 6F 0C 00 00 06 2E 0E 03 02 6F 0C 00
      00 06 6F 39 00 00 0A 2B 01 06 0B 06 6F 3D 00 00 0A 02 6F 05 00 00 06 28 3E 00 00 0A 07 6F 3F 00
      00 0A 73 32 00 00 0A 0C 2B 00 08 2A 00 00 00 42 53 4A 42 01 00 01 00 00 00 00 00 0C 00 00 00 76
      34 2E 30 2E 33 30 33 31 39 00 00 00 00 05 00 6C 00 00 00 BC 0A 00 00 23 7E 00 00 28 0B 00 00 08
      0F 00 00 23 53 74 72 69 6E 67 73 00 00 00 00 30 1A 00 00 68 00 00 00 23 55 53 00 98 1A 00 00 10
      00 00 00 23 47 55 49 44 00 00 00 A8 1A 00 00 48 06 00 00 23 42 6C 6F 62 00 00 00 00 00 00 00 02
      00 00 01 57 17 B6 0B 09 1E 00 00 00 FA 25 33 00 16 00 00 01 00 00 00 41 00 00 00 08 00 00 00 20
      00 00 00 24 00 00 00 14 00 00 00 07 00 00 00 5E 00 00 00 28 00 00 00 11 00 00 00 01 00 00 00 01
      00 00 00 03 00 00 00 07 00 00 00 0E 00 00 00 07 00 00 00 11 00 00 00 01 00 00 00 07 00 00 00 03
      00 00 00 02 00 00 00 03 00 00 00 02 00 00 00 00 00 0A 00 01 00 00 00 00 00 06 00 97 00 90 00 0A
      00 E4 00 C0 00 0A 00 F4 00 C0 00 0E 00 1D 01 C0 00 12 00 6E 01 52 01 0A 00 87 01 C0 00 12 00 05
      03 52 01 06 00 37 03 1C 03 06 00 46 03 90 00 12 00 55 03 52 01 06 00 9A 03 1C 03 0A 00 A8 03 C0
      00 12 00 B3 03 52 01 12 00 DC 03 52 01 12 00 1A 04 52 01 06 00 80 04 61 04 06 00 AE 04 94 04 06
      00 D9 04 C7 04 06 00 F0 04 C7 04 06 00 0D 05 C7 04 06 00 2C 05 C7 04 06 00 45 05 C7 04 06 00 5E
      05 C7 04 06 00 79 05 C7 04 06 00 94 05 C7 04 06 00 AD 05 61 04 06 00 C1 05 C7 04 06 00 DA 05 C7
      04 06 00 0A 06 F7 05 77 00 1E 06 00 00 06 00 4D 06 2D 06 06 00 6D 06 2D 06 16 00 D0 06 AE 06 06
      00 E0 06 90 00 0A 00 E5 06 C0 00 1A 00 3A 07 19 07 06 00 77 07 90 00 1A 00 7E 07 19 07 1A 00 8D
      07 19 07 06 00 CC 07 2D 06 06 00 E7 07 90 00 06 00 09 08 F8 07 06 00 6D 08 5A 08 06 00 79 08 1C
      03 06 00 87 08 5A 08 06 00 93 08 90 00 12 00 4F 0B 52 01 23 00 90 0B 00 00 06 00 71 0C F7 05 06
      00 89 0C F8 07 12 00 C9 0C 52 01 12 00 E9 0C 52 01 06 00 27 0D 90 00 0E 00 6C 0D C0 00 0A 00 7F
      0D C0 00 06 00 89 0D 90 00 12 00 9F 0D 52 01 12 00 E6 0D 52 01 06 00 1E 0E 90 00 06 00 3B 0E 90
      00 1E 00 5A 0E 4E 0E 12 00 6C 0E 52 01 06 00 AF 0E 90 0E 06 00 C4 0E 90 00 06 00 F8 0E 90 00 00
      00 00 00 01 00 00 00 00 00 01 00 01 00 00 01 10 00 31 00 49 00 05 00 01 00 01 00 00 00 10 00 62
      00 49 00 05 00 01 00 03 00 00 00 10 00 70 00 49 00 0C 00 05 00 0C 00 00 01 10 00 77 00 49 00 05
      00 06 00 0F 00 03 01 10 00 4F 07 00 00 05 00 0E 00 17 00 03 01 10 00 4C 08 00 00 05 00 0F 00 19
      00 03 01 10 00 C6 0D 00 00 05 00 1F 00 22 00 01 00 08 02 3E 00 01 00 23 02 3E 00 01 00 40 02 3E
      00 01 00 57 02 41 00 01 00 B8 02 3E 00 01 00 D9 02 4E 00 01 00 E3 02 4E 00 01 00 EB 02 4E 00 01
      00 F4 02 4E 00 01 00 FE 02 51 00 01 00 13 03 55 00 01 00 3E 03 59 00 01 00 6B 03 61 00 06 00 FE
      02 51 00 01 00 7F 09 18 03 01 00 80 0A 3E 00 01 00 8B 0A 3E 00 06 00 CB 0A 32 03 06 00 3C 04 36
      03 06 00 D5 0A 36 03 06 00 E0 0A 59 00 06 00 F5 0A 55 00 06 00 0B 0B 3A 03 06 00 18 0B 3E 00 06
      00 2E 0B 3E 00 06 00 42 0B 3E 03 06 00 61 0B 42 03 06 00 71 0B 42 03 06 00 7F 0B 3E 00 06 00 9B
      0B 47 03 06 00 DA 0D 55 00 06 00 CB 0A 32 03 7C 20 00 00 00 00 E6 01 7A 01 1A 00 01 00 B9 20 00
      00 00 00 86 18 8E 01 26 00 02 00 C4 20 00 00 00 00 86 08 94 01 2A 00 02 00 DB 20 00 00 00 00 86
      08 A2 01 2E 00 02 00 E4 20 00 00 00 00 86 08 B0 01 2A 00 03 00 FB 20 00 00 00 00 86 08 C0 01 2E
      00 03 00 04 21 00 00 00 00 86 08 D0 01 2A 00 04 00 1B 21 00 00 00 00 86 08 DA 01 2E 00 04 00 24
      21 00 00 00 00 86 08 E4 01 33 00 05 00 3B 21 00 00 00 00 86 08 F6 01 38 00 05 00 44 21 00 00 00
      00 86 18 8E 01 26 00 06 00 4C 21 00 00 00 00 86 08 A0 02 2A 00 06 00 63 21 00 00 00 00 86 08 AC
      02 2E 00 06 00 6C 21 00 00 00 00 86 18 8E 01 26 00 07 00 74 21 00 00 00 00 E6 09 77 03 69 00 07
      00 B0 21 00 00 00 00 E6 09 87 03 69 00 08 00 EC 21 00 00 00 00 86 18 8E 01 73 00 09 00 BC 26 00
      00 00 00 E6 01 D4 03 79 00 0A 00 E4 26 00 00 00 00 81 00 F8 03 88 00 0B 00 80 27 00 00 00 00 81
      00 06 04 26 00 0D 00 38 2B 00 00 00 00 91 00 0E 04 8F 00 0D 00 7C 2B 00 00 00 00 91 00 27 04 97
      00 10 00 50 20 00 00 00 00 86 18 8E 01 26 00 12 00 58 20 00 00 00 00 86 00 64 07 0D 02 12 00 6C
      22 00 00 00 00 E1 01 9F 08 F6 02 12 00 D0 22 00 00 00 00 E1 01 49 09 0E 03 12 00 E8 22 00 00 00
      00 E1 01 76 09 14 03 12 00 00 26 00 00 00 00 E1 09 8C 09 20 03 12 00 17 26 00 00 00 00 E1 01 32
      0A 26 00 12 00 20 26 00 00 00 00 E1 01 5D 0A 26 00 12 00 68 26 00 00 00 00 E1 09 A0 0A 2E 03 12
      00 7F 26 00 00 00 00 86 18 8E 01 2E 00 12 00 9E 26 00 00 00 00 81 00 A6 0B 26 00 13 00 12 27 00
      00 00 00 86 18 8E 01 26 00 13 00 1C 27 00 00 00 00 86 00 EB 0D 1C 04 13 00 58 27 00 00 00 00 86
      00 FA 0D 1C 04 14 00 00 00 01 00 FE 02 00 00 01 00 36 04 00 00 01 00 36 04 00 00 01 00 36 04 00
      00 01 00 36 04 00 00 01 00 36 04 00 00 01 00 36 04 00 00 01 00 36 04 00 00 01 00 FE 02 00 00 01
      00 3C 04 00 00 01 00 42 04 00 00 02 00 49 04 00 00 01 00 4B 04 00 00 02 00 50 04 02 00 03 00 5B
      04 00 00 01 00 8D 04 00 00 02 00 13 03 00 00 01 00 80 0A 00 00 01 00 09 0E 00 00 01 00 09 0E 02
      00 09 00 05 00 06 00 07 00 26 00 07 00 AD 00 07 00 2A 00 07 00 B5 00 07 00 B9 00 81 00 8E 01 26
      00 89 00 8E 01 A7 00 91 00 8E 01 A7 00 99 00 8E 01 A7 00 A1 00 8E 01 A7 00 A9 00 8E 01 A7 00 B1
      00 8E 01 A7 00 B9 00 8E 01 A7 00 C1 00 8E 01 A7 00 C9 00 8E 01 A7 00 D1 00 8E 01 AC 00 D9 00 8E
      01 A7 00 E1 00 8E 01 A7 00 E9 00 8E 01 B1 00 F9 00 8E 01 2E 00 01 01 8E 01 26 00 09 01 8E 01 B7
      00 19 01 8E 01 B7 00 21 01 8E 01 A7 00 09 00 8E 01 26 00 1C 00 FE 02 51 00 2C 00 8E 01 26 00 2C
      00 FE 02 51 00 2C 00 64 07 0D 02 34 00 8E 01 40 02 31 01 A0 07 46 02 39 01 AF 07 4C 02 41 01 8E
      01 26 00 49 01 F0 07 8A 02 51 01 15 08 96 02 49 01 25 08 8A 02 29 00 2C 08 C2 02 3C 00 8E 01 26
      00 44 00 8E 01 40 02 29 00 40 08 D5 02 4C 00 3B 09 04 03 59 01 3B 09 0E 03 69 01 76 09 14 03 54
      00 26 0A 29 03 69 01 57 0A 26 00 71 01 78 0A 26 00 69 01 26 0A 2E 03 89 01 8E 01 26 00 91 01 90
      0C 5D 03 91 01 A2 0C 2A 00 69 00 B6 0C 2A 00 69 00 C0 0C 7A 03 79 00 D7 0C 80 03 79 00 E1 0C 80
      03 79 00 8E 01 86 03 79 00 FA 0C 90 03 99 01 06 0D 9A 03 79 01 18 0D 2A 00 3C 00 3B 09 A0 03 5C
      00 26 0A 29 03 A9 01 2E 0D 4E 00 39 00 34 0D B2 03 79 01 4A 0D B9 03 A9 01 52 0D BD 03 A9 01 59
      0D C3 03 79 01 D7 0C 80 03 99 01 60 0D C9 03 79 01 E1 0C 80 03 B1 01 8E 01 D3 03 64 00 8E 01 E3
      03 5C 00 76 09 14 03 C1 01 8E 01 26 00 C9 01 BC 0D C2 02 79 00 0B 0E 24 04 39 00 14 0E 32 04 6C
      00 3B 09 04 03 74 00 26 0A 29 03 A9 01 2F 0E 4D 04 3C 00 37 0E 55 04 7C 00 8E 01 40 02 E9 01 65
      0E 66 04 84 00 8E 01 8F 04 F1 01 8E 01 99 04 F1 01 85 0E A4 04 8C 00 B6 0C 2A 00 8C 00 C0 0C B9
      04 D1 01 D7 0C 2A 00 D1 01 E1 0C 2A 00 84 00 B6 0C 2A 00 84 00 C0 0C B9 04 01 02 C9 0E BF 04 01
      02 CD 0E BF 04 D1 01 D1 0E C5 04 79 00 8E 01 CD 04 51 00 8E 01 D6 04 14 00 DC 0E DC 04 A9 01 E3
      0E 2A 00 A9 01 EE 0E 27 05 09 02 FE 0E 2C 05 21 00 E3 00 7C 02 2E 00 6B 00 07 06 2E 00 23 00 B3
      05 2E 00 5B 00 B3 05 2E 00 83 00 26 06 2E 00 73 00 14 06 2E 00 13 00 43 05 2E 00 1B 00 8B 05 2E
      00 7B 00 1D 06 2E 00 2B 00 B3 05 2E 00 33 00 B9 05 2E 00 3B 00 D0 05 2E 00 43 00 EC 05 2E 00 4B
      00 B3 05 41 00 E3 00 7C 02 43 00 8B 00 BE 00 43 00 93 00 60 01 43 00 9B 00 03 02 60 00 E3 00 7C
      02 61 00 E3 00 7C 02 80 00 E3 00 7C 02 81 00 E3 00 7C 02 A0 00 E3 00 7C 02 A1 00 E3 00 7C 02 C0
      00 E3 00 7C 02 C3 00 E3 00 7C 02 E0 00 E3 00 7C 02 E3 00 E3 00 7C 02 00 01 E3 00 7C 02 03 01 E3
      00 7C 02 20 01 E3 00 7C 02 40 01 E3 00 7C 02 80 01 E3 00 7C 02 A0 01 E3 00 7C 02 20 03 5B 01 7C
      02 40 03 5B 01 7C 02 80 03 5B 01 7C 02 A0 03 5B 01 7C 02 E0 03 5B 01 7C 02 00 04 5B 01 7C 02 24
      02 62 02 81 02 85 02 AC 02 63 03 74 03 EB 03 F7 03 00 04 05 04 09 04 18 04 2A 04 E3 04 33 05 38
      05 05 00 01 00 00 00 6B 03 0A 00 03 00 01 00 04 00 05 00 07 00 06 00 00 00 76 02 45 00 00 00 80
      02 45 00 00 00 8C 02 45 00 00 00 92 02 49 00 00 00 D1 02 45 00 00 00 B4 0B 50 03 00 00 4A 0C 59
      03 10 00 10 00 02 00 08 00 0F 00 02 00 01 00 04 00 03 00 02 00 03 00 03 00 01 00 06 00 05 00 02
      00 05 00 05 00 01 00 08 00 07 00 02 00 07 00 07 00 02 00 09 00 09 00 01 00 0A 00 09 00 01 00 0D
      00 0B 00 02 00 0C 00 0B 00 02 00 1C 00 0D 00 02 00 1F 00 0F 00 07 00 32 00 49 00 07 00 34 00 4B
      00 07 00 36 00 4D 00 07 00 38 00 4F 00 07 00 3A 00 51 00 07 00 3C 00 53 00 07 00 3E 00 55 00 13
      00 A0 00 16 02 1D 02 2D 02 34 02 C7 02 CE 02 DF 02 EA 02 AA 03 DB 03 3C 04 44 04 5B 04 87 04 B0
      04 04 80 00 00 00 00 02 00 00 00 00 00 00 00 00 00 00 00 8B 06 00 00 04 00 00 00 00 00 00 00 00
      00 00 00 01 00 87 00 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 0A 00 9E 00 00 00 00 00 0A
      00 00 00 00 00 00 00 00 00 00 00 0A 00 FE 00 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 0A
      00 31 01 00 00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 01 00 AE 06 00 00 00 00 0A 00 00 00 00
      00 00 00 00 00 00 00 0A 00 F6 06 00 00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 01 00 42 0E 00
      00 00 00 06 00 02 00 07 00 05 00 08 00 05 00 00 00 00 00 03 00 8C 01 00 00 00 00 0C 00 8C 01 37
      00 59 02 3D 00 A3 02 99 00 7F 04 01 00 19 00 02 00 19 00 00 00 00 00 00 3C 4D 6F 64 75 6C 65 3E
      00 4A 41 45 45 2E 41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73 69 6F 6E 73 2E 4F 75 74 6C 69 6E
      69 6E 67 2E 64 6C 6C 00 4F 75 74 6C 69 6E 69 6E 67 54 61 67 67 65 72 50 72 6F 76 69 64 65 72 00
      4A 41 45 45 2E 41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73 69 6F 6E 73 00 50 61 72 74 69 61 6C
      52 65 67 69 6F 6E 00 52 65 67 69 6F 6E 00 4F 75 74 6C 69 6E 69 6E 67 54 61 67 67 65 72 00 6D 73
      63 6F 72 6C 69 62 00 53 79 73 74 65 6D 00 4F 62 6A 65 63 74 00 4D 69 63 72 6F 73 6F 66 74 2E 56
      69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 4C 6F 67 69 63 00 4D 69 63 72 6F 73 6F 66 74
      2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 54 61 67 67 69 6E 67 00 49 54 61 67 67
      65 72 50 72 6F 76 69 64 65 72 00 49 54 61 67 67 65 72 60 31 00 4D 69 63 72 6F 73 6F 66 74 2E 56
      69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 55 49 00 49 4F 75 74 6C 69 6E 69 6E 67 52 65
      67 69 6F 6E 54 61 67 00 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54
      65 78 74 2E 44 61 74 61 00 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E
      54 65 78 74 00 49 54 65 78 74 42 75 66 66 65 72 00 43 72 65 61 74 65 54 61 67 67 65 72 00 49 54
      61 67 00 54 00 2E 63 74 6F 72 00 67 65 74 5F 53 74 61 72 74 4C 69 6E 65 00 73 65 74 5F 53 74 61
      72 74 4C 69 6E 65 00 67 65 74 5F 53 74 61 72 74 4F 66 66 73 65 74 00 73 65 74 5F 53 74 61 72 74
      4F 66 66 73 65 74 00 67 65 74 5F 4C 65 76 65 6C 00 73 65 74 5F 4C 65 76 65 6C 00 67 65 74 5F 50
      61 72 74 69 61 6C 50 61 72 65 6E 74 00 73 65 74 5F 50 61 72 74 69 61 6C 50 61 72 65 6E 74 00 3C
      53 74 61 72 74 4C 69 6E 65 3E 6B 5F 5F 42 61 63 6B 69 6E 67 46 69 65 6C 64 00 3C 53 74 61 72 74
      4F 66 66 73 65 74 3E 6B 5F 5F 42 61 63 6B 69 6E 67 46 69 65 6C 64 00 3C 4C 65 76 65 6C 3E 6B 5F
      5F 42 61 63 6B 69 6E 67 46 69 65 6C 64 00 3C 50 61 72 74 69 61 6C 50 61 72 65 6E 74 3E 6B 5F 5F
      42 61 63 6B 69 6E 67 46 69 65 6C 64 00 53 74 61 72 74 4C 69 6E 65 00 53 74 61 72 74 4F 66 66 73
      65 74 00 4C 65 76 65 6C 00 50 61 72 74 69 61 6C 50 61 72 65 6E 74 00 67 65 74 5F 45 6E 64 4C 69
      6E 65 00 73 65 74 5F 45 6E 64 4C 69 6E 65 00 3C 45 6E 64 4C 69 6E 65 3E 6B 5F 5F 42 61 63 6B 69
      6E 67 46 69 65 6C 64 00 45 6E 64 4C 69 6E 65 00 73 74 61 72 74 48 69 64 65 00 65 6E 64 48 69 64
      65 00 65 6C 6C 69 70 73 69 73 00 68 6F 76 65 72 54 65 78 74 00 62 75 66 66 65 72 00 49 54 65 78
      74 53 6E 61 70 73 68 6F 74 00 73 6E 61 70 73 68 6F 74 00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63
      74 69 6F 6E 73 2E 47 65 6E 65 72 69 63 00 4C 69 73 74 60 31 00 72 65 67 69 6F 6E 73 00 45 76 65
      6E 74 48 61 6E 64 6C 65 72 60 31 00 53 6E 61 70 73 68 6F 74 53 70 61 6E 45 76 65 6E 74 41 72 67
      73 00 54 61 67 73 43 68 61 6E 67 65 64 00 61 64 64 5F 54 61 67 73 43 68 61 6E 67 65 64 00 72 65
      6D 6F 76 65 5F 54 61 67 73 43 68 61 6E 67 65 64 00 49 45 6E 75 6D 65 72 61 62 6C 65 60 31 00 49
      54 61 67 53 70 61 6E 60 31 00 4E 6F 72 6D 61 6C 69 7A 65 64 53 6E 61 70 73 68 6F 74 53 70 61 6E
      43 6F 6C 6C 65 63 74 69 6F 6E 00 47 65 74 54 61 67 73 00 54 65 78 74 43 6F 6E 74 65 6E 74 43 68
      61 6E 67 65 64 45 76 65 6E 74 41 72 67 73 00 42 75 66 66 65 72 43 68 61 6E 67 65 64 00 52 65 50
      61 72 73 65 00 54 72 79 47 65 74 4C 65 76 65 6C 00 53 6E 61 70 73 68 6F 74 53 70 61 6E 00 41 73
      53 6E 61 70 73 68 6F 74 53 70 61 6E 00 76 61 6C 75 65 00 73 70 61 6E 73 00 73 65 6E 64 65 72 00
      65 00 74 65 78 74 00 73 74 61 72 74 49 6E 64 65 78 00 6C 65 76 65 6C 00 53 79 73 74 65 6D 2E 52
      75 6E 74 69 6D 65 2E 49 6E 74 65 72 6F 70 53 65 72 76 69 63 65 73 00 4F 75 74 41 74 74 72 69 62
      75 74 65 00 72 65 67 69 6F 6E 00 53 79 73 74 65 6D 2E 52 75 6E 74 69 6D 65 2E 56 65 72 73 69 6F
      6E 69 6E 67 00 54 61 72 67 65 74 46 72 61 6D 65 77 6F 72 6B 41 74 74 72 69 62 75 74 65 00 53 79
      73 74 65 6D 2E 52 65 66 6C 65 63 74 69 6F 6E 00 41 73 73 65 6D 62 6C 79 54 69 74 6C 65 41 74 74
      72 69 62 75 74 65 00 41 73 73 65 6D 62 6C 79 44 65 73 63 72 69 70 74 69 6F 6E 41 74 74 72 69 62
      75 74 65 00 41 73 73 65 6D 62 6C 79 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 41 74 74 72 69 62 75
      74 65 00 41 73 73 65 6D 62 6C 79 43 6F 6D 70 61 6E 79 41 74 74 72 69 62 75 74 65 00 41 73 73 65
      6D 62 6C 79 50 72 6F 64 75 63 74 41 74 74 72 69 62 75 74 65 00 41 73 73 65 6D 62 6C 79 43 6F 70
      79 72 69 67 68 74 41 74 74 72 69 62 75 74 65 00 41 73 73 65 6D 62 6C 79 54 72 61 64 65 6D 61 72
      6B 41 74 74 72 69 62 75 74 65 00 41 73 73 65 6D 62 6C 79 43 75 6C 74 75 72 65 41 74 74 72 69 62
      75 74 65 00 43 6F 6D 56 69 73 69 62 6C 65 41 74 74 72 69 62 75 74 65 00 41 73 73 65 6D 62 6C 79
      56 65 72 73 69 6F 6E 41 74 74 72 69 62 75 74 65 00 41 73 73 65 6D 62 6C 79 46 69 6C 65 56 65 72
      73 69 6F 6E 41 74 74 72 69 62 75 74 65 00 53 79 73 74 65 6D 2E 44 69 61 67 6E 6F 73 74 69 63 73
      00 44 65 62 75 67 67 61 62 6C 65 41 74 74 72 69 62 75 74 65 00 44 65 62 75 67 67 69 6E 67 4D 6F
      64 65 73 00 53 79 73 74 65 6D 2E 52 75 6E 74 69 6D 65 2E 43 6F 6D 70 69 6C 65 72 53 65 72 76 69
      63 65 73 00 43 6F 6D 70 69 6C 61 74 69 6F 6E 52 65 6C 61 78 61 74 69 6F 6E 73 41 74 74 72 69 62
      75 74 65 00 52 75 6E 74 69 6D 65 43 6F 6D 70 61 74 69 62 69 6C 69 74 79 41 74 74 72 69 62 75 74
      65 00 4A 41 45 45 2E 41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73 69 6F 6E 73 2E 4F 75 74 6C 69
      6E 69 6E 67 00 53 79 73 74 65 6D 2E 43 6F 6D 70 6F 6E 65 6E 74 4D 6F 64 65 6C 2E 43 6F 6D 70 6F
      73 69 74 69 6F 6E 00 45 78 70 6F 72 74 41 74 74 72 69 62 75 74 65 00 54 79 70 65 00 54 61 67 54
      79 70 65 41 74 74 72 69 62 75 74 65 00 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75
      64 69 6F 2E 43 6F 72 65 55 74 69 6C 69 74 79 00 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C
      53 74 75 64 69 6F 2E 55 74 69 6C 69 74 69 65 73 00 43 6F 6E 74 65 6E 74 54 79 70 65 41 74 74 72
      69 62 75 74 65 00 3C 3E 63 5F 5F 44 69 73 70 6C 61 79 43 6C 61 73 73 31 60 31 00 3C 43 72 65 61
      74 65 54 61 67 67 65 72 3E 62 5F 5F 30 00 46 75 6E 63 60 31 00 49 50 72 6F 70 65 72 74 79 4F 77
      6E 65 72 00 50 72 6F 70 65 72 74 79 43 6F 6C 6C 65 63 74 69 6F 6E 00 67 65 74 5F 50 72 6F 70 65
      72 74 69 65 73 00 47 65 74 4F 72 43 72 65 61 74 65 53 69 6E 67 6C 65 74 6F 6E 50 72 6F 70 65 72
      74 79 00 43 6F 6D 70 69 6C 65 72 47 65 6E 65 72 61 74 65 64 41 74 74 72 69 62 75 74 65 00 44 65
      6C 65 67 61 74 65 00 43 6F 6D 62 69 6E 65 00 53 79 73 74 65 6D 2E 54 68 72 65 61 64 69 6E 67 00
      49 6E 74 65 72 6C 6F 63 6B 65 64 00 43 6F 6D 70 61 72 65 45 78 63 68 61 6E 67 65 00 52 65 6D 6F
      76 65 00 67 65 74 5F 43 75 72 72 65 6E 74 53 6E 61 70 73 68 6F 74 00 61 64 64 5F 43 68 61 6E 67
      65 64 00 3C 47 65 74 54 61 67 73 3E 64 5F 5F 30 00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69
      6F 6E 73 00 49 45 6E 75 6D 65 72 61 62 6C 65 00 49 45 6E 75 6D 65 72 61 74 6F 72 60 31 00 49 45
      6E 75 6D 65 72 61 74 6F 72 00 49 44 69 73 70 6F 73 61 62 6C 65 00 53 79 73 74 65 6D 2E 43 6F 6C
      6C 65 63 74 69 6F 6E 73 2E 47 65 6E 65 72 69 63 2E 49 45 6E 75 6D 65 72 61 62 6C 65 3C 4D 69 63
      72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 54 61 67 67 69 6E 67
      2E 49 54 61 67 53 70 61 6E 3C 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F
      2E 54 65 78 74 2E 54 61 67 67 69 6E 67 2E 49 4F 75 74 6C 69 6E 69 6E 67 52 65 67 69 6F 6E 54 61
      67 3E 3E 2E 47 65 74 45 6E 75 6D 65 72 61 74 6F 72 00 47 65 74 45 6E 75 6D 65 72 61 74 6F 72 00
      53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 2E 49 45 6E 75 6D 65 72 61 62 6C 65 2E 47
      65 74 45 6E 75 6D 65 72 61 74 6F 72 00 4D 6F 76 65 4E 65 78 74 00 3C 3E 32 5F 5F 63 75 72 72 65
      6E 74 00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 2E 47 65 6E 65 72 69 63 2E 49 45
      6E 75 6D 65 72 61 74 6F 72 3C 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F
      2E 54 65 78 74 2E 54 61 67 67 69 6E 67 2E 49 54 61 67 53 70 61 6E 3C 4D 69 63 72 6F 73 6F 66 74
      2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 54 61 67 67 69 6E 67 2E 49 4F 75 74 6C
      69 6E 69 6E 67 52 65 67 69 6F 6E 54 61 67 3E 3E 2E 67 65 74 5F 43 75 72 72 65 6E 74 00 67 65 74
      5F 43 75 72 72 65 6E 74 00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 2E 49 45 6E 75
      6D 65 72 61 74 6F 72 2E 52 65 73 65 74 00 52 65 73 65 74 00 53 79 73 74 65 6D 2E 49 44 69 73 70
      6F 73 61 62 6C 65 2E 44 69 73 70 6F 73 65 00 44 69 73 70 6F 73 65 00 3C 3E 31 5F 5F 73 74 61 74
      65 00 3C 3E 6C 5F 5F 69 6E 69 74 69 61 6C 54 68 72 65 61 64 49 64 00 53 79 73 74 65 6D 2E 43 6F
      6C 6C 65 63 74 69 6F 6E 73 2E 49 45 6E 75 6D 65 72 61 74 6F 72 2E 67 65 74 5F 43 75 72 72 65 6E
      74 00 3C 3E 34 5F 5F 74 68 69 73 00 3C 3E 33 5F 5F 73 70 61 6E 73 00 3C 63 75 72 72 65 6E 74 52
      65 67 69 6F 6E 73 3E 35 5F 5F 31 00 3C 63 75 72 72 65 6E 74 53 6E 61 70 73 68 6F 74 3E 35 5F 5F
      32 00 3C 65 6E 74 69 72 65 3E 35 5F 5F 33 00 3C 73 74 61 72 74 4C 69 6E 65 4E 75 6D 62 65 72 3E
      35 5F 5F 34 00 3C 65 6E 64 4C 69 6E 65 4E 75 6D 62 65 72 3E 35 5F 5F 35 00 3C 72 65 67 69 6F 6E
      3E 35 5F 5F 36 00 49 54 65 78 74 53 6E 61 70 73 68 6F 74 4C 69 6E 65 00 3C 73 74 61 72 74 4C 69
      6E 65 3E 35 5F 5F 37 00 3C 65 6E 64 4C 69 6E 65 3E 35 5F 5F 38 00 3C 69 4C 69 6E 65 43 6F 75 6E
      74 3E 35 5F 5F 39 00 45 6E 75 6D 65 72 61 74 6F 72 00 3C 3E 37 5F 5F 77 72 61 70 61 00 3C 3E 6D
      5F 5F 46 69 6E 61 6C 6C 79 62 00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 2E 47 65
      6E 65 72 69 63 2E 49 45 6E 75 6D 65 72 61 74 6F 72 3C 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75
      61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 54 61 67 67 69 6E 67 2E 49 54 61 67 53 70 61 6E 3C 4D
      69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 54 61 67 67 69
      6E 67 2E 49 4F 75 74 6C 69 6E 69 6E 67 52 65 67 69 6F 6E 54 61 67 3E 3E 2E 43 75 72 72 65 6E 74
      00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 2E 49 45 6E 75 6D 65 72 61 74 6F 72 2E
      43 75 72 72 65 6E 74 00 44 65 62 75 67 67 65 72 48 69 64 64 65 6E 41 74 74 72 69 62 75 74 65 00
      54 68 72 65 61 64 00 67 65 74 5F 43 75 72 72 65 6E 74 54 68 72 65 61 64 00 67 65 74 5F 4D 61 6E
      61 67 65 64 54 68 72 65 61 64 49 64 00 67 65 74 5F 43 6F 75 6E 74 00 67 65 74 5F 49 74 65 6D 00
      53 6E 61 70 73 68 6F 74 50 6F 69 6E 74 00 67 65 74 5F 53 74 61 72 74 00 67 65 74 5F 45 6E 64 00
      53 70 61 6E 54 72 61 63 6B 69 6E 67 4D 6F 64 65 00 54 72 61 6E 73 6C 61 74 65 54 6F 00 47 65 74
      43 6F 6E 74 61 69 6E 69 6E 67 4C 69 6E 65 00 67 65 74 5F 4C 69 6E 65 4E 75 6D 62 65 72 00 53 74
      72 69 6E 67 00 45 6D 70 74 79 00 47 65 74 4C 69 6E 65 46 72 6F 6D 4C 69 6E 65 4E 75 6D 62 65 72
      00 47 65 74 54 65 78 74 00 46 6F 72 6D 61 74 00 43 6F 6E 63 61 74 00 6F 70 5F 41 64 64 69 74 69
      6F 6E 00 4F 75 74 6C 69 6E 69 6E 67 52 65 67 69 6F 6E 54 61 67 00 54 61 67 53 70 61 6E 60 31 00
      4E 6F 74 53 75 70 70 6F 72 74 65 64 45 78 63 65 70 74 69 6F 6E 00 54 65 78 74 53 6E 61 70 73 68
      6F 74 43 68 61 6E 67 65 64 45 76 65 6E 74 41 72 67 73 00 67 65 74 5F 41 66 74 65 72 00 3C 3E 63
      5F 5F 44 69 73 70 6C 61 79 43 6C 61 73 73 31 34 00 6E 65 77 53 6E 61 70 73 68 6F 74 00 53 70 61
      6E 00 3C 52 65 50 61 72 73 65 3E 62 5F 5F 31 32 00 3C 52 65 50 61 72 73 65 3E 62 5F 5F 31 33 00
      72 00 67 65 74 5F 53 70 61 6E 00 67 65 74 5F 4C 69 6E 65 73 00 53 74 72 69 6E 67 43 6F 6D 70 61
      72 69 73 6F 6E 00 49 6E 64 65 78 4F 66 00 41 64 64 00 46 75 6E 63 60 32 00 53 79 73 74 65 6D 2E
      43 6F 72 65 00 53 79 73 74 65 6D 2E 4C 69 6E 71 00 45 6E 75 6D 65 72 61 62 6C 65 00 53 65 6C 65
      63 74 00 4E 6F 72 6D 61 6C 69 7A 65 64 53 70 61 6E 43 6F 6C 6C 65 63 74 69 6F 6E 00 44 69 66 66
      65 72 65 6E 63 65 00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 2E 4F 62 6A 65 63 74
      4D 6F 64 65 6C 00 52 65 61 64 4F 6E 6C 79 43 6F 6C 6C 65 63 74 69 6F 6E 60 31 00 4D 61 74 68 00
      4D 69 6E 00 4D 61 78 00 46 72 6F 6D 42 6F 75 6E 64 73 00 49 6E 76 6F 6B 65 00 67 65 74 5F 4C 65
      6E 67 74 68 00 53 75 62 73 74 72 69 6E 67 00 49 6E 74 33 32 00 54 72 79 50 61 72 73 65 00 00 00
      03 7B 00 00 03 7D 00 00 0F 7B 00 20 00 2E 00 2E 00 2E 00 20 00 7D 00 00 39 43 00 6C 00 69 00 63
      00 6B 00 20 00 74 00 6F 00 20 00 73 00 68 00 6F 00 77 00 20 00 63 00 6F 00 6C 00 6C 00 61 00 70
      00 73 00 65 00 64 00 20 00 63 00 6F 00 64 00 65 00 00 07 7B 00 30 00 7D 00 00 09 7B 00 30 00 7D
      00 0A 00 00 00 00 00 DF 6D B6 E8 C4 08 95 45 A0 22 01 46 20 E8 03 9C 00 08 B7 7A 5C 56 19 34 E0
      89 08 B0 3F 5F 7F 11 D5 0A 3A 06 15 12 0D 01 12 11 0B 30 01 01 15 12 0D 01 1E 00 12 15 03 20 00
      01 03 20 00 08 04 20 01 01 08 04 20 00 12 0C 05 20 01 01 12 0C 02 06 08 03 06 12 0C 03 28 00 08
      04 28 00 12 0C 02 06 0E 03 06 12 15 03 06 12 1D 07 06 15 12 21 01 12 10 07 06 15 12 25 01 12 29
      09 20 01 01 15 12 25 01 12 29 05 20 01 01 12 15 0E 20 01 15 12 2D 01 15 12 31 01 12 11 12 35 06
      20 02 01 1C 12 39 07 00 03 02 0E 08 10 08 08 00 02 11 3D 12 10 12 1D 06 15 12 25 01 12 29 04 20
      01 01 0E 04 20 01 01 02 05 20 01 01 11 79 06 20 01 01 12 80 89 80 A0 01 00 80 9A 4D 69 63 72 6F
      73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 54 61 67 67 69 6E 67 2E 49
      54 61 67 67 65 72 50 72 6F 76 69 64 65 72 2C 20 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C
      53 74 75 64 69 6F 2E 54 65 78 74 2E 4C 6F 67 69 63 2C 20 56 65 72 73 69 6F 6E 3D 31 30 2E 30 2E
      30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54
      6F 6B 65 6E 3D 62 30 33 66 35 66 37 66 31 31 64 35 30 61 33 61 00 00 80 A1 01 00 80 9B 4D 69 63
      72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 54 61 67 67 69 6E 67
      2E 49 4F 75 74 6C 69 6E 69 6E 67 52 65 67 69 6F 6E 54 61 67 2C 20 4D 69 63 72 6F 73 6F 66 74 2E
      56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 55 49 2C 20 56 65 72 73 69 6F 6E 3D 31 30
      2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B
      65 79 54 6F 6B 65 6E 3D 62 30 33 66 35 66 37 66 31 31 64 35 30 61 33 61 00 00 09 01 00 04 74 65
      78 74 00 00 08 20 00 15 12 0D 01 13 00 06 15 12 18 01 13 00 06 15 12 0D 01 13 00 08 07 01 15 12
      0D 01 13 00 06 15 12 18 01 1E 00 0B 15 12 80 95 01 15 12 0D 01 1E 00 05 20 02 01 1C 18 05 20 00
      12 80 9D 0C 30 01 01 1E 00 15 12 80 95 01 1E 00 08 0A 01 15 12 0D 01 1E 00 19 07 03 15 12 80 95
      01 15 12 0D 01 1E 00 15 12 18 01 1E 00 15 12 0D 01 1E 00 04 01 00 00 00 03 07 01 08 04 07 01 12
      0C 0B 00 02 12 80 A5 12 80 A5 12 80 A5 0C 10 01 03 1E 00 10 1E 00 1E 00 1E 00 08 0A 01 15 12 25
      01 12 29 15 07 04 15 12 25 01 12 29 15 12 25 01 12 29 15 12 25 01 12 29 02 04 20 00 12 1D 06 15
      12 21 01 12 10 06 15 12 25 01 12 39 09 20 01 01 15 12 25 01 12 39 0A 15 12 2D 01 15 12 31 01 12
      11 0B 15 12 80 B1 01 15 12 31 01 12 11 0D 20 00 15 12 80 B1 01 15 12 31 01 12 11 09 20 00 15 12
      80 B1 01 13 00 05 20 00 12 80 B5 03 20 00 02 07 06 15 12 31 01 12 11 08 20 00 15 12 31 01 12 11
      04 20 00 13 00 03 20 00 1C 03 06 12 14 03 06 12 35 03 06 11 3D 03 06 12 10 04 06 12 80 BD 08 06
      15 11 80 C1 01 12 10 08 28 00 15 12 31 01 12 11 03 28 00 1C 05 00 00 12 80 C9 10 07 03 12 1C 15
      12 80 B1 01 15 12 31 01 12 11 02 05 07 01 12 80 B5 05 20 01 11 3D 08 05 20 00 11 80 CD 09 20 02
      01 11 80 CD 11 80 CD 09 20 02 11 3D 12 1D 11 80 D1 05 20 00 12 80 BD 09 20 00 15 11 80 C1 01 13
      00 07 15 11 80 C1 01 12 10 06 20 01 12 80 BD 08 03 20 00 0E 05 00 02 0E 0E 1C 05 00 02 0E 0E 0E
      09 00 02 11 80 CD 11 80 CD 08 07 20 04 01 02 02 1C 1C 07 15 12 80 DD 01 12 11 07 20 02 01 11 3D
      13 00 0B 07 06 0E 02 08 02 11 3D 11 80 CD 08 07 01 15 12 31 01 12 11 04 07 02 0E 08 03 07 01 1C
      0E 07 02 12 1C 15 12 2D 01 15 12 31 01 12 11 03 07 01 02 07 20 01 11 80 E9 12 10 05 20 00 11 80
      E9 07 07 02 11 80 E9 11 3D 09 20 00 15 12 2D 01 12 80 BD 07 15 12 2D 01 12 80 BD 08 15 12 80 B1
      01 12 80 BD 07 20 02 08 0E 11 80 ED 05 20 01 01 13 00 0A 15 12 80 F1 02 12 10 11 80 E9 18 10 02
      02 15 12 2D 01 1E 01 15 12 2D 01 1E 00 15 12 80 F1 02 1E 00 1E 01 07 0A 02 12 10 11 80 E9 07 15
      12 21 01 11 80 E9 09 20 01 01 15 12 2D 01 13 00 0A 20 01 01 15 12 2D 01 11 80 E9 0B 00 02 12 80
      F9 12 80 F9 12 80 F9 08 15 12 80 FD 01 11 80 E9 05 20 01 13 00 08 05 00 02 08 08 08 07 00 02 11
      80 E9 08 08 08 20 02 01 12 1D 11 80 E9 05 20 01 01 11 3D 06 20 02 01 1C 13 00 43 07 18 15 12 21
      01 12 10 12 0C 12 80 BD 08 0E 08 08 12 10 12 0C 12 0C 08 12 10 15 12 21 01 11 80 E9 15 12 21 01
      11 80 E9 12 80 F9 12 80 F9 12 80 F9 08 08 12 1D 12 20 15 12 80 B1 01 12 80 BD 02 11 80 E9 04 20
      01 0E 08 06 00 02 02 0E 10 08 04 07 02 02 02 0A 07 03 12 80 BD 12 80 BD 11 3D 47 01 00 1A 2E 4E
      45 54 46 72 61 6D 65 77 6F 72 6B 2C 56 65 72 73 69 6F 6E 3D 76 34 2E 30 01 00 54 0E 14 46 72 61
      6D 65 77 6F 72 6B 44 69 73 70 6C 61 79 4E 61 6D 65 10 2E 4E 45 54 20 46 72 61 6D 65 77 6F 72 6B
      20 34 27 01 00 22 4A 41 45 45 2E 41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73 69 6F 6E 73 2E 4F
      75 74 6C 69 6E 69 6E 67 00 00 05 01 00 00 00 00 16 01 00 11 77 77 77 2E 6A 61 65 73 74 65 76 61
      6E 2E 63 6F 6D 00 00 1B 01 00 16 4A 41 45 45 4F 75 74 6C 69 6E 69 6E 67 45 78 74 65 6E 73 69 6F
      6E 00 00 1A 01 00 15 4A 6F 73 C3 A9 20 41 6E 74 6F 6E 69 6F 20 45 73 74 65 76 61 6E 00 00 0C 01
      00 07 30 2E 32 2E 30 2E 30 00 00 08 01 00 07 01 00 00 00 00 08 01 00 08 00 00 00 00 00 1E 01 00
      01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78 63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 00 00 00 00
      00 00 00 3D 47 17 52 00 00 00 00 02 00 00 00 92 00 00 00 E4 4C 00 00 E4 2E 00 00 52 53 44 53 8D
      A8 8A 98 B1 F2 E7 4E 85 D4 8C 3A E3 41 DF 68 01 00 00 00 44 3A 5C 44 72 6F 70 62 6F 78 5C 56 69
      73 75 61 6C 20 53 74 75 64 69 6F 5C 4A 41 45 45 2E 41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73
      69 6F 6E 73 5C 4A 41 45 45 4F 75 74 6C 69 6E 69 6E 67 45 78 74 65 6E 73 69 6F 6E 5C 6F 62 6A 5C
      44 65 62 75 67 5C 4A 41 45 45 2E 41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73 69 6F 6E 73 2E 4F
      75 74 6C 69 6E 69 6E 67 2E 70 64 62 00 00 00 A0 4D 00 00 00 00 00 00 00 00 00 00 BE 4D 00 00 00
      20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 B0 4D 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 5F 43 6F 72 44 6C 6C 4D 61 69 6E 00 6D 73 63 6F 72 65 65 2E 64 6C 6C
      00 00 00 00 00 FF 25 00 20 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 01 00 10 00 00 00 18 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 01
      00 00 00 30 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 48 00 00 00 58
      60 00 00 B4 03 00 00 00 00 00 00 00 00 00 00 B4 03 34 00 00 00 56 00 53 00 5F 00 56 00 45 00 52
      00 53 00 49 00 4F 00 4E 00 5F 00 49 00 4E 00 46 00 4F 00 00 00 00 00 BD 04 EF FE 00 00 01 00 02
      00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 3F 00 00 00 00 00 00 00 04 00 00 00 02 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 44 00 00 00 01 00 56 00 61 00 72 00 46 00 69 00 6C 00 65 00 49
      00 6E 00 66 00 6F 00 00 00 00 00 24 00 04 00 00 00 54 00 72 00 61 00 6E 00 73 00 6C 00 61 00 74
      00 69 00 6F 00 6E 00 00 00 00 00 00 00 B0 04 14 03 00 00 01 00 53 00 74 00 72 00 69 00 6E 00 67
      00 46 00 69 00 6C 00 65 00 49 00 6E 00 66 00 6F 00 00 00 F0 02 00 00 01 00 30 00 30 00 30 00 30
      00 30 00 34 00 62 00 30 00 00 00 44 00 12 00 01 00 43 00 6F 00 6D 00 70 00 61 00 6E 00 79 00 4E
      00 61 00 6D 00 65 00 00 00 00 00 77 00 77 00 77 00 2E 00 6A 00 61 00 65 00 73 00 74 00 65 00 76
      00 61 00 6E 00 2E 00 63 00 6F 00 6D 00 00 00 70 00 23 00 01 00 46 00 69 00 6C 00 65 00 44 00 65
      00 73 00 63 00 72 00 69 00 70 00 74 00 69 00 6F 00 6E 00 00 00 00 00 4A 00 41 00 45 00 45 00 2E
      00 41 00 58 00 2E 00 45 00 64 00 69 00 74 00 6F 00 72 00 45 00 78 00 74 00 65 00 6E 00 73 00 69
      00 6F 00 6E 00 73 00 2E 00 4F 00 75 00 74 00 6C 00 69 00 6E 00 69 00 6E 00 67 00 00 00 00 00 30
      00 08 00 01 00 46 00 69 00 6C 00 65 00 56 00 65 00 72 00 73 00 69 00 6F 00 6E 00 00 00 00 00 30
      00 2E 00 32 00 2E 00 30 00 2E 00 30 00 00 00 70 00 27 00 01 00 49 00 6E 00 74 00 65 00 72 00 6E
      00 61 00 6C 00 4E 00 61 00 6D 00 65 00 00 00 4A 00 41 00 45 00 45 00 2E 00 41 00 58 00 2E 00 45
      00 64 00 69 00 74 00 6F 00 72 00 45 00 78 00 74 00 65 00 6E 00 73 00 69 00 6F 00 6E 00 73 00 2E
      00 4F 00 75 00 74 00 6C 00 69 00 6E 00 69 00 6E 00 67 00 2E 00 64 00 6C 00 6C 00 00 00 00 00 50
      00 15 00 01 00 4C 00 65 00 67 00 61 00 6C 00 43 00 6F 00 70 00 79 00 72 00 69 00 67 00 68 00 74
      00 00 00 4A 00 6F 00 73 00 E9 00 20 00 41 00 6E 00 74 00 6F 00 6E 00 69 00 6F 00 20 00 45 00 73
      00 74 00 65 00 76 00 61 00 6E 00 00 00 00 00 78 00 27 00 01 00 4F 00 72 00 69 00 67 00 69 00 6E
      00 61 00 6C 00 46 00 69 00 6C 00 65 00 6E 00 61 00 6D 00 65 00 00 00 4A 00 41 00 45 00 45 00 2E
      00 41 00 58 00 2E 00 45 00 64 00 69 00 74 00 6F 00 72 00 45 00 78 00 74 00 65 00 6E 00 73 00 69
      00 6F 00 6E 00 73 00 2E 00 4F 00 75 00 74 00 6C 00 69 00 6E 00 69 00 6E 00 67 00 2E 00 64 00 6C
      00 6C 00 00 00 00 00 50 00 17 00 01 00 50 00 72 00 6F 00 64 00 75 00 63 00 74 00 4E 00 61 00 6D
      00 65 00 00 00 00 00 4A 00 41 00 45 00 45 00 4F 00 75 00 74 00 6C 00 69 00 6E 00 69 00 6E 00 67
      00 45 00 78 00 74 00 65 00 6E 00 73 00 69 00 6F 00 6E 00 00 00 00 00 34 00 08 00 01 00 50 00 72
      00 6F 00 64 00 75 00 63 00 74 00 56 00 65 00 72 00 73 00 69 00 6F 00 6E 00 00 00 30 00 2E 00 32
      00 2E 00 30 00 2E 00 30 00 00 00 38 00 08 00 01 00 41 00 73 00 73 00 65 00 6D 00 62 00 6C 00 79
      00 20 00 56 00 65 00 72 00 73 00 69 00 6F 00 6E 00 00 00 30 00 2E 00 32 00 2E 00 30 00 2E 00 30
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 0C 00 00 00 D0
      3D 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FF FF FF
    ENDBINARY
  ENDRESOURCE
  

***Element: RES

; Microsoft Dynamics AX RESOURCE : JAEE_AX_EditorExtensions_HighlightWord_d unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  RESOURCE #JAEE_AX_EditorExtensions_HighlightWord_d
    PROPERTIES
      Name                #JAEE_AX_EditorExtensions_HighlightWord_d
      Filename            #JAEE.AX.EditorExtensions.HighlightWord.dll
      Label               #
      HelpText            #
      ConfigurationKey    #
      Origin              #{74412B0F-9AFA-4103-A9F9-1624596472B1}
    ENDPROPERTIES
    
    BINARY 16442
      07 FD 07 07 FD FC 03 53 00 79 00 73 00 52 00 65 00 73 00 6F 00 75 00 72 00 63 00 65 00 54 00 79
      00 70 00 65 00 00 00 FF 07 07 FD 30 08 40 00 00 07 FD 30 00 40 00 00 4D 5A 90 00 03 00 00 00 04
      00 00 00 FF FF 00 00 B8 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 00 00 00 0E 1F BA 0E 00 B4 09 CD 21
      B8 01 4C CD 21 54 68 69 73 20 70 72 6F 67 72 61 6D 20 63 61 6E 6E 6F 74 20 62 65 20 72 75 6E 20
      69 6E 20 44 4F 53 20 6D 6F 64 65 2E 0D 0D 0A 24 00 00 00 00 00 00 00 50 45 00 00 4C 01 03 00 E4
      00 3D 51 00 00 00 00 00 00 00 00 E0 00 02 21 0B 01 08 00 00 36 00 00 00 08 00 00 00 00 00 00 2E
      55 00 00 00 20 00 00 00 60 00 00 00 00 40 00 00 20 00 00 00 02 00 00 04 00 00 00 00 00 00 00 04
      00 00 00 00 00 00 00 00 A0 00 00 00 02 00 00 00 00 00 00 03 00 40 85 00 00 10 00 00 10 00 00 00
      00 10 00 00 10 00 00 00 00 00 00 10 00 00 00 00 00 00 00 00 00 00 00 E0 54 00 00 4B 00 00 00 00
      60 00 00 30 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 00 00 0C 00 00 00 28
      54 00 00 1C 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 08 00 00 00 00 00 00 00 00 00 00 00 08
      20 00 00 48 00 00 00 00 00 00 00 00 00 00 00 2E 74 65 78 74 00 00 00 34 35 00 00 00 20 00 00 00
      36 00 00 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 60 2E 72 73 72 63 00 00 00 30
      04 00 00 00 60 00 00 00 06 00 00 00 38 00 00 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 40 2E
      72 65 6C 6F 63 00 00 0C 00 00 00 00 80 00 00 00 02 00 00 00 3E 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 40 00 00 42 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 55 00 00 00 00 00 00 48
      00 00 00 02 00 05 00 EC 2A 00 00 3C 29 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 13 30 01 00 0B 00 00 00 01 00 00 11 02 7B 03 00 00 04 0A 2B 00 06 2A 22 02
      03 7D 03 00 00 04 2A 13 30 01 00 0B 00 00 00 02 00 00 11 02 7B 04 00 00 04 0A 2B 00 06 2A 22 02
      03 7D 04 00 00 04 2A 13 30 01 00 0B 00 00 00 03 00 00 11 02 7B 05 00 00 04 0A 2B 00 06 2A 22 02
      03 7D 05 00 00 04 2A 13 30 01 00 0B 00 00 00 04 00 00 11 02 7B 06 00 00 04 0A 2B 00 06 2A 22 02
      03 7D 06 00 00 04 2A 13 30 01 00 0B 00 00 00 05 00 00 11 02 7B 07 00 00 04 0A 2B 00 06 2A 22 02
      03 7D 07 00 00 04 2A 13 30 01 00 0B 00 00 00 06 00 00 11 02 7B 08 00 00 04 0A 2B 00 06 2A 22 02
      03 7D 08 00 00 04 2A 13 30 01 00 0B 00 00 00 07 00 00 11 02 7B 09 00 00 04 0A 2B 00 06 2A 22 02
      03 7D 09 00 00 04 2A 13 30 03 00 30 00 00 00 08 00 00 11 02 7B 02 00 00 04 0A 06 0B 07 03 28 11
      00 00 0A 74 02 00 00 1B 0C 02 7C 02 00 00 04 08 07 28 01 00 00 2B 0A 06 07 FE 01 16 FE 01 0D 09
      2D D8 2A 13 30 03 00 30 00 00 00 08 00 00 11 02 7B 02 00 00 04 0A 06 0B 07 03 28 13 00 00 0A 74
      02 00 00 1B 0C 02 7C 02 00 00 04 08 07 28 01 00 00 2B 0A 06 07 FE 01 16 FE 01 0D 09 2D D8 2A 13
      30 04 00 87 00 00 00 06 00 00 11 02 73 14 00 00 0A 7D 01 00 00 04 02 28 14 00 00 0A 00 00 02 03
      28 02 00 00 06 00 02 04 28 04 00 00 06 00 02 05 28 06 00 00 06 00 02 0E 04 28 08 00 00 06 00 02
      73 15 00 00 0A 28 0A 00 00 06 00 02 12 00 FE 15 03 00 00 1B 06 28 0C 00 00 06 00 02 28 01 00 00
      06 6F 16 00 00 0A 02 FE 06 13 00 00 06 73 17 00 00 0A 6F 18 00 00 0A 00 02 28 01 00 00 06 02 FE
      06 12 00 00 06 73 19 00 00 0A 6F 1A 00 00 0A 00 00 2A 00 13 30 02 00 2D 00 00 00 09 00 00 11 00
      04 6F 1B 00 00 0A 04 6F 1C 00 00 0A FE 01 0A 06 2D 19 00 02 02 28 01 00 00 06 6F 16 00 00 0A 6F
      1D 00 00 0A 28 14 00 00 06 00 00 2A 3E 00 02 04 6F 1E 00 00 0A 28 14 00 00 06 00 2A 00 00 00 13
      30 03 00 D0 00 00 00 0A 00 00 11 00 0F 01 28 1F 00 00 0A 02 28 03 00 00 06 0F 01 28 20 00 00 0A
      6F 21 00 00 0A 0A 12 00 28 22 00 00 0A 0B 07 2D 05 38 A4 00 00 00 02 28 0B 00 00 06 0C 12 02 28
      23 00 00 0A 2C 77 02 28 0B 00 00 06 0C 12 02 28 24 00 00 0A 0D 12 03 28 25 00 00 0A 02 28 01 00
      00 06 6F 26 00 00 0A 33 54 12 00 28 27 00 00 0A 28 28 00 00 0A 02 28 0B 00 00 06 0C 12 02 28 24
      00 00 0A 0D 12 03 28 29 00 00 0A 28 28 00 00 0A 32 2B 12 00 28 27 00 00 0A 28 28 00 00 0A 02 28
      0B 00 00 06 0C 12 02 28 24 00 00 0A 0D 12 03 28 2A 00 00 0A 28 28 00 00 0A FE 02 2B 01 17 0B 07
      2D 03 00 2B 15 02 12 00 28 27 00 00 0A 28 0E 00 00 06 00 02 28 15 00 00 06 00 2A 13 30 05 00 73
      01 00 00 0B 00 00 11 00 02 28 0D 00 00 06 0A 73 2B 00 00 0A 0B 02 28 07 00 00 06 06 6F 2C 00 00
      0A 0C 17 0D 06 08 28 16 00 00 06 13 06 11 06 2D 79 00 12 02 28 2D 00 00 0A 13 07 12 07 28 29 00
      00 0A 06 28 2E 00 00 0A 2D 2E 06 12 00 28 2F 00 00 0A 6F 30 00 00 0A 28 31 00 00 0A 2D 1A 06 17
      28 32 00 00 0A 13 08 12 08 28 33 00 00 0A 28 34 00 00 0A 16 FE 01 2B 01 16 13 06 11 06 2D 06 00
      16 0D 00 2B 24 00 02 28 07 00 00 06 06 17 28 32 00 00 0A 6F 2C 00 00 0A 0C 06 08 28 16 00 00 06
      13 06 11 06 2D 02 16 0D 00 00 09 13 06 11 06 2D 1D 00 02 06 73 15 00 00 0A 12 09 FE 15 03 00 00
      1B 11 09 28 17 00 00 06 00 38 AB 00 00 00 12 02 28 2D 00 00 0A 13 04 02 28 0B 00 00 06 13 09 12
      09 28 23 00 00 0A 2C 2B 11 04 13 07 02 28 0B 00 00 06 13 09 12 09 28 23 00 00 0A 2C 10 11 07 12
      09 28 35 00 00 0A 28 36 00 00 0A 2B 01 16 16 FE 01 2B 01 17 13 06 11 06 2D 02 2B 5D 12 05 12 04
      28 37 00 00 0A 12 04 28 25 00 00 0A 28 38 00 00 0A 00 12 05 1B 28 39 00 00 0A 00 07 02 28 05 00
      00 06 11 05 6F 3A 00 00 0A 6F 3B 00 00 0A 00 06 02 28 0D 00 00 06 28 31 00 00 0A 16 FE 01 13 06
      11 06 2D 15 02 06 07 73 3C 00 00 0A 11 04 73 3D 00 00 0A 28 17 00 00 06 00 2A 00 13 30 01 00 0B
      00 00 00 09 00 00 11 02 28 3E 00 00 0A 0A 2B 00 06 2A 00 13 30 04 00 4E 00 00 00 09 00 00 11 00
      0F 01 28 3F 00 00 0A 2C 3E 0F 00 28 40 00 00 0A 0F 01 28 2D 00 00 0A 28 41 00 00 0A 6F 42 00 00
      0A 7E 0A 00 00 04 2D 13 14 FE 06 19 00 00 06 73 43 00 00 0A 80 0A 00 00 04 2B 00 7E 0A 00 00 04
      28 02 00 00 2B 2B 01 16 0A 2B 00 06 2A 00 00 1B 30 06 00 8C 00 00 00 0C 00 00 11 00 16 0B 02 7B
      01 00 00 04 25 0C 12 01 28 45 00 00 0A 00 00 03 02 28 0D 00 00 06 28 2E 00 00 0A 16 FE 01 0D 09
      2D 02 DE 61 02 04 28 0A 00 00 06 00 02 05 28 0C 00 00 06 00 02 7B 02 00 00 04 0A 06 14 FE 01 0D
      09 2D 2E 06 02 02 28 03 00 00 06 6F 46 00 00 0A 16 02 28 03 00 00 06 6F 46 00 00 0A 6F 47 00 00
      0A 73 48 00 00 0A 73 49 00 00 0A 6F 4A 00 00 0A 00 00 DE 10 07 16 FE 01 0D 09 2D 07 08 28 4B 00
      00 0A 00 DC 00 00 2A 01 10 00 00 02 00 03 00 76 79 00 10 00 00 00 00 1E 02 28 14 00 00 0A 2A 13
      30 03 00 21 00 00 00 0D 00 00 11 0F 01 02 7B 0D 00 00 04 16 6F 4C 00 00 0A 0B 12 01 28 25 00 00
      0A 16 28 4D 00 00 0A 0A 2B 00 06 2A 00 00 00 13 30 02 00 56 00 00 00 0E 00 00 11 28 56 00 00 0A
      6F 57 00 00 0A 02 7B 10 00 00 04 33 0F 02 7B 0F 00 00 04 1F FE FE 01 16 FE 01 2B 01 17 0C 08 2D
      0B 02 16 7D 0F 00 00 04 02 0A 2B 13 16 73 2B 00 00 06 0A 06 02 7B 11 00 00 04 7D 11 00 00 04 06
      02 7B 13 00 00 04 7D 12 00 00 04 06 0B 2B 00 07 2A 00 00 13 30 01 00 0B 00 00 00 0F 00 00 11 02
      28 24 00 00 06 0A 2B 00 06 2A 00 1B 30 06 00 4B 02 00 00 10 00 00 11 02 7B 0F 00 00 04 0B 07 45
      04 00 00 00 0C 00 00 00 02 00 00 00 0E 00 00 00 07 00 00 00 2B 0C 38 94 01 00 00 38 F4 01 00 00
      2B 05 38 0C 02 00 00 02 15 7D 0F 00 00 04 02 14 7D 17 00 00 04 02 73 22 00 00 06 7D 18 00 00 04
      02 7B 18 00 00 04 02 7B 12 00 00 04 7D 0D 00 00 04 00 02 7B 11 00 00 04 6F 0B 00 00 06 0C 12 02
      28 23 00 00 0A 0D 09 2D 05 38 C5 01 00 00 02 02 7B 11 00 00 04 6F 0B 00 00 06 0C 12 02 28 24 00
      00 0A 7D 14 00 00 04 02 02 7B 11 00 00 04 6F 09 00 00 06 7D 15 00 00 04 02 7B 18 00 00 04 7B 0D
      00 00 04 6F 58 00 00 0A 2C 15 02 7B 11 00 00 04 6F 09 00 00 06 6F 58 00 00 0A 17 FE 02 2B 01 16
      0D 09 2D 05 38 6A 01 00 00 02 7B 18 00 00 04 7B 0D 00 00 04 16 6F 4C 00 00 0A 13 04 12 04 28 25
      00 00 0A 02 7B 15 00 00 04 16 6F 4C 00 00 0A 13 04 12 04 28 25 00 00 0A FE 01 0D 09 2D 6B 00 02
      02 7B 15 00 00 04 02 7B 17 00 00 04 2D 19 02 02 7B 18 00 00 04 FE 06 23 00 00 06 73 59 00 00 0A
      7D 17 00 00 04 2B 00 02 7B 17 00 00 04 28 03 00 00 2B 73 3C 00 00 0A 7D 15 00 00 04 02 02 7C 14
      00 00 04 02 7B 18 00 00 04 7B 0D 00 00 04 16 6F 4C 00 00 0A 13 04 12 04 28 25 00 00 0A 16 28 4D
      00 00 0A 7D 14 00 00 04 00 02 7B 18 00 00 04 7B 0D 00 00 04 02 7B 14 00 00 04 73 5B 00 00 0A 6F
      5C 00 00 0A 16 FE 01 0D 09 2D 2B 02 02 7B 14 00 00 04 73 20 00 00 06 73 5D 00 00 0A 7D 0E 00 00
      04 02 17 7D 0F 00 00 04 17 0A DD 90 00 00 00 02 15 7D 0F 00 00 04 00 02 02 7B 18 00 00 04 7B 0D
      00 00 04 02 7B 15 00 00 04 28 5E 00 00 0A 6F 5F 00 00 0A 7D 19 00 00 04 02 18 7D 0F 00 00 04 2B
      3B 02 02 7B 19 00 00 04 6F 60 00 00 0A 7D 16 00 00 04 00 02 02 7B 16 00 00 04 73 20 00 00 06 73
      5D 00 00 0A 7D 0E 00 00 04 02 19 7D 0F 00 00 04 17 0A DE 2B 02 18 7D 0F 00 00 04 00 02 7B 19 00
      00 04 6F 50 00 00 0A 0D 09 2D B6 02 28 2C 00 00 06 00 00 16 0A DE 08 02 28 29 00 00 06 00 DC 00
      06 2A 00 41 1C 00 00 04 00 00 00 00 00 00 00 40 02 00 00 40 02 00 00 08 00 00 00 00 00 00 00 13
      30 01 00 0B 00 00 00 11 00 00 11 02 7B 0E 00 00 04 0A 2B 00 06 2A 1A 73 61 00 00 0A 7A 00 00 1B
      30 02 00 2B 00 00 00 12 00 00 11 02 7B 0F 00 00 04 0A 06 18 59 45 02 00 00 00 04 00 00 00 02 00
      00 00 2B 04 2B 04 2B 02 2B 0B DE 08 02 28 2C 00 00 06 00 DC 00 2A 00 01 10 00 00 02 00 1F 00 02
      21 00 08 00 00 00 00 13 30 01 00 0B 00 00 00 13 00 00 11 02 7B 0E 00 00 04 0A 2B 00 06 2A 7A 02
      28 14 00 00 0A 02 03 7D 0F 00 00 04 02 28 56 00 00 0A 6F 57 00 00 0A 7D 10 00 00 04 2A 00 00 13
      30 02 00 21 00 00 00 09 00 00 11 02 15 7D 0F 00 00 04 02 7B 19 00 00 04 14 FE 01 0A 06 2D 0C 02
      7B 19 00 00 04 6F 53 00 00 0A 00 2A 00 00 00 13 30 02 00 1C 00 00 00 14 00 00 11 1F FE 73 2B 00
      00 06 0A 06 02 7D 11 00 00 04 06 03 7D 13 00 00 04 06 0B 2B 00 07 2A 13 30 01 00 0B 00 00 00 03
      00 00 11 02 7B 0B 00 00 04 0A 2B 00 06 2A 22 02 03 7D 0B 00 00 04 2A 13 30 01 00 0B 00 00 00 15
      00 00 11 02 7B 0C 00 00 04 0A 2B 00 06 2A 22 02 03 7D 0C 00 00 04 2A 13 30 05 00 37 00 00 00 16
      00 00 11 00 03 6F 65 00 00 0A 04 FE 01 0C 08 2D 04 14 0B 2B 23 02 28 1C 00 00 06 04 6F 66 00 00
      0A 0A 03 04 02 28 1A 00 00 06 06 73 11 00 00 06 75 0E 00 00 1B 0B 2B 00 07 2A 1E 02 28 14 00 00
      0A 2A 3E 02 72 01 00 00 70 28 68 00 00 0A 00 00 00 2A BE 02 28 6B 00 00 0A 00 00 02 28 6C 00 00
      0A 73 6D 00 00 0A 28 6E 00 00 0A 00 02 72 6B 00 00 70 28 6F 00 00 0A 00 02 1B 28 70 00 00 0A 00
      00 2A 00 42 53 4A 42 01 00 01 00 00 00 00 00 0C 00 00 00 76 34 2E 30 2E 33 30 33 31 39 00 00 00
      00 05 00 6C 00 00 00 B0 0C 00 00 23 7E 00 00 1C 0D 00 00 6C 13 00 00 23 53 74 72 69 6E 67 73 00
      00 00 00 88 20 00 00 9C 00 00 00 23 55 53 00 24 21 00 00 10 00 00 00 23 47 55 49 44 00 00 00 34
      21 00 00 08 08 00 00 23 42 6C 6F 62 00 00 00 00 00 00 00 02 00 00 01 57 17 B6 0B 09 1E 00 00 00
      FA 25 33 00 16 00 00 01 00 00 00 4B 00 00 00 07 00 00 00 19 00 00 00 2C 00 00 00 1F 00 00 00 07
      00 00 00 70 00 00 00 3A 00 00 00 16 00 00 00 01 00 00 00 01 00 00 00 03 00 00 00 0B 00 00 00 16
      00 00 00 07 00 00 00 0F 00 00 00 01 00 00 00 09 00 00 00 02 00 00 00 01 00 00 00 03 00 00 00 01
      00 00 00 00 00 0A 00 01 00 00 00 00 00 06 00 D5 00 CE 00 0A 00 22 01 FE 00 0E 00 4B 01 FE 00 0E
      00 5F 01 FE 00 12 00 BB 01 90 01 0E 00 F5 01 D2 01 16 00 4E 02 32 02 0A 00 A3 02 7C 02 0A 00 E2
      02 7C 02 16 00 30 03 32 02 06 00 6D 03 CE 00 16 00 78 03 32 02 16 00 A5 03 32 02 06 00 E4 03 CE
      00 16 00 F3 03 32 02 0E 00 3E 04 D2 01 0E 00 6F 04 D2 01 0E 00 A2 04 D2 01 0A 00 DB 04 7C 02 06
      00 25 05 0A 05 0A 00 33 05 FE 00 0A 00 7D 06 7C 02 0A 00 F7 06 FE 00 06 00 01 08 E7 07 06 00 2C
      08 1A 08 06 00 43 08 1A 08 06 00 60 08 1A 08 06 00 7F 08 1A 08 06 00 98 08 1A 08 06 00 B1 08 1A
      08 06 00 CC 08 1A 08 06 00 E7 08 1A 08 06 00 1F 09 00 09 06 00 33 09 1A 08 06 00 4C 09 1A 08 06
      00 7C 09 69 09 93 00 90 09 00 00 06 00 BF 09 9F 09 06 00 DF 09 9F 09 06 00 24 0A 9F 09 06 00 3F
      0A CE 00 06 00 61 0A 50 0A 0E 00 84 0A D2 01 16 00 BF 0A 32 02 16 00 0A 0B 32 02 16 00 22 0B 32
      02 06 00 9C 0B 0A 05 16 00 CA 0B 32 02 06 00 11 0C CE 00 0A 00 3D 0C 7C 02 0A 00 46 0C 7C 02 06
      00 81 0C 62 0C 06 00 B9 0C CE 00 16 00 02 0D 32 02 1A 00 1F 0D 13 0D 06 00 2E 0D 50 0A 16 00 96
      0D 32 02 06 00 D4 0D C1 0D 06 00 E0 0D 0A 05 06 00 EE 0D C1 0D 06 00 FA 0D CE 00 06 00 57 11 69
      09 06 00 6F 11 50 0A 0A 00 BA 11 FE 00 06 00 CC 11 CE 00 1E 00 04 12 E2 11 06 00 14 12 CE 00 22
      00 5D 12 3C 12 0A 00 72 12 FE 00 1E 00 AC 12 E2 11 22 00 BC 12 3C 12 12 00 CA 12 90 01 26 00 05
      13 F0 12 26 00 0C 13 F0 12 12 00 23 13 90 01 00 00 00 00 01 00 00 00 00 00 01 00 01 00 00 00 10
      00 35 00 49 00 05 00 01 00 01 00 00 00 10 00 62 00 49 00 05 00 0B 00 1A 00 00 00 10 00 7E 00 49
      00 11 00 0D 00 20 00 00 00 10 00 8F 00 AD 00 15 00 0D 00 21 00 03 01 10 00 67 0D 00 00 05 00 0D
      00 22 00 03 01 10 00 B3 0D 00 00 05 00 0E 00 24 00 01 00 D9 03 6F 00 01 00 09 04 72 00 01 00 46
      05 CD 00 01 00 5C 05 D1 00 01 00 7A 05 D5 00 01 00 9D 05 D9 00 01 00 C5 05 DD 00 01 00 E0 05 E1
      00 01 00 FD 05 E9 00 11 00 C0 0C D1 02 01 00 7A 05 D5 00 01 00 FE 06 34 01 06 00 D1 07 DD 00 01
      00 D8 0E 8E 03 01 00 CB 0F 9F 03 01 00 D6 0F 9F 03 06 00 16 10 A6 03 06 00 D1 07 DD 00 06 00 20
      10 DD 00 06 00 2B 10 AA 03 06 00 3D 10 DD 00 06 00 4D 10 AA 03 06 00 58 10 AE 03 06 00 7F 10 B9
      03 06 00 8F 10 BD 03 50 20 00 00 00 00 81 08 FF 01 1A 00 01 00 67 20 00 00 00 00 81 08 08 02 1F
      00 01 00 70 20 00 00 00 00 81 08 5A 02 25 00 02 00 87 20 00 00 00 00 81 08 6B 02 2A 00 02 00 90
      20 00 00 00 00 81 08 B6 02 30 00 03 00 A7 20 00 00 00 00 81 08 CC 02 35 00 03 00 B0 20 00 00 00
      00 81 08 FA 02 3B 00 04 00 C7 20 00 00 00 00 81 08 15 03 40 00 04 00 D0 20 00 00 00 00 81 08 51
      03 46 00 05 00 E7 20 00 00 00 00 81 08 5F 03 4B 00 05 00 F0 20 00 00 00 00 81 08 85 03 51 00 06
      00 07 21 00 00 00 00 81 08 95 03 5A 00 06 00 10 21 00 00 00 00 81 08 B3 03 64 00 07 00 27 21 00
      00 00 00 81 08 C6 03 69 00 07 00 30 21 00 00 00 00 E6 09 15 04 7A 00 08 00 6C 21 00 00 00 00 E6
      09 25 04 7A 00 09 00 A8 21 00 00 00 00 86 18 38 04 84 00 0A 00 3C 22 00 00 00 00 81 00 5D 04 90
      00 0E 00 75 22 00 00 00 00 81 00 8D 04 97 00 10 00 88 22 00 00 00 00 81 00 B0 04 9E 00 12 00 64
      23 00 00 00 00 81 00 C6 04 A4 00 13 00 FC 24 00 00 00 00 91 00 E6 04 A8 00 13 00 58 25 00 00 00
      00 81 00 F8 04 B0 00 15 00 F8 29 00 00 00 00 E6 01 3E 05 BE 00 18 00 E4 24 00 00 00 00 91 00 9F
      0C 6B 02 19 00 20 2A 00 00 00 00 83 08 B6 02 30 00 1A 00 37 2A 00 00 00 00 83 08 CC 02 35 00 1A
      00 40 2A 00 00 00 00 83 08 A4 06 1B 01 1B 00 57 2A 00 00 00 00 83 08 C7 06 20 01 1B 00 60 2A 00
      00 00 00 E6 01 EA 06 26 01 1C 00 A3 2A 00 00 00 00 86 18 38 04 A4 00 1E 00 AB 2A 00 00 00 00 86
      18 38 04 A4 00 1E 00 BB 2A 00 00 00 00 86 18 38 04 A4 00 1E 00 00 26 00 00 00 00 86 18 38 04 A4
      00 1E 00 08 26 00 00 00 00 86 00 7A 0D 3A 03 1E 00 38 26 00 00 00 00 E1 01 06 0E 70 03 1F 00 9C
      26 00 00 00 00 E1 01 A2 0E 88 03 1F 00 B4 26 00 00 00 00 E1 01 CF 0E 1C 02 1F 00 28 29 00 00 00
      00 E1 09 E5 0E 96 03 1F 00 3F 29 00 00 00 00 E1 01 7D 0F A4 00 1F 00 48 29 00 00 00 00 E1 01 A8
      0F A4 00 1F 00 90 29 00 00 00 00 E1 09 EB 0F A2 03 1F 00 A7 29 00 00 00 00 86 18 38 04 4E 01 1F
      00 C8 29 00 00 00 00 81 00 9A 10 A4 00 20 00 00 00 01 00 4D 07 00 00 01 00 4D 07 00 00 01 00 4D
      07 00 00 01 00 4D 07 00 00 01 00 4D 07 00 00 01 00 4D 07 00 00 01 00 4D 07 00 00 01 00 4D 07 00
      00 01 00 4D 07 00 00 01 00 53 07 00 00 02 00 58 07 00 00 03 00 65 07 00 00 04 00 77 07 00 00 01
      00 8E 07 00 00 02 00 95 07 00 00 01 00 8E 07 00 00 02 00 95 07 00 00 01 00 97 07 00 00 01 00 A5
      07 00 00 02 00 B4 07 00 00 01 00 A5 07 00 00 02 00 B9 07 00 00 03 00 C2 07 00 00 01 00 D1 07 00
      00 01 00 B7 0C 00 00 01 00 4D 07 00 00 01 00 4D 07 00 00 01 00 D7 07 00 00 02 00 E0 07 00 00 01
      00 88 0D 00 00 01 00 CB 0F 02 00 06 00 03 00 0D 00 07 00 26 00 07 00 E9 00 07 00 2A 00 07 00 F1
      00 07 00 F5 00 C1 00 38 04 3D 01 C9 00 38 04 3D 01 D1 00 38 04 3D 01 D9 00 38 04 3D 01 E1 00 38
      04 3D 01 E9 00 38 04 3D 01 F1 00 38 04 3D 01 F9 00 38 04 3D 01 01 01 38 04 3D 01 09 01 38 04 42
      01 11 01 38 04 3D 01 19 01 38 04 3D 01 21 01 38 04 47 01 31 01 38 04 4E 01 39 01 38 04 A4 00 41
      01 38 04 A4 00 49 01 48 0A 7F 01 51 01 6D 0A 8B 01 49 01 7D 0A 7F 01 09 00 38 04 A4 00 51 00 38
      04 A4 00 31 00 8F 0A BE 01 24 00 38 04 CB 01 59 01 99 0A D1 01 2C 00 38 04 CB 01 31 00 AD 0A E2
      01 81 00 CD 0A EC 01 81 00 DD 0A EC 01 59 01 ED 0A F2 01 89 00 FA 0A F2 01 91 00 18 0B FB 01 91
      00 33 0B 01 02 69 01 40 0B 07 02 34 00 49 0B 1C 02 1C 00 49 0B 1C 02 1C 00 56 0B 20 02 61 00 60
      0B EC 01 31 00 6D 0B EC 01 34 00 56 0B 20 02 69 00 7E 0B 25 02 61 00 8A 0B 64 00 61 00 94 0B 64
      00 3C 00 38 04 A4 00 49 00 A3 0B 45 02 99 00 B3 0B 4C 02 69 00 BC 0B 51 02 69 00 DC 0B 59 02 81
      01 8A 0B 64 00 69 00 EE 0B 51 02 69 00 FA 0B 5F 02 69 00 09 0C 67 02 89 01 16 0C 6B 02 1C 00 23
      0C 20 02 61 00 EE 0B 70 02 61 00 35 0C 78 02 91 01 38 04 7C 02 91 01 52 0C 84 02 41 00 8E 0C 8B
      02 3C 00 96 0C 98 02 51 00 38 04 A2 02 1C 00 38 04 AC 02 89 01 E7 0C 6B 02 99 00 F0 0C 1C 02 69
      00 60 0B EC 01 61 00 7E 0B DA 02 61 01 35 0C E2 02 44 00 38 04 CB 01 B9 01 2A 0D F1 02 C1 01 36
      0D 08 03 39 00 3C 0D EC 01 61 01 50 0D 0F 03 61 00 38 04 13 03 79 00 38 04 1C 03 14 00 5B 0D 22
      03 C1 01 62 0D 29 03 51 00 8D 0D 41 03 61 00 A7 0D 47 03 4C 00 94 0E 7E 03 D1 01 94 0E 88 03 E1
      01 CF 0E 1C 02 54 00 71 0F 20 02 E1 01 A2 0F A4 00 E9 01 C3 0F A4 00 E1 01 71 0F A2 03 F1 01 38
      04 A4 00 F9 01 76 11 D3 03 F9 01 88 11 0F 03 51 00 9C 11 0F 03 5C 00 38 04 CB 01 B9 01 A6 11 FA
      03 51 00 38 04 1C 03 51 00 AD 11 1A 04 64 00 38 04 28 04 51 00 C4 11 30 04 51 00 94 0E 39 04 6C
      00 71 0F 20 02 09 02 38 04 A4 00 11 02 38 04 79 04 21 02 38 04 3D 01 29 02 38 04 79 04 31 00 83
      12 25 00 B1 00 92 12 CF 05 31 02 38 04 A4 00 21 00 38 04 3D 01 39 02 38 04 3D 01 41 02 38 04 42
      01 29 00 38 04 A4 00 49 02 12 13 E3 06 7C 00 38 04 AC 02 59 02 3A 13 F1 06 59 02 4E 13 3D 01 29
      00 5E 13 4E 01 20 00 83 00 53 01 2E 00 73 00 DE 07 2E 00 23 00 70 07 2E 00 6B 00 D5 07 2E 00 2B
      00 76 07 2E 00 63 00 C8 07 2E 00 0B 00 FC 06 2E 00 13 00 44 07 2E 00 1B 00 70 07 2E 00 7B 00 E7
      07 2E 00 33 00 8D 07 2E 00 3B 00 AD 07 2E 00 43 00 70 07 2E 00 53 00 70 07 40 00 83 00 53 01 60
      00 83 00 53 01 61 00 83 00 53 01 63 00 13 03 80 04 63 00 23 03 2D 05 63 00 1B 03 23 05 80 00 83
      00 53 01 81 00 83 00 53 01 A0 00 83 00 53 01 A1 00 83 00 53 01 A3 00 53 03 D4 06 A3 00 4B 03 9A
      06 A3 00 13 03 E9 05 C0 00 83 00 53 01 C1 00 83 00 53 01 C3 00 83 00 53 01 E0 00 83 00 53 01 E1
      00 83 00 53 01 E3 00 83 00 53 01 00 01 83 00 53 01 01 01 83 00 53 01 09 01 3B 03 53 01 20 01 83
      00 53 01 21 01 83 00 53 01 29 01 3B 03 53 01 40 01 83 00 53 01 41 01 83 00 53 01 60 01 83 00 53
      01 61 01 83 00 53 01 80 01 83 00 53 01 81 01 83 00 53 01 A0 01 83 00 53 01 C0 01 83 00 53 01 20
      03 83 00 53 01 40 03 83 00 53 01 60 03 83 00 53 01 80 03 83 00 53 01 A0 03 83 00 53 01 80 04 AB
      02 53 01 A0 04 AB 02 53 01 E0 04 AB 02 53 01 00 05 AB 02 53 01 40 05 AB 02 53 01 60 05 AB 02 53
      01 58 01 5D 01 62 01 67 01 6C 01 71 01 7A 01 A1 01 F7 01 2B 02 B2 02 2E 03 52 03 D9 03 EA 03 4B
      04 59 04 62 04 66 04 6A 04 CA 05 DD 05 02 00 01 00 00 00 09 04 0A 00 02 00 01 00 03 00 08 00 07
      00 0A 00 00 00 1D 06 ED 00 00 00 22 06 F2 00 00 00 2F 06 F7 00 00 00 41 06 FC 00 00 00 58 06 01
      01 00 00 62 06 06 01 00 00 6E 06 0F 01 00 00 2F 06 F7 00 00 00 2E 07 38 01 00 00 A8 10 C6 03 00
      00 30 11 CF 03 10 00 10 00 02 00 08 00 0F 00 02 00 02 00 01 00 03 00 01 00 02 00 03 00 02 00 03
      00 05 00 01 00 04 00 05 00 01 00 06 00 07 00 02 00 05 00 07 00 02 00 07 00 09 00 01 00 08 00 09
      00 01 00 0A 00 0B 00 02 00 09 00 0B 00 02 00 0B 00 0D 00 01 00 0C 00 0D 00 01 00 0E 00 0F 00 02
      00 0D 00 0F 00 01 00 1B 00 11 00 02 00 1A 00 11 00 01 00 1D 00 13 00 02 00 1C 00 13 00 02 00 27
      00 15 00 02 00 2A 00 17 00 07 00 48 00 9D 00 07 00 4A 00 9F 00 07 00 4C 00 A1 00 07 00 4E 00 A3
      00 07 00 50 00 A5 00 07 00 52 00 A7 00 07 00 54 00 A9 00 13 00 14 01 B7 01 C4 01 DB 01 15 02 3D
      02 E9 02 59 03 64 03 F0 03 20 04 43 04 D6 05 E9 06 04 80 00 00 00 00 01 00 00 00 00 00 00 00 00
      00 00 00 FD 09 00 00 04 00 00 00 00 00 00 00 00 00 00 00 01 00 C5 00 00 00 00 00 0A 00 00 00 00
      00 00 00 00 00 00 00 0A 00 DC 00 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 0A 00 2C 01 00
      00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 0A 00 6D 01 00 00 00 00 0A 00 00 00 00 00 00 00 00
      00 00 00 0A 00 11 02 00 00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 01 00 07 0D 00 00 00 00 04
      00 00 00 00 00 00 00 00 00 00 00 01 00 E2 11 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 0A
      00 19 12 00 00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 DA 06 DF 12 00 00 00 00 06 00 02 00 07
      00 02 00 00 00 00 00 3D 00 FC 06 25 00 98 01 89 00 04 03 B5 00 13 04 01 00 5D 00 00 00 00 00 00
      3C 4D 6F 64 75 6C 65 3E 00 4A 41 45 45 2E 41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73 69 6F 6E
      73 2E 48 69 67 68 6C 69 67 68 74 57 6F 72 64 2E 64 6C 6C 00 48 69 67 68 6C 69 67 68 74 57 6F 72
      64 54 61 67 67 65 72 00 4A 41 45 45 2E 41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73 69 6F 6E 73
      00 48 69 67 68 6C 69 67 68 74 57 6F 72 64 54 61 67 67 65 72 50 72 6F 76 69 64 65 72 00 48 69 67
      68 6C 69 67 68 74 57 6F 72 64 54 61 67 00 48 69 67 68 6C 69 67 68 74 57 6F 72 64 46 6F 72 6D 61
      74 44 65 66 69 6E 69 74 69 6F 6E 00 4A 41 45 45 2E 41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73
      69 6F 6E 00 6D 73 63 6F 72 6C 69 62 00 53 79 73 74 65 6D 00 4F 62 6A 65 63 74 00 4D 69 63 72 6F
      73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 4C 6F 67 69 63 00 4D 69 63
      72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 54 61 67 67 69 6E 67
      00 49 54 61 67 67 65 72 60 31 00 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69
      6F 2E 54 65 78 74 2E 55 49 00 49 56 69 65 77 54 61 67 67 65 72 50 72 6F 76 69 64 65 72 00 54 65
      78 74 4D 61 72 6B 65 72 54 61 67 00 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64
      69 6F 2E 54 65 78 74 2E 55 49 2E 57 70 66 00 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53
      74 75 64 69 6F 2E 54 65 78 74 2E 43 6C 61 73 73 69 66 69 63 61 74 69 6F 6E 00 4D 61 72 6B 65 72
      46 6F 72 6D 61 74 44 65 66 69 6E 69 74 69 6F 6E 00 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61
      6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 45 64 69 74 6F 72 00 49 54 65 78 74 56 69 65 77 00 67 65
      74 5F 56 69 65 77 00 73 65 74 5F 56 69 65 77 00 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C
      53 74 75 64 69 6F 2E 54 65 78 74 2E 44 61 74 61 00 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61
      6C 53 74 75 64 69 6F 2E 54 65 78 74 00 49 54 65 78 74 42 75 66 66 65 72 00 67 65 74 5F 53 6F 75
      72 63 65 42 75 66 66 65 72 00 73 65 74 5F 53 6F 75 72 63 65 42 75 66 66 65 72 00 4D 69 63 72 6F
      73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 4F 70 65 72 61 74 69 6F 6E
      73 00 49 54 65 78 74 53 65 61 72 63 68 53 65 72 76 69 63 65 00 67 65 74 5F 54 65 78 74 53 65 61
      72 63 68 53 65 72 76 69 63 65 00 73 65 74 5F 54 65 78 74 53 65 61 72 63 68 53 65 72 76 69 63 65
      00 49 54 65 78 74 53 74 72 75 63 74 75 72 65 4E 61 76 69 67 61 74 6F 72 00 67 65 74 5F 54 65 78
      74 53 74 72 75 63 74 75 72 65 4E 61 76 69 67 61 74 6F 72 00 73 65 74 5F 54 65 78 74 53 74 72 75
      63 74 75 72 65 4E 61 76 69 67 61 74 6F 72 00 4E 6F 72 6D 61 6C 69 7A 65 64 53 6E 61 70 73 68 6F
      74 53 70 61 6E 43 6F 6C 6C 65 63 74 69 6F 6E 00 67 65 74 5F 57 6F 72 64 53 70 61 6E 73 00 73 65
      74 5F 57 6F 72 64 53 70 61 6E 73 00 4E 75 6C 6C 61 62 6C 65 60 31 00 53 6E 61 70 73 68 6F 74 53
      70 61 6E 00 67 65 74 5F 43 75 72 72 65 6E 74 57 6F 72 64 00 73 65 74 5F 43 75 72 72 65 6E 74 57
      6F 72 64 00 53 6E 61 70 73 68 6F 74 50 6F 69 6E 74 00 67 65 74 5F 52 65 71 75 65 73 74 65 64 50
      6F 69 6E 74 00 73 65 74 5F 52 65 71 75 65 73 74 65 64 50 6F 69 6E 74 00 75 70 64 61 74 65 4C 6F
      63 6B 00 45 76 65 6E 74 48 61 6E 64 6C 65 72 60 31 00 53 6E 61 70 73 68 6F 74 53 70 61 6E 45 76
      65 6E 74 41 72 67 73 00 54 61 67 73 43 68 61 6E 67 65 64 00 61 64 64 5F 54 61 67 73 43 68 61 6E
      67 65 64 00 72 65 6D 6F 76 65 5F 54 61 67 73 43 68 61 6E 67 65 64 00 2E 63 74 6F 72 00 54 65 78
      74 56 69 65 77 4C 61 79 6F 75 74 43 68 61 6E 67 65 64 45 76 65 6E 74 41 72 67 73 00 56 69 65 77
      4C 61 79 6F 75 74 43 68 61 6E 67 65 64 00 43 61 72 65 74 50 6F 73 69 74 69 6F 6E 43 68 61 6E 67
      65 64 45 76 65 6E 74 41 72 67 73 00 43 61 72 65 74 50 6F 73 69 74 69 6F 6E 43 68 61 6E 67 65 64
      00 43 61 72 65 74 50 6F 73 69 74 69 6F 6E 00 55 70 64 61 74 65 41 74 43 61 72 65 74 50 6F 73 69
      74 69 6F 6E 00 55 70 64 61 74 65 57 6F 72 64 41 64 6F 72 6E 6D 65 6E 74 73 00 54 65 78 74 45 78
      74 65 6E 74 00 57 6F 72 64 45 78 74 65 6E 74 49 73 56 61 6C 69 64 00 53 79 6E 63 68 72 6F 6E 6F
      75 73 55 70 64 61 74 65 00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 2E 47 65 6E 65
      72 69 63 00 49 45 6E 75 6D 65 72 61 62 6C 65 60 31 00 49 54 61 67 53 70 61 6E 60 31 00 47 65 74
      54 61 67 73 00 3C 56 69 65 77 3E 6B 5F 5F 42 61 63 6B 69 6E 67 46 69 65 6C 64 00 3C 53 6F 75 72
      63 65 42 75 66 66 65 72 3E 6B 5F 5F 42 61 63 6B 69 6E 67 46 69 65 6C 64 00 3C 54 65 78 74 53 65
      61 72 63 68 53 65 72 76 69 63 65 3E 6B 5F 5F 42 61 63 6B 69 6E 67 46 69 65 6C 64 00 3C 54 65 78
      74 53 74 72 75 63 74 75 72 65 4E 61 76 69 67 61 74 6F 72 3E 6B 5F 5F 42 61 63 6B 69 6E 67 46 69
      65 6C 64 00 3C 57 6F 72 64 53 70 61 6E 73 3E 6B 5F 5F 42 61 63 6B 69 6E 67 46 69 65 6C 64 00 3C
      43 75 72 72 65 6E 74 57 6F 72 64 3E 6B 5F 5F 42 61 63 6B 69 6E 67 46 69 65 6C 64 00 3C 52 65 71
      75 65 73 74 65 64 50 6F 69 6E 74 3E 6B 5F 5F 42 61 63 6B 69 6E 67 46 69 65 6C 64 00 56 69 65 77
      00 53 6F 75 72 63 65 42 75 66 66 65 72 00 54 65 78 74 53 65 61 72 63 68 53 65 72 76 69 63 65 00
      54 65 78 74 53 74 72 75 63 74 75 72 65 4E 61 76 69 67 61 74 6F 72 00 57 6F 72 64 53 70 61 6E 73
      00 43 75 72 72 65 6E 74 57 6F 72 64 00 52 65 71 75 65 73 74 65 64 50 6F 69 6E 74 00 49 54 65 78
      74 53 74 72 75 63 74 75 72 65 4E 61 76 69 67 61 74 6F 72 53 65 6C 65 63 74 6F 72 53 65 72 76 69
      63 65 00 67 65 74 5F 54 65 78 74 53 74 72 75 63 74 75 72 65 4E 61 76 69 67 61 74 6F 72 53 65 6C
      65 63 74 6F 72 00 73 65 74 5F 54 65 78 74 53 74 72 75 63 74 75 72 65 4E 61 76 69 67 61 74 6F 72
      53 65 6C 65 63 74 6F 72 00 43 72 65 61 74 65 54 61 67 67 65 72 00 49 54 61 67 00 54 00 3C 54 65
      78 74 53 74 72 75 63 74 75 72 65 4E 61 76 69 67 61 74 6F 72 53 65 6C 65 63 74 6F 72 3E 6B 5F 5F
      42 61 63 6B 69 6E 67 46 69 65 6C 64 00 54 65 78 74 53 74 72 75 63 74 75 72 65 4E 61 76 69 67 61
      74 6F 72 53 65 6C 65 63 74 6F 72 00 76 61 6C 75 65 00 76 69 65 77 00 73 6F 75 72 63 65 42 75 66
      66 65 72 00 74 65 78 74 53 65 61 72 63 68 53 65 72 76 69 63 65 00 74 65 78 74 53 74 72 75 63 74
      75 72 65 4E 61 76 69 67 61 74 6F 72 00 73 65 6E 64 65 72 00 65 00 63 61 72 65 74 50 6F 73 69 74
      69 6F 6E 00 63 75 72 72 65 6E 74 52 65 71 75 65 73 74 00 77 6F 72 64 00 6E 65 77 53 70 61 6E 73
      00 6E 65 77 43 75 72 72 65 6E 74 57 6F 72 64 00 73 70 61 6E 73 00 74 65 78 74 56 69 65 77 00 62
      75 66 66 65 72 00 53 79 73 74 65 6D 2E 52 75 6E 74 69 6D 65 2E 56 65 72 73 69 6F 6E 69 6E 67 00
      54 61 72 67 65 74 46 72 61 6D 65 77 6F 72 6B 41 74 74 72 69 62 75 74 65 00 53 79 73 74 65 6D 2E
      52 65 66 6C 65 63 74 69 6F 6E 00 41 73 73 65 6D 62 6C 79 54 69 74 6C 65 41 74 74 72 69 62 75 74
      65 00 41 73 73 65 6D 62 6C 79 44 65 73 63 72 69 70 74 69 6F 6E 41 74 74 72 69 62 75 74 65 00 41
      73 73 65 6D 62 6C 79 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 41 74 74 72 69 62 75 74 65 00 41 73
      73 65 6D 62 6C 79 43 6F 6D 70 61 6E 79 41 74 74 72 69 62 75 74 65 00 41 73 73 65 6D 62 6C 79 50
      72 6F 64 75 63 74 41 74 74 72 69 62 75 74 65 00 41 73 73 65 6D 62 6C 79 43 6F 70 79 72 69 67 68
      74 41 74 74 72 69 62 75 74 65 00 41 73 73 65 6D 62 6C 79 54 72 61 64 65 6D 61 72 6B 41 74 74 72
      69 62 75 74 65 00 41 73 73 65 6D 62 6C 79 43 75 6C 74 75 72 65 41 74 74 72 69 62 75 74 65 00 53
      79 73 74 65 6D 2E 52 75 6E 74 69 6D 65 2E 49 6E 74 65 72 6F 70 53 65 72 76 69 63 65 73 00 43 6F
      6D 56 69 73 69 62 6C 65 41 74 74 72 69 62 75 74 65 00 41 73 73 65 6D 62 6C 79 56 65 72 73 69 6F
      6E 41 74 74 72 69 62 75 74 65 00 41 73 73 65 6D 62 6C 79 46 69 6C 65 56 65 72 73 69 6F 6E 41 74
      74 72 69 62 75 74 65 00 53 79 73 74 65 6D 2E 44 69 61 67 6E 6F 73 74 69 63 73 00 44 65 62 75 67
      67 61 62 6C 65 41 74 74 72 69 62 75 74 65 00 44 65 62 75 67 67 69 6E 67 4D 6F 64 65 73 00 53 79
      73 74 65 6D 2E 52 75 6E 74 69 6D 65 2E 43 6F 6D 70 69 6C 65 72 53 65 72 76 69 63 65 73 00 43 6F
      6D 70 69 6C 61 74 69 6F 6E 52 65 6C 61 78 61 74 69 6F 6E 73 41 74 74 72 69 62 75 74 65 00 52 75
      6E 74 69 6D 65 43 6F 6D 70 61 74 69 62 69 6C 69 74 79 41 74 74 72 69 62 75 74 65 00 4A 41 45 45
      2E 41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73 69 6F 6E 73 2E 48 69 67 68 6C 69 67 68 74 57 6F
      72 64 00 43 6F 6D 70 69 6C 65 72 47 65 6E 65 72 61 74 65 64 41 74 74 72 69 62 75 74 65 00 44 65
      6C 65 67 61 74 65 00 43 6F 6D 62 69 6E 65 00 53 79 73 74 65 6D 2E 54 68 72 65 61 64 69 6E 67 00
      49 6E 74 65 72 6C 6F 63 6B 65 64 00 43 6F 6D 70 61 72 65 45 78 63 68 61 6E 67 65 00 52 65 6D 6F
      76 65 00 49 54 65 78 74 43 61 72 65 74 00 67 65 74 5F 43 61 72 65 74 00 61 64 64 5F 50 6F 73 69
      74 69 6F 6E 43 68 61 6E 67 65 64 00 61 64 64 5F 4C 61 79 6F 75 74 43 68 61 6E 67 65 64 00 49 54
      65 78 74 53 6E 61 70 73 68 6F 74 00 67 65 74 5F 4E 65 77 53 6E 61 70 73 68 6F 74 00 67 65 74 5F
      4F 6C 64 53 6E 61 70 73 68 6F 74 00 67 65 74 5F 50 6F 73 69 74 69 6F 6E 00 67 65 74 5F 4E 65 77
      50 6F 73 69 74 69 6F 6E 00 49 4D 61 70 70 69 6E 67 50 6F 69 6E 74 00 67 65 74 5F 50 6F 69 6E 74
      00 50 6F 73 69 74 69 6F 6E 41 66 66 69 6E 69 74 79 00 67 65 74 5F 41 66 66 69 6E 69 74 79 00 47
      65 74 50 6F 69 6E 74 00 67 65 74 5F 48 61 73 56 61 6C 75 65 00 67 65 74 5F 56 61 6C 75 65 00 67
      65 74 5F 53 6E 61 70 73 68 6F 74 00 67 65 74 5F 54 65 78 74 53 6E 61 70 73 68 6F 74 00 6F 70 5F
      49 6D 70 6C 69 63 69 74 00 67 65 74 5F 53 74 61 72 74 00 67 65 74 5F 45 6E 64 00 4C 69 73 74 60
      31 00 47 65 74 45 78 74 65 6E 74 4F 66 57 6F 72 64 00 67 65 74 5F 53 70 61 6E 00 6F 70 5F 49 6E
      65 71 75 61 6C 69 74 79 00 49 54 65 78 74 53 6E 61 70 73 68 6F 74 4C 69 6E 65 00 47 65 74 43 6F
      6E 74 61 69 6E 69 6E 67 4C 69 6E 65 00 6F 70 5F 45 71 75 61 6C 69 74 79 00 6F 70 5F 53 75 62 74
      72 61 63 74 69 6F 6E 00 47 65 74 43 68 61 72 00 43 68 61 72 00 49 73 57 68 69 74 65 53 70 61 63
      65 00 47 65 74 56 61 6C 75 65 4F 72 44 65 66 61 75 6C 74 00 47 65 74 54 65 78 74 00 46 69 6E 64
      44 61 74 61 00 46 69 6E 64 4F 70 74 69 6F 6E 73 00 73 65 74 5F 46 69 6E 64 4F 70 74 69 6F 6E 73
      00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 2E 4F 62 6A 65 63 74 4D 6F 64 65 6C 00
      43 6F 6C 6C 65 63 74 69 6F 6E 60 31 00 46 69 6E 64 41 6C 6C 00 41 64 64 52 61 6E 67 65 00 3C 57
      6F 72 64 45 78 74 65 6E 74 49 73 56 61 6C 69 64 3E 62 5F 5F 30 00 63 00 46 75 6E 63 60 32 00 43
      53 24 3C 3E 39 5F 5F 43 61 63 68 65 64 41 6E 6F 6E 79 6D 6F 75 73 4D 65 74 68 6F 64 44 65 6C 65
      67 61 74 65 31 00 49 73 4C 65 74 74 65 72 00 67 65 74 5F 49 73 53 69 67 6E 69 66 69 63 61 6E 74
      00 53 70 61 6E 00 53 79 73 74 65 6D 2E 43 6F 72 65 00 53 79 73 74 65 6D 2E 4C 69 6E 71 00 45 6E
      75 6D 65 72 61 62 6C 65 00 41 6E 79 00 4D 6F 6E 69 74 6F 72 00 45 6E 74 65 72 00 67 65 74 5F 43
      75 72 72 65 6E 74 53 6E 61 70 73 68 6F 74 00 67 65 74 5F 4C 65 6E 67 74 68 00 49 6E 76 6F 6B 65
      00 45 78 69 74 00 3C 3E 63 5F 5F 44 69 73 70 6C 61 79 43 6C 61 73 73 35 00 3C 47 65 74 54 61 67
      73 3E 62 5F 5F 33 00 73 70 61 6E 00 67 65 74 5F 49 74 65 6D 00 53 70 61 6E 54 72 61 63 6B 69 6E
      67 4D 6F 64 65 00 54 72 61 6E 73 6C 61 74 65 54 6F 00 3C 47 65 74 54 61 67 73 3E 64 5F 5F 37 00
      53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 00 49 45 6E 75 6D 65 72 61 62 6C 65 00 49
      45 6E 75 6D 65 72 61 74 6F 72 60 31 00 49 45 6E 75 6D 65 72 61 74 6F 72 00 49 44 69 73 70 6F 73
      61 62 6C 65 00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 2E 47 65 6E 65 72 69 63 2E
      49 45 6E 75 6D 65 72 61 62 6C 65 3C 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64
      69 6F 2E 54 65 78 74 2E 54 61 67 67 69 6E 67 2E 49 54 61 67 53 70 61 6E 3C 4A 41 45 45 2E 41 58
      2E 45 64 69 74 6F 72 45 78 74 65 6E 73 69 6F 6E 73 2E 48 69 67 68 6C 69 67 68 74 57 6F 72 64 54
      61 67 3E 3E 2E 47 65 74 45 6E 75 6D 65 72 61 74 6F 72 00 47 65 74 45 6E 75 6D 65 72 61 74 6F 72
      00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 2E 49 45 6E 75 6D 65 72 61 62 6C 65 2E
      47 65 74 45 6E 75 6D 65 72 61 74 6F 72 00 4D 6F 76 65 4E 65 78 74 00 3C 3E 32 5F 5F 63 75 72 72
      65 6E 74 00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 2E 47 65 6E 65 72 69 63 2E 49
      45 6E 75 6D 65 72 61 74 6F 72 3C 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69
      6F 2E 54 65 78 74 2E 54 61 67 67 69 6E 67 2E 49 54 61 67 53 70 61 6E 3C 4A 41 45 45 2E 41 58 2E
      45 64 69 74 6F 72 45 78 74 65 6E 73 69 6F 6E 73 2E 48 69 67 68 6C 69 67 68 74 57 6F 72 64 54 61
      67 3E 3E 2E 67 65 74 5F 43 75 72 72 65 6E 74 00 67 65 74 5F 43 75 72 72 65 6E 74 00 53 79 73 74
      65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 2E 49 45 6E 75 6D 65 72 61 74 6F 72 2E 52 65 73 65 74
      00 52 65 73 65 74 00 53 79 73 74 65 6D 2E 49 44 69 73 70 6F 73 61 62 6C 65 2E 44 69 73 70 6F 73
      65 00 44 69 73 70 6F 73 65 00 3C 3E 31 5F 5F 73 74 61 74 65 00 3C 3E 6C 5F 5F 69 6E 69 74 69 61
      6C 54 68 72 65 61 64 49 64 00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 2E 49 45 6E
      75 6D 65 72 61 74 6F 72 2E 67 65 74 5F 43 75 72 72 65 6E 74 00 3C 3E 34 5F 5F 74 68 69 73 00 3C
      3E 33 5F 5F 73 70 61 6E 73 00 3C 63 75 72 72 65 6E 74 57 6F 72 64 3E 35 5F 5F 38 00 3C 77 6F 72
      64 53 70 61 6E 73 3E 35 5F 5F 39 00 3C 73 70 61 6E 3E 35 5F 5F 61 00 43 53 24 3C 3E 39 5F 5F 43
      61 63 68 65 64 41 6E 6F 6E 79 6D 6F 75 73 4D 65 74 68 6F 64 44 65 6C 65 67 61 74 65 34 00 43 53
      24 3C 3E 38 5F 5F 6C 6F 63 61 6C 73 36 00 3C 3E 37 5F 5F 77 72 61 70 62 00 3C 3E 6D 5F 5F 46 69
      6E 61 6C 6C 79 63 00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 2E 47 65 6E 65 72 69
      63 2E 49 45 6E 75 6D 65 72 61 74 6F 72 3C 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74
      75 64 69 6F 2E 54 65 78 74 2E 54 61 67 67 69 6E 67 2E 49 54 61 67 53 70 61 6E 3C 4A 41 45 45 2E
      41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73 69 6F 6E 73 2E 48 69 67 68 6C 69 67 68 74 57 6F 72
      64 54 61 67 3E 3E 2E 43 75 72 72 65 6E 74 00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E
      73 2E 49 45 6E 75 6D 65 72 61 74 6F 72 2E 43 75 72 72 65 6E 74 00 44 65 62 75 67 67 65 72 48 69
      64 64 65 6E 41 74 74 72 69 62 75 74 65 00 54 68 72 65 61 64 00 67 65 74 5F 43 75 72 72 65 6E 74
      54 68 72 65 61 64 00 67 65 74 5F 4D 61 6E 61 67 65 64 54 68 72 65 61 64 49 64 00 67 65 74 5F 43
      6F 75 6E 74 00 53 65 6C 65 63 74 00 4F 76 65 72 6C 61 70 73 57 69 74 68 00 54 61 67 53 70 61 6E
      60 31 00 4F 76 65 72 6C 61 70 00 4E 6F 74 53 75 70 70 6F 72 74 65 64 45 78 63 65 70 74 69 6F 6E
      00 53 79 73 74 65 6D 2E 43 6F 6D 70 6F 6E 65 6E 74 4D 6F 64 65 6C 2E 43 6F 6D 70 6F 73 69 74 69
      6F 6E 00 45 78 70 6F 72 74 41 74 74 72 69 62 75 74 65 00 54 79 70 65 00 4D 69 63 72 6F 73 6F 66
      74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 43 6F 72 65 55 74 69 6C 69 74 79 00 4D 69 63 72 6F
      73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 55 74 69 6C 69 74 69 65 73 00 43 6F 6E 74
      65 6E 74 54 79 70 65 41 74 74 72 69 62 75 74 65 00 54 61 67 54 79 70 65 41 74 74 72 69 62 75 74
      65 00 67 65 74 5F 54 65 78 74 42 75 66 66 65 72 00 47 65 74 54 65 78 74 53 74 72 75 63 74 75 72
      65 4E 61 76 69 67 61 74 6F 72 00 49 6D 70 6F 72 74 41 74 74 72 69 62 75 74 65 00 4E 61 6D 65 41
      74 74 72 69 62 75 74 65 00 55 73 65 72 56 69 73 69 62 6C 65 41 74 74 72 69 62 75 74 65 00 50 72
      65 73 65 6E 74 61 74 69 6F 6E 43 6F 72 65 00 53 79 73 74 65 6D 2E 57 69 6E 64 6F 77 73 2E 4D 65
      64 69 61 00 43 6F 6C 6F 72 73 00 43 6F 6C 6F 72 00 67 65 74 5F 44 61 72 6B 53 65 61 47 72 65 65
      6E 00 45 64 69 74 6F 72 46 6F 72 6D 61 74 44 65 66 69 6E 69 74 69 6F 6E 00 73 65 74 5F 42 61 63
      6B 67 72 6F 75 6E 64 43 6F 6C 6F 72 00 73 65 74 5F 44 69 73 70 6C 61 79 4E 61 6D 65 00 73 65 74
      5F 5A 4F 72 64 65 72 00 00 00 00 00 69 4D 00 61 00 72 00 6B 00 65 00 72 00 46 00 6F 00 72 00 6D
      00 61 00 74 00 44 00 65 00 66 00 69 00 6E 00 69 00 74 00 69 00 6F 00 6E 00 2F 00 48 00 69 00 67
      00 68 00 6C 00 69 00 67 00 68 00 74 00 57 00 6F 00 72 00 64 00 46 00 6F 00 72 00 6D 00 61 00 74
      00 44 00 65 00 66 00 69 00 6E 00 69 00 74 00 69 00 6F 00 6E 00 00 2F 48 00 69 00 67 00 68 00 6C
      00 69 00 67 00 68 00 74 00 20 00 53 00 65 00 6C 00 65 00 63 00 74 00 65 00 64 00 20 00 57 00 6F
      00 72 00 64 00 00 00 44 58 9A 4A A2 D7 2B 45 9E EB 61 1C 3E 6F 57 C4 00 08 B7 7A 5C 56 19 34 E0
      89 08 B0 3F 5F 7F 11 D5 0A 3A 06 15 12 09 01 12 10 04 20 00 12 19 05 20 01 01 12 19 04 20 00 12
      1D 05 20 01 01 12 1D 04 20 00 12 21 05 20 01 01 12 21 04 20 00 12 25 05 20 01 01 12 25 04 20 00
      12 29 05 20 01 01 12 29 08 20 00 15 11 2D 01 11 31 09 20 01 01 15 11 2D 01 11 31 04 20 00 11 35
      05 20 01 01 11 35 02 06 1C 07 06 15 12 39 01 12 3D 09 20 01 01 15 12 39 01 12 3D 0B 20 04 01 12
      19 12 1D 12 21 12 25 06 20 02 01 1C 12 41 06 20 02 01 1C 12 45 05 20 01 01 11 49 03 20 00 01 07
      00 02 02 11 35 11 4D 0D 20 03 01 11 35 12 29 15 11 2D 01 11 31 0E 20 01 15 12 51 01 15 12 55 01
      12 10 12 29 03 06 12 19 03 06 12 1D 03 06 12 21 03 06 12 25 03 06 12 29 07 06 15 11 2D 01 11 31
      03 06 11 35 04 28 00 12 19 04 28 00 12 1D 04 28 00 12 21 04 28 00 12 25 04 28 00 12 29 08 28 00
      15 11 2D 01 11 31 04 28 00 11 35 06 15 12 39 01 12 3D 04 20 00 12 59 05 20 01 01 12 59 0D 30 01
      02 15 12 09 01 1E 00 12 19 12 1D 03 06 12 59 04 28 00 12 59 04 20 01 01 0E 04 20 01 01 02 06 20
      01 01 11 80 95 04 20 01 01 08 04 01 00 00 00 04 07 01 12 19 04 07 01 12 1D 04 07 01 12 21 04 07
      01 12 25 04 07 01 12 29 08 07 01 15 11 2D 01 11 31 04 07 01 11 35 0B 00 02 12 80 A5 12 80 A5 12
      80 A5 0C 10 01 03 1E 00 10 1E 00 1E 00 1E 00 08 0A 01 15 12 39 01 12 3D 15 07 04 15 12 39 01 12
      3D 15 12 39 01 12 3D 15 12 39 01 12 3D 02 06 15 11 2D 01 11 31 05 20 00 12 80 AD 06 15 12 39 01
      12 45 05 20 02 01 1C 18 09 20 01 01 15 12 39 01 12 45 06 15 12 39 01 12 41 09 20 01 01 15 12 39
      01 12 41 05 20 00 12 80 B1 04 20 00 11 49 03 07 01 02 05 20 00 12 80 B5 05 20 00 11 80 B9 0D 20
      02 15 11 2D 01 11 35 12 1D 11 80 B9 06 15 11 2D 01 11 35 03 20 00 02 04 20 00 13 00 05 00 01 08
      11 35 11 07 04 15 11 2D 01 11 35 02 15 11 2D 01 11 31 11 31 07 15 12 80 BD 01 11 31 06 20 01 11
      4D 11 35 04 20 00 11 31 07 00 02 02 11 35 11 35 05 20 00 12 80 C1 07 00 02 11 35 11 35 08 03 20
      00 03 04 00 01 02 03 07 00 02 02 11 31 11 31 03 20 00 0E 07 20 02 01 0E 12 80 B1 06 20 01 01 11
      80 CD 0C 20 01 15 12 80 D1 01 11 31 11 80 C9 09 20 01 01 15 12 51 01 13 00 09 20 01 01 15 12 51
      01 11 31 05 20 01 01 13 00 1E 07 0A 11 35 15 12 80 BD 01 11 31 11 4D 02 11 31 11 80 C9 02 11 31
      11 35 15 11 2D 01 11 31 08 06 15 12 80 D5 02 03 02 07 00 01 11 80 D9 11 31 06 20 01 0E 11 80 D9
      07 15 12 80 D5 02 03 02 12 10 01 02 02 15 12 51 01 1E 00 15 12 80 D5 02 1E 00 02 03 0A 01 03 06
      00 02 01 1C 10 02 03 20 00 08 08 20 03 01 12 80 B1 08 08 05 20 01 01 11 31 06 20 02 01 1C 13 00
      04 00 01 01 1C 0B 07 04 15 12 39 01 12 3D 02 1C 02 06 20 01 11 31 11 31 05 20 01 11 31 08 0A 20
      02 11 31 12 80 B1 11 80 E5 06 07 02 11 31 11 31 0A 15 12 51 01 15 12 55 01 12 10 0B 15 12 80 ED
      01 15 12 55 01 12 10 0D 20 00 15 12 80 ED 01 15 12 55 01 12 10 09 20 00 15 12 80 ED 01 13 00 05
      20 00 12 80 F1 07 06 15 12 55 01 12 10 08 20 00 15 12 55 01 12 10 02 06 08 03 20 00 1C 03 06 12
      08 03 06 11 31 0A 06 15 12 80 D5 02 11 31 11 31 03 06 12 18 08 06 15 12 80 ED 01 11 31 08 28 00
      15 12 55 01 12 10 03 28 00 1C 05 00 00 12 80 FD 10 07 03 12 1C 15 12 80 ED 01 15 12 55 01 12 10
      02 05 07 01 12 80 F1 09 15 12 80 D5 02 11 31 11 31 18 10 02 02 15 12 51 01 1E 01 15 12 51 01 1E
      00 15 12 80 D5 02 1E 00 1E 01 06 0A 02 11 31 11 31 05 20 01 02 12 29 07 15 12 81 01 01 12 10 07
      20 02 01 11 31 13 00 08 00 02 12 29 12 29 12 29 09 20 00 15 12 80 ED 01 11 31 07 15 12 80 ED 01
      11 31 0D 07 05 02 08 15 11 2D 01 11 31 02 11 31 08 07 01 15 12 55 01 12 10 03 07 01 08 03 07 01
      1C 0E 07 02 12 1C 15 12 51 01 15 12 55 01 12 10 06 20 01 01 12 81 0D 80 A1 01 00 80 9B 4D 69 63
      72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 54 61 67 67 69 6E 67
      2E 49 56 69 65 77 54 61 67 67 65 72 50 72 6F 76 69 64 65 72 2C 20 4D 69 63 72 6F 73 6F 66 74 2E
      56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 55 49 2C 20 56 65 72 73 69 6F 6E 3D 31 30
      2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B
      65 79 54 6F 6B 65 6E 3D 62 30 33 66 35 66 37 66 31 31 64 35 30 61 33 61 00 00 09 01 00 04 74 65
      78 74 00 00 80 9B 01 00 80 95 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F
      2E 54 65 78 74 2E 54 61 67 67 69 6E 67 2E 54 65 78 74 4D 61 72 6B 65 72 54 61 67 2C 20 4D 69 63
      72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 55 49 2C 20 56 65 72
      73 69 6F 6E 3D 31 30 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20
      50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 30 33 66 35 66 37 66 31 31 64 35 30 61 33 61 00
      00 04 07 01 12 59 06 20 01 12 25 12 1D 06 15 12 09 01 1E 00 0B 07 03 12 25 15 12 09 01 1E 00 02
      80 AF 01 00 80 A9 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78
      74 2E 43 6C 61 73 73 69 66 69 63 61 74 69 6F 6E 2E 45 64 69 74 6F 72 46 6F 72 6D 61 74 44 65 66
      69 6E 69 74 69 6F 6E 2C 20 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E
      54 65 78 74 2E 55 49 2E 57 70 66 2C 20 56 65 72 73 69 6F 6E 3D 31 30 2E 30 2E 30 2E 30 2C 20 43
      75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62
      30 33 66 35 66 37 66 31 31 64 35 30 61 33 61 00 00 39 01 00 34 4D 61 72 6B 65 72 46 6F 72 6D 61
      74 44 65 66 69 6E 69 74 69 6F 6E 2F 48 69 67 68 6C 69 67 68 74 57 6F 72 64 46 6F 72 6D 61 74 44
      65 66 69 6E 69 74 69 6F 6E 00 00 05 01 00 01 00 00 08 31 BF 38 56 AD 36 4E 35 05 00 00 11 81 29
      07 15 11 2D 01 11 81 29 0A 20 01 01 15 11 2D 01 11 81 29 47 01 00 1A 2E 4E 45 54 46 72 61 6D 65
      77 6F 72 6B 2C 56 65 72 73 69 6F 6E 3D 76 34 2E 30 01 00 54 0E 14 46 72 61 6D 65 77 6F 72 6B 44
      69 73 70 6C 61 79 4E 61 6D 65 10 2E 4E 45 54 20 46 72 61 6D 65 77 6F 72 6B 20 34 2B 01 00 26 4A
      41 45 45 2E 41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73 69 6F 6E 73 2E 48 69 67 68 6C 69 67 68
      74 57 6F 72 64 00 00 05 01 00 00 00 00 16 01 00 11 77 77 77 2E 6A 61 65 73 74 65 76 61 6E 2E 63
      6F 6D 00 00 1F 01 00 1A 4A 41 45 45 48 69 67 68 6C 69 67 68 74 57 6F 72 64 45 78 74 65 6E 73 69
      6F 6E 00 00 1A 01 00 15 4A 6F 73 C3 A9 20 41 6E 74 6F 6E 69 6F 20 45 73 74 65 76 61 6E 00 00 0C
      01 00 07 30 2E 31 2E 30 2E 30 00 00 08 01 00 07 01 00 00 00 00 08 01 00 08 00 00 00 00 00 1E 01
      00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78 63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 00 00 00
      00 00 00 E4 00 3D 51 00 00 00 00 02 00 00 00 9A 00 00 00 44 54 00 00 44 36 00 00 52 53 44 53 FB
      61 EA E3 80 11 0F 4B A4 29 67 50 CB D2 AC BB 01 00 00 00 44 3A 5C 44 72 6F 70 62 6F 78 5C 56 69
      73 75 61 6C 20 53 74 75 64 69 6F 5C 4A 41 45 45 2E 41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73
      69 6F 6E 73 5C 4A 41 45 45 48 69 67 68 6C 69 67 68 74 57 6F 72 64 45 78 74 65 6E 73 69 6F 6E 5C
      6F 62 6A 5C 44 65 62 75 67 5C 4A 41 45 45 2E 41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73 69 6F
      6E 73 2E 48 69 67 68 6C 69 67 68 74 57 6F 72 64 2E 70 64 62 00 00 00 08 55 00 00 00 00 00 00 00
      00 00 00 1E 55 00 00 00 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10
      55 00 00 00 00 00 00 00 00 5F 43 6F 72 44 6C 6C 4D 61 69 6E 00 6D 73 63 6F 72 65 65 2E 64 6C 6C
      00 00 00 00 00 FF 25 00 20 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 01 00 10 00 00 00 18 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 01
      00 00 00 30 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 48 00 00 00 58
      60 00 00 D4 03 00 00 00 00 00 00 00 00 00 00 D4 03 34 00 00 00 56 00 53 00 5F 00 56 00 45 00 52
      00 53 00 49 00 4F 00 4E 00 5F 00 49 00 4E 00 46 00 4F 00 00 00 00 00 BD 04 EF FE 00 00 01 00 01
      00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 3F 00 00 00 00 00 00 00 04 00 00 00 02 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 44 00 00 00 01 00 56 00 61 00 72 00 46 00 69 00 6C 00 65 00 49
      00 6E 00 66 00 6F 00 00 00 00 00 24 00 04 00 00 00 54 00 72 00 61 00 6E 00 73 00 6C 00 61 00 74
      00 69 00 6F 00 6E 00 00 00 00 00 00 00 B0 04 34 03 00 00 01 00 53 00 74 00 72 00 69 00 6E 00 67
      00 46 00 69 00 6C 00 65 00 49 00 6E 00 66 00 6F 00 00 00 10 03 00 00 01 00 30 00 30 00 30 00 30
      00 30 00 34 00 62 00 30 00 00 00 44 00 12 00 01 00 43 00 6F 00 6D 00 70 00 61 00 6E 00 79 00 4E
      00 61 00 6D 00 65 00 00 00 00 00 77 00 77 00 77 00 2E 00 6A 00 61 00 65 00 73 00 74 00 65 00 76
      00 61 00 6E 00 2E 00 63 00 6F 00 6D 00 00 00 78 00 27 00 01 00 46 00 69 00 6C 00 65 00 44 00 65
      00 73 00 63 00 72 00 69 00 70 00 74 00 69 00 6F 00 6E 00 00 00 00 00 4A 00 41 00 45 00 45 00 2E
      00 41 00 58 00 2E 00 45 00 64 00 69 00 74 00 6F 00 72 00 45 00 78 00 74 00 65 00 6E 00 73 00 69
      00 6F 00 6E 00 73 00 2E 00 48 00 69 00 67 00 68 00 6C 00 69 00 67 00 68 00 74 00 57 00 6F 00 72
      00 64 00 00 00 00 00 30 00 08 00 01 00 46 00 69 00 6C 00 65 00 56 00 65 00 72 00 73 00 69 00 6F
      00 6E 00 00 00 00 00 30 00 2E 00 31 00 2E 00 30 00 2E 00 30 00 00 00 78 00 2B 00 01 00 49 00 6E
      00 74 00 65 00 72 00 6E 00 61 00 6C 00 4E 00 61 00 6D 00 65 00 00 00 4A 00 41 00 45 00 45 00 2E
      00 41 00 58 00 2E 00 45 00 64 00 69 00 74 00 6F 00 72 00 45 00 78 00 74 00 65 00 6E 00 73 00 69
      00 6F 00 6E 00 73 00 2E 00 48 00 69 00 67 00 68 00 6C 00 69 00 67 00 68 00 74 00 57 00 6F 00 72
      00 64 00 2E 00 64 00 6C 00 6C 00 00 00 00 00 50 00 15 00 01 00 4C 00 65 00 67 00 61 00 6C 00 43
      00 6F 00 70 00 79 00 72 00 69 00 67 00 68 00 74 00 00 00 4A 00 6F 00 73 00 E9 00 20 00 41 00 6E
      00 74 00 6F 00 6E 00 69 00 6F 00 20 00 45 00 73 00 74 00 65 00 76 00 61 00 6E 00 00 00 00 00 80
      00 2B 00 01 00 4F 00 72 00 69 00 67 00 69 00 6E 00 61 00 6C 00 46 00 69 00 6C 00 65 00 6E 00 61
      00 6D 00 65 00 00 00 4A 00 41 00 45 00 45 00 2E 00 41 00 58 00 2E 00 45 00 64 00 69 00 74 00 6F
      00 72 00 45 00 78 00 74 00 65 00 6E 00 73 00 69 00 6F 00 6E 00 73 00 2E 00 48 00 69 00 67 00 68
      00 6C 00 69 00 67 00 68 00 74 00 57 00 6F 00 72 00 64 00 2E 00 64 00 6C 00 6C 00 00 00 00 00 58
      00 1B 00 01 00 50 00 72 00 6F 00 64 00 75 00 63 00 74 00 4E 00 61 00 6D 00 65 00 00 00 00 00 4A
      00 41 00 45 00 45 00 48 00 69 00 67 00 68 00 6C 00 69 00 67 00 68 00 74 00 57 00 6F 00 72 00 64
      00 45 00 78 00 74 00 65 00 6E 00 73 00 69 00 6F 00 6E 00 00 00 00 00 34 00 08 00 01 00 50 00 72
      00 6F 00 64 00 75 00 63 00 74 00 56 00 65 00 72 00 73 00 69 00 6F 00 6E 00 00 00 30 00 2E 00 31
      00 2E 00 30 00 2E 00 30 00 00 00 38 00 08 00 01 00 41 00 73 00 73 00 65 00 6D 00 62 00 6C 00 79
      00 20 00 56 00 65 00 72 00 73 00 69 00 6F 00 6E 00 00 00 30 00 2E 00 31 00 2E 00 30 00 2E 00 30
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 50 00 00 0C 00 00 00 30
      35 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FF FF FF
    ENDBINARY
  ENDRESOURCE
  

***Element: RES

; Microsoft Dynamics AX RESOURCE : JAEE_AX_EditorExtensions_BraceMatching_d unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  RESOURCE #JAEE_AX_EditorExtensions_BraceMatching_d
    PROPERTIES
      Name                #JAEE_AX_EditorExtensions_BraceMatching_d
      Filename            #JAEE.AX.EditorExtensions.BraceMatching.dll
      Label               #
      HelpText            #
      ConfigurationKey    #
      Origin              #{93CE721A-1129-4F3B-AAD6-3981C151164C}
    ENDPROPERTIES
    
    BINARY 13882
      07 FD 07 07 FD FC 03 53 00 79 00 73 00 52 00 65 00 73 00 6F 00 75 00 72 00 63 00 65 00 54 00 79
      00 70 00 65 00 00 00 FF 07 07 FD 30 08 36 00 00 07 FD 30 00 36 00 00 4D 5A 90 00 03 00 00 00 04
      00 00 00 FF FF 00 00 B8 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 00 00 00 0E 1F BA 0E 00 B4 09 CD 21
      B8 01 4C CD 21 54 68 69 73 20 70 72 6F 67 72 61 6D 20 63 61 6E 6E 6F 74 20 62 65 20 72 75 6E 20
      69 6E 20 44 4F 53 20 6D 6F 64 65 2E 0D 0D 0A 24 00 00 00 00 00 00 00 50 45 00 00 4C 01 03 00 0F
      F4 3C 51 00 00 00 00 00 00 00 00 E0 00 02 21 0B 01 08 00 00 2C 00 00 00 08 00 00 00 00 00 00 CE
      4B 00 00 00 20 00 00 00 60 00 00 00 00 40 00 00 20 00 00 00 02 00 00 04 00 00 00 00 00 00 00 04
      00 00 00 00 00 00 00 00 A0 00 00 00 02 00 00 00 00 00 00 03 00 40 85 00 00 10 00 00 10 00 00 00
      00 10 00 00 10 00 00 00 00 00 00 10 00 00 00 00 00 00 00 00 00 00 00 74 4B 00 00 57 00 00 00 00
      60 00 00 30 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 00 00 0C 00 00 00 BC
      4A 00 00 1C 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 08 00 00 00 00 00 00 00 00 00 00 00 08
      20 00 00 48 00 00 00 00 00 00 00 00 00 00 00 2E 74 65 78 74 00 00 00 D4 2B 00 00 00 20 00 00 00
      2C 00 00 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 60 2E 72 73 72 63 00 00 00 30
      04 00 00 00 60 00 00 00 06 00 00 00 2E 00 00 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 40 2E
      72 65 6C 6F 63 00 00 0C 00 00 00 00 80 00 00 00 02 00 00 00 34 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 40 00 00 42 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 B0 4B 00 00 00 00 00 00 48
      00 00 00 02 00 05 00 88 2A 00 00 34 20 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 13 30 01 00 0B 00 00 00 01 00 00 11 02 7B 03 00 00 04 0A 2B 00 06 2A 22 02
      03 7D 03 00 00 04 2A 13 30 01 00 0B 00 00 00 02 00 00 11 02 7B 04 00 00 04 0A 2B 00 06 2A 22 02
      03 7D 04 00 00 04 2A 13 30 01 00 0B 00 00 00 03 00 00 11 02 7B 05 00 00 04 0A 2B 00 06 2A 22 02
      03 7D 05 00 00 04 2A 13 30 03 00 30 00 00 00 04 00 00 11 02 7B 02 00 00 04 0A 06 0B 07 03 28 12
      00 00 0A 74 02 00 00 1B 0C 02 7C 02 00 00 04 08 07 28 01 00 00 2B 0A 06 07 FE 01 16 FE 01 0D 09
      2D D8 2A 13 30 03 00 30 00 00 00 04 00 00 11 02 7B 02 00 00 04 0A 06 0B 07 03 28 14 00 00 0A 74
      02 00 00 1B 0C 02 7C 02 00 00 04 08 07 28 01 00 00 2B 0A 06 07 FE 01 16 FE 01 0D 09 2D D8 2A 13
      30 04 00 9A 00 00 00 03 00 00 11 02 28 15 00 00 0A 00 00 02 73 16 00 00 0A 7D 01 00 00 04 02 7B
      01 00 00 04 1F 7B 1F 7D 6F 17 00 00 0A 00 02 7B 01 00 00 04 1F 5B 1F 5D 6F 17 00 00 0A 00 02 7B
      01 00 00 04 1F 28 1F 29 6F 17 00 00 0A 00 02 03 28 02 00 00 06 00 02 04 28 04 00 00 06 00 02 12
      00 FE 15 04 00 00 1B 06 28 06 00 00 06 00 02 28 01 00 00 06 6F 18 00 00 0A 02 FE 06 0B 00 00 06
      73 19 00 00 0A 6F 1A 00 00 0A 00 02 28 01 00 00 06 02 FE 06 0A 00 00 06 73 1B 00 00 0A 6F 1C 00
      00 0A 00 00 2A 00 00 13 30 02 00 2D 00 00 00 05 00 00 11 00 04 6F 1D 00 00 0A 04 6F 1E 00 00 0A
      FE 01 0A 06 2D 19 00 02 02 28 01 00 00 06 6F 18 00 00 0A 6F 1F 00 00 0A 28 0C 00 00 06 00 00 2A
      3E 00 02 04 6F 20 00 00 0A 28 0C 00 00 06 00 2A 00 00 00 13 30 06 00 73 00 00 00 06 00 00 11 00
      02 0F 01 28 21 00 00 0A 02 28 03 00 00 06 0F 01 28 22 00 00 0A 6F 23 00 00 0A 28 06 00 00 06 00
      02 28 05 00 00 06 0B 12 01 28 24 00 00 0A 0C 08 2D 02 2B 3D 02 7B 02 00 00 04 0A 06 14 FE 01 0C
      08 2D 2E 06 02 02 28 03 00 00 06 6F 25 00 00 0A 16 02 28 03 00 00 06 6F 25 00 00 0A 6F 26 00 00
      0A 73 27 00 00 0A 73 28 00 00 0A 6F 29 00 00 0A 00 2A 1E 02 28 15 00 00 0A 2A 00 13 30 02 00 1A
      00 00 00 07 00 00 11 0F 01 28 2A 00 00 0A 0B 12 01 02 7B 07 00 00 04 28 2B 00 00 0A 0A 2B 00 06
      2A 00 00 13 30 01 00 0C 00 00 00 08 00 00 11 0F 00 28 2C 00 00 0A 0A 2B 00 06 2A 13 30 02 00 56
      00 00 00 09 00 00 11 28 35 00 00 0A 6F 36 00 00 0A 02 7B 0A 00 00 04 33 0F 02 7B 09 00 00 04 1F
      FE FE 01 16 FE 01 2B 01 17 0C 08 2D 0B 02 16 7D 09 00 00 04 02 0A 2B 13 16 73 1C 00 00 06 0A 06
      02 7B 0B 00 00 04 7D 0B 00 00 04 06 02 7B 0D 00 00 04 7D 0C 00 00 04 06 0B 2B 00 07 2A 00 00 13
      30 01 00 0B 00 00 00 0A 00 00 11 02 28 15 00 00 06 0A 2B 00 06 2A 00 13 30 06 00 AE 03 00 00 0B
      00 00 11 02 7B 09 00 00 04 0B 07 45 05 00 00 00 16 00 00 00 02 00 00 00 07 00 00 00 0C 00 00 00
      11 00 00 00 2B 16 38 13 02 00 00 38 3E 02 00 00 38 3F 03 00 00 38 67 03 00 00 2B 05 38 6A 03 00
      00 02 15 7D 09 00 00 04 02 14 7D 14 00 00 04 02 73 13 00 00 06 7D 15 00 00 04 00 02 7B 0C 00 00
      04 6F 37 00 00 0A 16 FE 01 16 FE 01 0C 08 2D 05 38 36 03 00 00 02 7B 0B 00 00 04 6F 05 00 00 06
      0D 12 03 28 24 00 00 0A 2C 41 02 7B 0B 00 00 04 6F 05 00 00 06 0D 12 03 28 38 00 00 0A 13 04 12
      04 28 39 00 00 0A 02 7B 0B 00 00 04 6F 05 00 00 06 0D 12 03 28 38 00 00 0A 13 04 12 04 28 3A 00
      00 0A 6F 26 00 00 0A FE 04 2B 01 16 0C 08 2D 05 38 D6 02 00 00 02 02 7B 0B 00 00 04 6F 05 00 00
      06 0D 12 03 28 38 00 00 0A 7D 0E 00 00 04 02 7B 0C 00 00 04 16 6F 3B 00 00 0A 13 05 12 05 28 3C
      00 00 0A 02 7C 0E 00 00 04 28 3A 00 00 0A FE 01 0C 08 2D 29 00 02 02 7C 0E 00 00 04 02 7B 0C 00
      00 04 16 6F 3B 00 00 0A 13 05 12 05 28 3C 00 00 0A 16 28 3D 00 00 0A 7D 0E 00 00 04 00 02 02 7C
      0E 00 00 04 28 3E 00 00 0A 7D 0F 00 00 04 02 02 7B 0E 00 00 04 28 3F 00 00 0A 2C 0E 02 7B 0E 00
      00 04 17 28 40 00 00 0A 2B 06 02 7B 0E 00 00 04 7D 10 00 00 04 02 7B 15 00 00 04 02 7C 10 00 00
      04 28 3E 00 00 0A 7D 07 00 00 04 02 7C 11 00 00 04 FE 15 12 00 00 01 02 7B 0B 00 00 04 7B 01 00
      00 04 02 7B 0F 00 00 04 6F 41 00 00 0A 16 FE 01 0C 08 3A C5 00 00 00 00 02 7B 0B 00 00 04 7B 01
      00 00 04 02 7B 0F 00 00 04 02 7C 12 00 00 04 6F 42 00 00 0A 26 02 7B 0E 00 00 04 02 7B 0F 00 00
      04 02 7B 12 00 00 04 02 7B 0B 00 00 04 6F 01 00 00 06 6F 43 00 00 0A 6F 44 00 00 0A 02 7C 11 00
      00 04 28 0E 00 00 06 16 FE 01 0C 08 2D 68 00 02 02 7B 0E 00 00 04 17 73 45 00 00 0A 72 01 00 00
      70 73 46 00 00 0A 73 47 00 00 0A 7D 08 00 00 04 02 17 7D 09 00 00 04 17 0A 38 71 01 00 00 02 15
      7D 09 00 00 04 02 02 7B 11 00 00 04 72 01 00 00 70 73 46 00 00 0A 73 47 00 00 0A 7D 08 00 00 04
      02 18 7D 09 00 00 04 17 0A 38 41 01 00 00 02 15 7D 09 00 00 04 00 00 38 2E 01 00 00 02 7B 0B 00
      00 04 7B 01 00 00 04 02 7B 15 00 00 04 7B 07 00 00 04 6F 48 00 00 0A 16 FE 01 0C 08 3A 09 01 00
      00 00 02 02 7B 0B 00 00 04 7B 01 00 00 04 02 7B 14 00 00 04 2D 19 02 02 7B 15 00 00 04 FE 06 14
      00 00 06 73 49 00 00 0A 7D 14 00 00 04 2B 00 02 7B 14 00 00 04 28 02 00 00 2B 7E 06 00 00 04 2D
      13 14 FE 06 10 00 00 06 73 4B 00 00 0A 80 06 00 00 04 2B 00 7E 06 00 00 04 28 03 00 00 2B 7D 13
      00 00 04 02 7B 10 00 00 04 02 7B 13 00 00 04 16 28 04 00 00 2B 02 7B 15 00 00 04 7B 07 00 00 04
      02 7B 0B 00 00 04 6F 01 00 00 06 6F 43 00 00 0A 6F 44 00 00 0A 02 7C 11 00 00 04 28 0F 00 00 06
      16 FE 01 0C 08 2D 62 00 02 02 7B 10 00 00 04 17 73 45 00 00 0A 72 01 00 00 70 73 46 00 00 0A 73
      47 00 00 0A 7D 08 00 00 04 02 19 7D 09 00 00 04 17 0A 2B 3B 02 15 7D 09 00 00 04 02 02 7B 11 00
      00 04 72 01 00 00 70 73 46 00 00 0A 73 47 00 00 0A 7D 08 00 00 04 02 1A 7D 09 00 00 04 17 0A 2B
      0E 02 15 7D 09 00 00 04 00 00 00 16 0A 2B 00 06 2A 00 00 13 30 01 00 0B 00 00 00 0C 00 00 11 02
      7B 08 00 00 04 0A 2B 00 06 2A 1A 73 4E 00 00 0A 7A 0A 00 2A 00 00 00 13 30 01 00 0B 00 00 00 0D
      00 00 11 02 7B 08 00 00 04 0A 2B 00 06 2A 7A 02 28 15 00 00 0A 02 03 7D 09 00 00 04 02 28 35 00
      00 0A 6F 36 00 00 0A 7D 0A 00 00 04 2A 00 00 13 30 02 00 1C 00 00 00 0E 00 00 11 1F FE 73 1C 00
      00 06 0A 06 02 7D 0B 00 00 04 06 03 7D 0D 00 00 04 06 0B 2B 00 07 2A 13 30 05 00 41 01 00 00 0F
      00 00 11 00 0E 04 0F 00 28 3A 00 00 0A 17 17 73 27 00 00 0A 81 12 00 00 01 0F 00 28 4F 00 00 0A
      0A 06 6F 50 00 00 0A 0B 06 6F 51 00 00 0A 0C 0F 00 28 39 00 00 0A 06 6F 52 00 00 0A 13 08 12 08
      28 39 00 00 0A 59 17 58 0D 0F 00 28 3A 00 00 0A 6F 53 00 00 0A 17 59 13 04 05 16 FE 02 16 FE 01
      13 09 11 09 2D 0C 11 04 08 05 58 28 54 00 00 0A 13 04 16 13 05 38 BA 00 00 00 00 2B 7A 00 07 09
      6F 55 00 00 0A 13 06 11 06 04 FE 01 16 FE 01 13 09 11 09 2D 47 00 11 05 16 FE 02 16 FE 01 13 09
      11 09 2D 0A 00 11 05 17 59 13 05 00 2B 2B 00 0E 04 0F 00 28 3A 00 00 0A 06 6F 52 00 00 0A 09 28
      56 00 00 0A 28 3F 00 00 0A 17 73 27 00 00 0A 81 12 00 00 01 17 13 07 2B 68 00 2B 16 11 06 03 FE
      01 16 FE 01 13 09 11 09 2D 08 00 11 05 17 58 13 05 00 09 17 58 0D 00 09 06 6F 57 00 00 0A FE 04
      13 09 11 09 3A 74 FF FF FF 08 17 58 25 0C 11 04 FE 02 16 FE 01 13 09 11 09 2D 02 2B 1F 06 6F 58
      00 00 0A 08 6F 59 00 00 0A 0A 06 6F 50 00 00 0A 0B 16 0D 00 17 13 09 38 3E FF FF FF 16 13 07 2B
      00 11 07 2A 00 00 00 13 30 04 00 41 01 00 00 10 00 00 11 00 0E 04 02 02 73 5A 00 00 0A 81 12 00
      00 01 0F 00 28 4F 00 00 0A 0A 06 6F 51 00 00 0A 0B 02 06 6F 52 00 00 0A 28 5B 00 00 0A 17 59 0C
      08 16 FE 04 16 FE 01 13 08 11 08 2D 1C 00 06 6F 58 00 00 0A 07 17 59 25 0B 6F 59 00 00 0A 0A 06
      6F 57 00 00 0A 17 59 0C 00 06 6F 50 00 00 0A 0D 16 13 04 05 16 FE 02 16 FE 01 13 08 11 08 2D 0C
      11 04 07 05 59 28 5C 00 00 0A 13 04 16 13 05 38 B0 00 00 00 00 2B 6E 00 09 08 6F 55 00 00 0A 13
      06 11 06 03 FE 01 16 FE 01 13 08 11 08 2D 3B 00 11 05 16 FE 02 16 FE 01 13 08 11 08 2D 0A 00 11
      05 17 59 13 05 00 2B 1F 00 0E 04 06 6F 52 00 00 0A 08 28 56 00 00 0A 17 73 45 00 00 0A 81 12 00
      00 01 17 13 07 2B 6A 00 2B 16 11 06 04 FE 01 16 FE 01 13 08 11 08 2D 08 00 11 05 17 58 13 05 00
      08 17 59 0C 00 08 16 FE 04 16 FE 01 13 08 11 08 2D 85 07 17 59 25 0B 11 04 FE 04 16 FE 01 13 08
      11 08 2D 02 2B 26 06 6F 58 00 00 0A 07 6F 59 00 00 0A 0A 06 6F 50 00 00 0A 0D 06 6F 57 00 00 0A
      17 59 0C 00 17 13 08 38 48 FF FF FF 16 13 07 2B 00 11 07 2A 00 00 00 13 30 03 00 32 00 00 00 11
      00 00 11 00 03 14 FE 01 16 FE 01 0B 07 2D 04 14 0A 2B 20 03 6F 60 00 00 0A 04 FE 01 0B 07 2D 04
      14 0A 2B 0F 03 04 73 09 00 00 06 75 0E 00 00 1B 0A 2B 00 06 2A 1E 02 28 15 00 00 0A 2A 00 00 42
      53 4A 42 01 00 01 00 00 00 00 00 0C 00 00 00 76 34 2E 30 2E 33 30 33 31 39 00 00 00 00 05 00 6C
      00 00 00 C8 09 00 00 23 7E 00 00 34 0A 00 00 70 0F 00 00 23 53 74 72 69 6E 67 73 00 00 00 00 A4
      19 00 00 0C 00 00 00 23 55 53 00 B0 19 00 00 10 00 00 00 23 47 55 49 44 00 00 00 C0 19 00 00 74
      06 00 00 23 42 6C 6F 62 00 00 00 00 00 00 00 02 00 00 01 57 17 B6 0B 09 1E 00 00 00 FA 25 33 00
      16 00 00 01 00 00 00 42 00 00 00 05 00 00 00 15 00 00 00 1C 00 00 00 1C 00 00 00 07 00 00 00 60
      00 00 00 23 00 00 00 11 00 00 00 01 00 00 00 01 00 00 00 02 00 00 00 05 00 00 00 0A 00 00 00 07
      00 00 00 0E 00 00 00 01 00 00 00 07 00 00 00 02 00 00 00 01 00 00 00 04 00 00 00 01 00 00 00 00
      00 0A 00 01 00 00 00 00 00 06 00 8E 00 87 00 0A 00 DB 00 B7 00 0E 00 04 01 B7 00 0E 00 12 01 B7
      00 0E 00 49 01 26 01 12 00 A2 01 86 01 06 00 D0 01 87 00 12 00 DB 01 86 01 06 00 24 02 09 02 06
      00 3D 02 87 00 12 00 4C 02 86 01 0E 00 97 02 26 01 0E 00 C8 02 26 01 0E 00 FB 02 26 01 06 00 1F
      03 09 02 0A 00 2D 03 B7 00 12 00 38 03 86 01 12 00 61 03 86 01 0A 00 15 04 B7 00 06 00 98 04 79
      04 06 00 C7 04 B5 04 06 00 DE 04 B5 04 06 00 FB 04 B5 04 06 00 1A 05 B5 04 06 00 33 05 B5 04 06
      00 4C 05 B5 04 06 00 67 05 B5 04 06 00 82 05 B5 04 06 00 9B 05 79 04 06 00 AF 05 B5 04 06 00 C8
      05 B5 04 06 00 FF 05 E5 05 06 00 2B 06 18 06 87 00 3F 06 00 00 06 00 6E 06 4E 06 06 00 8E 06 4E
      06 06 00 D3 06 4E 06 06 00 EE 06 87 00 06 00 10 07 FF 06 0E 00 37 07 26 01 12 00 72 07 86 01 12
      00 BD 07 86 01 12 00 D5 07 86 01 06 00 4B 08 09 02 06 00 78 08 87 00 06 00 B0 08 87 00 06 00 E5
      08 D2 08 06 00 F1 08 09 02 06 00 FF 08 D2 08 06 00 0B 09 87 00 06 00 97 0C 18 06 06 00 AF 0C FF
      06 12 00 FC 0C 86 01 0E 00 55 0D 26 01 06 00 7F 0D 09 02 0E 00 B4 0D 8D 0D 0A 00 C2 0D B7 00 16
      00 F2 0D E6 0D 06 00 14 0E 87 00 12 00 2A 0E 86 01 06 00 7D 0E 87 00 06 00 86 0E 87 00 1A 00 DF
      0E BD 0E 06 00 EF 0E 87 00 1E 00 38 0F 17 0F 0A 00 4D 0F B7 00 00 00 00 00 01 00 00 00 00 00 01
      00 01 00 00 00 10 00 35 00 49 00 05 00 01 00 01 00 00 00 10 00 62 00 49 00 05 00 07 00 11 00 03
      01 10 00 2F 08 00 00 05 00 07 00 13 00 03 01 10 00 C4 08 00 00 05 00 08 00 15 00 01 00 31 02 43
      00 01 00 62 02 4B 00 01 00 99 03 94 00 01 00 AF 03 98 00 01 00 CD 03 9C 00 11 00 7F 08 EA 01 06
      00 42 08 D1 01 01 00 F1 09 4E 02 01 00 EC 0A 5F 02 01 00 F7 0A 5F 02 06 00 37 0B 66 02 06 00 4B
      04 6A 02 06 00 41 0B 6A 02 06 00 4C 0B 6E 02 06 00 5E 0B D1 01 06 00 70 0B 6E 02 06 00 7F 0B 72
      02 06 00 8E 0B D1 01 06 00 9E 0B 76 02 06 00 A9 0B 7D 02 06 00 D0 0B 8C 02 50 20 00 00 00 00 81
      08 53 01 1A 00 01 00 67 20 00 00 00 00 81 08 5C 01 1F 00 01 00 70 20 00 00 00 00 81 08 AE 01 25
      00 02 00 87 20 00 00 00 00 81 08 BF 01 2A 00 02 00 90 20 00 00 00 00 81 08 E9 01 30 00 03 00 A7
      20 00 00 00 00 81 08 F9 01 39 00 03 00 B0 20 00 00 00 00 E6 09 6E 02 53 00 04 00 EC 20 00 00 00
      00 E6 09 7E 02 53 00 05 00 28 21 00 00 00 00 83 18 91 02 5D 00 06 00 D0 21 00 00 00 00 81 00 B6
      02 65 00 08 00 09 22 00 00 00 00 81 00 E6 02 6C 00 0A 00 1C 22 00 00 00 00 81 00 09 03 73 00 0C
      00 78 27 00 00 00 00 E6 01 59 03 79 00 0D 00 A0 27 00 00 00 00 91 00 6E 03 88 00 0E 00 F0 28 00
      00 00 00 91 00 84 03 88 00 13 00 CC 22 00 00 00 00 91 00 6A 08 DF 01 18 00 40 2A 00 00 00 00 E6
      01 08 04 BE 00 19 00 7E 2A 00 00 00 00 86 18 91 02 CC 00 1B 00 9B 22 00 00 00 00 86 18 91 02 CC
      00 1B 00 A4 22 00 00 00 00 86 00 5A 08 D4 01 1B 00 E4 22 00 00 00 00 E1 01 17 09 30 02 1C 00 48
      23 00 00 00 00 E1 01 BB 09 48 02 1C 00 60 23 00 00 00 00 E1 01 E8 09 A3 01 1C 00 1C 27 00 00 00
      00 E1 09 FE 09 56 02 1C 00 33 27 00 00 00 00 E1 01 9E 0A CC 00 1C 00 3A 27 00 00 00 00 E1 01 C9
      0A CC 00 1C 00 40 27 00 00 00 00 E1 09 0C 0B 62 02 1C 00 57 27 00 00 00 00 86 18 91 02 E1 00 1C
      00 00 00 01 00 1C 04 00 00 01 00 1C 04 00 00 01 00 1C 04 00 00 01 00 1C 04 00 00 01 00 1C 04 00
      00 01 00 22 04 00 00 02 00 27 04 00 00 01 00 34 04 00 00 02 00 3B 04 00 00 01 00 34 04 00 00 02
      00 3B 04 00 00 01 00 3D 04 00 00 01 00 4B 04 00 00 01 00 51 04 00 00 02 00 5C 04 00 00 03 00 61
      04 00 00 04 00 67 04 02 00 05 00 70 04 00 00 01 00 51 04 00 00 02 00 5C 04 00 00 03 00 61 04 00
      00 04 00 67 04 02 00 05 00 70 04 00 00 01 00 68 08 00 00 01 00 A5 04 00 00 02 00 AE 04 00 00 01
      00 68 08 00 00 01 00 EC 0A 02 00 06 00 03 00 11 00 05 00 22 00 05 00 BD 00 05 00 26 00 05 00 C5
      00 05 00 C9 00 A1 00 91 02 CC 00 A9 00 91 02 D0 00 B1 00 91 02 D0 00 B9 00 91 02 D0 00 C1 00 91
      02 D0 00 C9 00 91 02 D0 00 D1 00 91 02 D0 00 D9 00 91 02 D0 00 E1 00 91 02 D0 00 E9 00 91 02 D5
      00 F1 00 91 02 D0 00 F9 00 91 02 D0 00 01 01 91 02 D0 00 09 01 91 02 DA 00 19 01 91 02 E1 00 21
      01 91 02 CC 00 29 01 91 02 CC 00 31 01 F7 06 FE 00 39 01 1C 07 0A 01 31 01 2C 07 FE 00 09 00 91
      02 CC 00 1C 00 91 02 CC 00 1C 00 33 07 3D 01 29 00 42 07 4C 01 2C 00 91 02 59 01 41 01 4C 07 5F
      01 34 00 91 02 59 01 29 00 60 07 70 01 61 00 80 07 7A 01 61 00 90 07 7A 01 41 01 A0 07 80 01 69
      00 AD 07 80 01 71 00 CB 07 89 01 71 00 E6 07 8F 01 51 01 F3 07 95 01 24 00 FC 07 A3 01 31 00 09
      08 7A 01 49 01 1D 08 A7 01 91 00 91 02 AB 01 59 00 91 02 B4 01 14 00 28 08 BA 01 3C 00 A6 08 01
      02 71 01 B5 08 06 02 3C 00 BC 08 10 02 44 00 AD 09 3E 02 79 01 AD 09 48 02 89 01 E8 09 A3 01 4C
      00 92 0A 10 02 89 01 C3 0A CC 00 91 01 E4 0A CC 00 89 01 92 0A 62 02 99 01 91 02 CC 00 A1 01 B6
      0C 9D 02 A1 01 C8 0C A7 01 89 00 DC 0C A7 01 24 00 A6 08 10 02 41 00 A0 07 A7 01 41 00 E6 0C 7A
      01 89 00 F3 0C BA 02 91 00 E6 0C 7A 01 41 00 0E 0D C0 02 41 00 1A 0D CB 02 41 00 22 0D CF 02 41
      00 2E 0D D5 02 1C 00 3D 0D DD 02 1C 00 49 0D E3 02 29 00 6D 0D EC 02 54 00 DC 0C A7 01 91 00 91
      02 FB 02 19 00 91 02 D0 00 5C 00 91 02 0A 03 1C 00 CC 0D 12 03 64 00 91 02 59 01 D1 01 FD 0D 26
      03 6C 00 91 02 59 01 D1 01 03 0E 56 03 D1 01 0A 0E 7A 03 D9 01 91 02 CC 00 41 00 3C 0E B7 03 E1
      01 4E 0E BD 03 E1 01 56 0E A7 01 E1 01 65 0E C1 03 49 01 6F 0E A7 01 E9 01 82 0E C6 03 F1 01 8D
      0E CC 03 41 00 97 0E D5 02 E1 01 1D 08 A7 01 E1 01 E6 0C 7A 01 49 01 A3 0E D1 03 91 00 91 02 E8
      03 41 00 2E 0D F0 03 E9 01 B9 0E C6 03 F9 01 91 02 06 04 09 02 91 02 D0 00 11 02 91 02 06 04 29
      00 5E 0F 25 00 20 00 8B 00 E6 00 2E 00 83 00 53 06 2E 00 1B 00 94 05 2E 00 23 00 94 05 2E 00 73
      00 41 06 2E 00 33 00 B1 05 2E 00 6B 00 F9 05 2E 00 7B 00 4A 06 2E 00 2B 00 9A 05 2E 00 13 00 68
      05 2E 00 3B 00 D1 05 2E 00 43 00 94 05 2E 00 53 00 94 05 2E 00 63 00 EC 05 40 00 8B 00 E6 00 60
      00 8B 00 E6 00 61 00 8B 00 E6 00 63 00 FB 02 BA 04 63 00 EB 02 0D 04 63 00 F3 02 B0 04 80 00 8B
      00 E6 00 81 00 8B 00 E6 00 83 00 8B 00 E6 00 A0 00 8B 00 E6 00 A1 00 8B 00 E6 00 A3 00 8B 00 E6
      00 C0 00 8B 00 E6 00 C1 00 8B 00 E6 00 00 02 8B 00 E6 00 A0 02 A3 01 E6 00 C0 02 A3 01 E6 00 00
      03 A3 01 E6 00 20 03 A3 01 E6 00 60 03 A3 01 E6 00 80 03 A3 01 E6 00 EB 00 F0 00 F5 00 20 01 85
      01 C1 01 0B 02 15 02 A3 02 B4 02 8B 03 9B 03 A4 03 A8 03 D8 03 F8 03 5E 05 02 00 01 00 00 00 62
      02 0A 00 02 00 01 00 05 00 04 00 00 00 EA 03 A4 00 00 00 EF 03 A9 00 00 00 FC 03 AE 00 00 00 E0
      0B 90 02 00 00 70 0C 99 02 10 00 08 00 02 00 08 00 07 00 02 00 01 00 02 00 03 00 02 00 01 00 03
      00 02 00 03 00 05 00 01 00 04 00 05 00 02 00 05 00 07 00 01 00 06 00 07 00 02 00 18 00 09 00 02
      00 1B 00 0B 00 05 00 2A 00 5B 00 05 00 2C 00 5D 00 05 00 2E 00 5F 00 05 00 30 00 61 00 05 00 32
      00 63 00 05 00 34 00 65 00 05 00 36 00 67 00 13 00 B7 00 36 01 45 01 52 01 69 01 F9 01 19 02 24
      02 F2 02 02 03 18 03 48 03 57 05 04 80 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 AC 06 00
      00 04 00 00 00 00 00 00 00 00 00 00 00 01 00 7E 00 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00
      00 0A 00 95 00 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 0A 00 E5 00 00 00 00 00 0A 00 00
      00 00 00 00 00 00 00 00 00 0A 00 65 01 00 00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 01 00 DA
      0D 00 00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 01 00 BD 0E 00 00 00 00 0A 00 00 00 00 00 00
      00 00 00 00 00 0A 00 F4 0E 00 00 00 00 04 00 02 00 05 00 02 00 00 00 00 00 23 00 1A 04 27 00 17
      01 95 00 3E 03 99 00 6F 03 9B 00 87 03 01 00 4D 00 00 00 00 3C 4D 6F 64 75 6C 65 3E 00 4A 41 45
      45 2E 41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73 69 6F 6E 73 2E 42 72 61 63 65 4D 61 74 63 68
      69 6E 67 2E 64 6C 6C 00 42 72 61 63 65 4D 61 74 63 68 69 6E 67 54 61 67 67 65 72 00 4A 41 45 45
      2E 41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73 69 6F 6E 73 00 42 72 61 63 65 4D 61 74 63 68 69
      6E 67 54 61 67 67 65 72 50 72 6F 76 69 64 65 72 00 6D 73 63 6F 72 6C 69 62 00 53 79 73 74 65 6D
      00 4F 62 6A 65 63 74 00 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54
      65 78 74 2E 4C 6F 67 69 63 00 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F
      2E 54 65 78 74 2E 54 61 67 67 69 6E 67 00 49 54 61 67 67 65 72 60 31 00 4D 69 63 72 6F 73 6F 66
      74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 55 49 00 54 65 78 74 4D 61 72 6B 65
      72 54 61 67 00 49 56 69 65 77 54 61 67 67 65 72 50 72 6F 76 69 64 65 72 00 4D 69 63 72 6F 73 6F
      66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 45 64 69 74 6F 72 00 49 54 65 78
      74 56 69 65 77 00 67 65 74 5F 56 69 65 77 00 73 65 74 5F 56 69 65 77 00 4D 69 63 72 6F 73 6F 66
      74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 44 61 74 61 00 4D 69 63 72 6F 73 6F
      66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 00 49 54 65 78 74 42 75 66 66 65 72
      00 67 65 74 5F 53 6F 75 72 63 65 42 75 66 66 65 72 00 73 65 74 5F 53 6F 75 72 63 65 42 75 66 66
      65 72 00 4E 75 6C 6C 61 62 6C 65 60 31 00 53 6E 61 70 73 68 6F 74 50 6F 69 6E 74 00 67 65 74 5F
      43 75 72 72 65 6E 74 43 68 61 72 00 73 65 74 5F 43 75 72 72 65 6E 74 43 68 61 72 00 53 79 73 74
      65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 2E 47 65 6E 65 72 69 63 00 44 69 63 74 69 6F 6E 61 72
      79 60 32 00 6D 5F 62 72 61 63 65 4C 69 73 74 00 45 76 65 6E 74 48 61 6E 64 6C 65 72 60 31 00 53
      6E 61 70 73 68 6F 74 53 70 61 6E 45 76 65 6E 74 41 72 67 73 00 54 61 67 73 43 68 61 6E 67 65 64
      00 61 64 64 5F 54 61 67 73 43 68 61 6E 67 65 64 00 72 65 6D 6F 76 65 5F 54 61 67 73 43 68 61 6E
      67 65 64 00 2E 63 74 6F 72 00 54 65 78 74 56 69 65 77 4C 61 79 6F 75 74 43 68 61 6E 67 65 64 45
      76 65 6E 74 41 72 67 73 00 56 69 65 77 4C 61 79 6F 75 74 43 68 61 6E 67 65 64 00 43 61 72 65 74
      50 6F 73 69 74 69 6F 6E 43 68 61 6E 67 65 64 45 76 65 6E 74 41 72 67 73 00 43 61 72 65 74 50 6F
      73 69 74 69 6F 6E 43 68 61 6E 67 65 64 00 43 61 72 65 74 50 6F 73 69 74 69 6F 6E 00 55 70 64 61
      74 65 41 74 43 61 72 65 74 50 6F 73 69 74 69 6F 6E 00 49 45 6E 75 6D 65 72 61 62 6C 65 60 31 00
      49 54 61 67 53 70 61 6E 60 31 00 4E 6F 72 6D 61 6C 69 7A 65 64 53 6E 61 70 73 68 6F 74 53 70 61
      6E 43 6F 6C 6C 65 63 74 69 6F 6E 00 47 65 74 54 61 67 73 00 53 6E 61 70 73 68 6F 74 53 70 61 6E
      00 46 69 6E 64 4D 61 74 63 68 69 6E 67 43 6C 6F 73 65 43 68 61 72 00 46 69 6E 64 4D 61 74 63 68
      69 6E 67 4F 70 65 6E 43 68 61 72 00 3C 56 69 65 77 3E 6B 5F 5F 42 61 63 6B 69 6E 67 46 69 65 6C
      64 00 3C 53 6F 75 72 63 65 42 75 66 66 65 72 3E 6B 5F 5F 42 61 63 6B 69 6E 67 46 69 65 6C 64 00
      3C 43 75 72 72 65 6E 74 43 68 61 72 3E 6B 5F 5F 42 61 63 6B 69 6E 67 46 69 65 6C 64 00 56 69 65
      77 00 53 6F 75 72 63 65 42 75 66 66 65 72 00 43 75 72 72 65 6E 74 43 68 61 72 00 43 72 65 61 74
      65 54 61 67 67 65 72 00 49 54 61 67 00 54 00 76 61 6C 75 65 00 76 69 65 77 00 73 6F 75 72 63 65
      42 75 66 66 65 72 00 73 65 6E 64 65 72 00 65 00 63 61 72 65 74 50 6F 73 69 74 69 6F 6E 00 73 70
      61 6E 73 00 73 74 61 72 74 50 6F 69 6E 74 00 6F 70 65 6E 00 63 6C 6F 73 65 00 6D 61 78 4C 69 6E
      65 73 00 70 61 69 72 53 70 61 6E 00 53 79 73 74 65 6D 2E 52 75 6E 74 69 6D 65 2E 49 6E 74 65 72
      6F 70 53 65 72 76 69 63 65 73 00 4F 75 74 41 74 74 72 69 62 75 74 65 00 74 65 78 74 56 69 65 77
      00 62 75 66 66 65 72 00 53 79 73 74 65 6D 2E 52 65 66 6C 65 63 74 69 6F 6E 00 41 73 73 65 6D 62
      6C 79 54 69 74 6C 65 41 74 74 72 69 62 75 74 65 00 41 73 73 65 6D 62 6C 79 44 65 73 63 72 69 70
      74 69 6F 6E 41 74 74 72 69 62 75 74 65 00 41 73 73 65 6D 62 6C 79 43 6F 6E 66 69 67 75 72 61 74
      69 6F 6E 41 74 74 72 69 62 75 74 65 00 41 73 73 65 6D 62 6C 79 43 6F 6D 70 61 6E 79 41 74 74 72
      69 62 75 74 65 00 41 73 73 65 6D 62 6C 79 50 72 6F 64 75 63 74 41 74 74 72 69 62 75 74 65 00 41
      73 73 65 6D 62 6C 79 43 6F 70 79 72 69 67 68 74 41 74 74 72 69 62 75 74 65 00 41 73 73 65 6D 62
      6C 79 54 72 61 64 65 6D 61 72 6B 41 74 74 72 69 62 75 74 65 00 41 73 73 65 6D 62 6C 79 43 75 6C
      74 75 72 65 41 74 74 72 69 62 75 74 65 00 43 6F 6D 56 69 73 69 62 6C 65 41 74 74 72 69 62 75 74
      65 00 41 73 73 65 6D 62 6C 79 56 65 72 73 69 6F 6E 41 74 74 72 69 62 75 74 65 00 41 73 73 65 6D
      62 6C 79 46 69 6C 65 56 65 72 73 69 6F 6E 41 74 74 72 69 62 75 74 65 00 53 79 73 74 65 6D 2E 52
      75 6E 74 69 6D 65 2E 56 65 72 73 69 6F 6E 69 6E 67 00 54 61 72 67 65 74 46 72 61 6D 65 77 6F 72
      6B 41 74 74 72 69 62 75 74 65 00 53 79 73 74 65 6D 2E 44 69 61 67 6E 6F 73 74 69 63 73 00 44 65
      62 75 67 67 61 62 6C 65 41 74 74 72 69 62 75 74 65 00 44 65 62 75 67 67 69 6E 67 4D 6F 64 65 73
      00 53 79 73 74 65 6D 2E 52 75 6E 74 69 6D 65 2E 43 6F 6D 70 69 6C 65 72 53 65 72 76 69 63 65 73
      00 43 6F 6D 70 69 6C 61 74 69 6F 6E 52 65 6C 61 78 61 74 69 6F 6E 73 41 74 74 72 69 62 75 74 65
      00 52 75 6E 74 69 6D 65 43 6F 6D 70 61 74 69 62 69 6C 69 74 79 41 74 74 72 69 62 75 74 65 00 4A
      41 45 45 2E 41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73 69 6F 6E 73 2E 42 72 61 63 65 4D 61 74
      63 68 69 6E 67 00 43 6F 6D 70 69 6C 65 72 47 65 6E 65 72 61 74 65 64 41 74 74 72 69 62 75 74 65
      00 44 65 6C 65 67 61 74 65 00 43 6F 6D 62 69 6E 65 00 53 79 73 74 65 6D 2E 54 68 72 65 61 64 69
      6E 67 00 49 6E 74 65 72 6C 6F 63 6B 65 64 00 43 6F 6D 70 61 72 65 45 78 63 68 61 6E 67 65 00 52
      65 6D 6F 76 65 00 41 64 64 00 49 54 65 78 74 43 61 72 65 74 00 67 65 74 5F 43 61 72 65 74 00 61
      64 64 5F 50 6F 73 69 74 69 6F 6E 43 68 61 6E 67 65 64 00 61 64 64 5F 4C 61 79 6F 75 74 43 68 61
      6E 67 65 64 00 49 54 65 78 74 53 6E 61 70 73 68 6F 74 00 67 65 74 5F 4E 65 77 53 6E 61 70 73 68
      6F 74 00 67 65 74 5F 4F 6C 64 53 6E 61 70 73 68 6F 74 00 67 65 74 5F 50 6F 73 69 74 69 6F 6E 00
      67 65 74 5F 4E 65 77 50 6F 73 69 74 69 6F 6E 00 49 4D 61 70 70 69 6E 67 50 6F 69 6E 74 00 67 65
      74 5F 50 6F 69 6E 74 00 50 6F 73 69 74 69 6F 6E 41 66 66 69 6E 69 74 79 00 67 65 74 5F 41 66 66
      69 6E 69 74 79 00 47 65 74 50 6F 69 6E 74 00 67 65 74 5F 48 61 73 56 61 6C 75 65 00 67 65 74 5F
      43 75 72 72 65 6E 74 53 6E 61 70 73 68 6F 74 00 67 65 74 5F 4C 65 6E 67 74 68 00 49 6E 76 6F 6B
      65 00 3C 3E 63 5F 5F 44 69 73 70 6C 61 79 43 6C 61 73 73 34 00 6C 61 73 74 54 65 78 74 00 4B 65
      79 56 61 6C 75 65 50 61 69 72 60 32 00 3C 47 65 74 54 61 67 73 3E 62 5F 5F 30 00 6E 00 3C 47 65
      74 54 61 67 73 3E 62 5F 5F 31 00 46 75 6E 63 60 32 00 43 53 24 3C 3E 39 5F 5F 43 61 63 68 65 64
      41 6E 6F 6E 79 6D 6F 75 73 4D 65 74 68 6F 64 44 65 6C 65 67 61 74 65 33 00 67 65 74 5F 56 61 6C
      75 65 00 43 68 61 72 00 45 71 75 61 6C 73 00 67 65 74 5F 4B 65 79 00 3C 47 65 74 54 61 67 73 3E
      64 5F 5F 36 00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 00 49 45 6E 75 6D 65 72 61
      62 6C 65 00 49 45 6E 75 6D 65 72 61 74 6F 72 60 31 00 49 45 6E 75 6D 65 72 61 74 6F 72 00 49 44
      69 73 70 6F 73 61 62 6C 65 00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 2E 47 65 6E
      65 72 69 63 2E 49 45 6E 75 6D 65 72 61 62 6C 65 3C 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61
      6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 54 61 67 67 69 6E 67 2E 49 54 61 67 53 70 61 6E 3C 4D 69
      63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 54 61 67 67 69 6E
      67 2E 54 65 78 74 4D 61 72 6B 65 72 54 61 67 3E 3E 2E 47 65 74 45 6E 75 6D 65 72 61 74 6F 72 00
      47 65 74 45 6E 75 6D 65 72 61 74 6F 72 00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73
      2E 49 45 6E 75 6D 65 72 61 62 6C 65 2E 47 65 74 45 6E 75 6D 65 72 61 74 6F 72 00 4D 6F 76 65 4E
      65 78 74 00 3C 3E 32 5F 5F 63 75 72 72 65 6E 74 00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69
      6F 6E 73 2E 47 65 6E 65 72 69 63 2E 49 45 6E 75 6D 65 72 61 74 6F 72 3C 4D 69 63 72 6F 73 6F 66
      74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 54 61 67 67 69 6E 67 2E 49 54 61 67
      53 70 61 6E 3C 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74
      2E 54 61 67 67 69 6E 67 2E 54 65 78 74 4D 61 72 6B 65 72 54 61 67 3E 3E 2E 67 65 74 5F 43 75 72
      72 65 6E 74 00 67 65 74 5F 43 75 72 72 65 6E 74 00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69
      6F 6E 73 2E 49 45 6E 75 6D 65 72 61 74 6F 72 2E 52 65 73 65 74 00 52 65 73 65 74 00 53 79 73 74
      65 6D 2E 49 44 69 73 70 6F 73 61 62 6C 65 2E 44 69 73 70 6F 73 65 00 44 69 73 70 6F 73 65 00 3C
      3E 31 5F 5F 73 74 61 74 65 00 3C 3E 6C 5F 5F 69 6E 69 74 69 61 6C 54 68 72 65 61 64 49 64 00 53
      79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 2E 49 45 6E 75 6D 65 72 61 74 6F 72 2E 67 65
      74 5F 43 75 72 72 65 6E 74 00 3C 3E 34 5F 5F 74 68 69 73 00 3C 3E 33 5F 5F 73 70 61 6E 73 00 3C
      63 75 72 72 65 6E 74 43 68 61 72 3E 35 5F 5F 37 00 3C 63 75 72 72 65 6E 74 54 65 78 74 3E 35 5F
      5F 38 00 3C 6C 61 73 74 43 68 61 72 3E 35 5F 5F 39 00 3C 70 61 69 72 53 70 61 6E 3E 35 5F 5F 61
      00 3C 63 6C 6F 73 65 43 68 61 72 3E 35 5F 5F 62 00 3C 6F 70 65 6E 3E 35 5F 5F 63 00 43 53 24 3C
      3E 39 5F 5F 43 61 63 68 65 64 41 6E 6F 6E 79 6D 6F 75 73 4D 65 74 68 6F 64 44 65 6C 65 67 61 74
      65 32 00 43 53 24 3C 3E 38 5F 5F 6C 6F 63 61 6C 73 35 00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63
      74 69 6F 6E 73 2E 47 65 6E 65 72 69 63 2E 49 45 6E 75 6D 65 72 61 74 6F 72 3C 4D 69 63 72 6F 73
      6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 54 61 67 67 69 6E 67 2E 49 54
      61 67 53 70 61 6E 3C 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65
      78 74 2E 54 61 67 67 69 6E 67 2E 54 65 78 74 4D 61 72 6B 65 72 54 61 67 3E 3E 2E 43 75 72 72 65
      6E 74 00 53 79 73 74 65 6D 2E 43 6F 6C 6C 65 63 74 69 6F 6E 73 2E 49 45 6E 75 6D 65 72 61 74 6F
      72 2E 43 75 72 72 65 6E 74 00 44 65 62 75 67 67 65 72 48 69 64 64 65 6E 41 74 74 72 69 62 75 74
      65 00 54 68 72 65 61 64 00 67 65 74 5F 43 75 72 72 65 6E 74 54 68 72 65 61 64 00 67 65 74 5F 4D
      61 6E 61 67 65 64 54 68 72 65 61 64 49 64 00 67 65 74 5F 43 6F 75 6E 74 00 67 65 74 5F 53 6E 61
      70 73 68 6F 74 00 67 65 74 5F 49 74 65 6D 00 50 6F 69 6E 74 54 72 61 63 6B 69 6E 67 4D 6F 64 65
      00 54 72 61 6E 73 6C 61 74 65 54 6F 00 47 65 74 43 68 61 72 00 6F 70 5F 49 6D 70 6C 69 63 69 74
      00 6F 70 5F 53 75 62 74 72 61 63 74 69 6F 6E 00 43 6F 6E 74 61 69 6E 73 4B 65 79 00 54 72 79 47
      65 74 56 61 6C 75 65 00 49 54 65 78 74 56 69 65 77 4C 69 6E 65 43 6F 6C 6C 65 63 74 69 6F 6E 00
      67 65 74 5F 54 65 78 74 56 69 65 77 4C 69 6E 65 73 00 49 43 6F 6C 6C 65 63 74 69 6F 6E 60 31 00
      4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 46 6F 72 6D
      61 74 74 69 6E 67 00 49 54 65 78 74 56 69 65 77 4C 69 6E 65 00 54 61 67 53 70 61 6E 60 31 00 43
      6F 6E 74 61 69 6E 73 56 61 6C 75 65 00 53 79 73 74 65 6D 2E 43 6F 72 65 00 53 79 73 74 65 6D 2E
      4C 69 6E 71 00 45 6E 75 6D 65 72 61 62 6C 65 00 57 68 65 72 65 00 53 65 6C 65 63 74 00 45 6C 65
      6D 65 6E 74 41 74 00 4E 6F 74 53 75 70 70 6F 72 74 65 64 45 78 63 65 70 74 69 6F 6E 00 49 54 65
      78 74 53 6E 61 70 73 68 6F 74 4C 69 6E 65 00 47 65 74 43 6F 6E 74 61 69 6E 69 6E 67 4C 69 6E 65
      00 47 65 74 54 65 78 74 00 67 65 74 5F 4C 69 6E 65 4E 75 6D 62 65 72 00 67 65 74 5F 53 74 61 72
      74 00 67 65 74 5F 4C 69 6E 65 43 6F 75 6E 74 00 4D 61 74 68 00 4D 69 6E 00 53 74 72 69 6E 67 00
      67 65 74 5F 43 68 61 72 73 00 6F 70 5F 41 64 64 69 74 69 6F 6E 00 47 65 74 4C 69 6E 65 46 72 6F
      6D 4C 69 6E 65 4E 75 6D 62 65 72 00 4D 61 78 00 53 79 73 74 65 6D 2E 43 6F 6D 70 6F 6E 65 6E 74
      4D 6F 64 65 6C 2E 43 6F 6D 70 6F 73 69 74 69 6F 6E 00 45 78 70 6F 72 74 41 74 74 72 69 62 75 74
      65 00 54 79 70 65 00 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 43 6F
      72 65 55 74 69 6C 69 74 79 00 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F
      2E 55 74 69 6C 69 74 69 65 73 00 43 6F 6E 74 65 6E 74 54 79 70 65 41 74 74 72 69 62 75 74 65 00
      54 61 67 54 79 70 65 41 74 74 72 69 62 75 74 65 00 67 65 74 5F 54 65 78 74 42 75 66 66 65 72 00
      00 00 00 00 09 62 00 6C 00 75 00 65 00 00 00 D5 19 F2 5B 29 86 B9 4D A7 58 03 22 67 BB 05 A6 00
      08 B7 7A 5C 56 19 34 E0 89 08 B0 3F 5F 7F 11 D5 0A 3A 06 15 12 09 01 12 0D 04 20 00 12 15 05 20
      01 01 12 15 04 20 00 12 19 05 20 01 01 12 19 08 20 00 15 11 1D 01 11 21 09 20 01 01 15 11 1D 01
      11 21 07 06 15 12 25 02 03 03 07 06 15 12 29 01 12 2D 09 20 01 01 15 12 29 01 12 2D 07 20 02 01
      12 15 12 19 06 20 02 01 1C 12 31 06 20 02 01 1C 12 35 05 20 01 01 11 39 0E 20 01 15 12 3D 01 15
      12 41 01 12 0D 12 45 0B 00 05 02 11 21 03 03 08 10 11 49 03 06 12 15 03 06 12 19 07 06 15 11 1D
      01 11 21 04 28 00 12 15 04 28 00 12 19 08 28 00 15 11 1D 01 11 21 06 15 12 29 01 12 2D 0D 30 01
      02 15 12 09 01 1E 00 12 15 12 19 03 20 00 01 04 20 01 01 0E 04 20 01 01 02 06 20 01 01 11 80 89
      04 20 01 01 08 04 01 00 00 00 04 07 01 12 15 04 07 01 12 19 08 07 01 15 11 1D 01 11 21 0B 00 02
      12 80 99 12 80 99 12 80 99 0C 10 01 03 1E 00 10 1E 00 1E 00 1E 00 08 0A 01 15 12 29 01 12 2D 15
      07 04 15 12 29 01 12 2D 15 12 29 01 12 2D 15 12 29 01 12 2D 02 06 15 12 25 02 03 03 07 20 02 01
      13 00 13 01 06 15 11 1D 01 11 21 05 20 00 12 80 A1 06 15 12 29 01 12 35 05 20 02 01 1C 18 09 20
      01 01 15 12 29 01 12 35 06 15 12 29 01 12 31 09 20 01 01 15 12 29 01 12 31 05 20 00 12 80 A5 04
      20 00 11 39 03 07 01 02 05 20 00 12 80 A9 05 20 00 11 80 AD 0D 20 02 15 11 1D 01 11 21 12 19 11
      80 AD 03 20 00 02 03 20 00 08 08 20 03 01 12 80 A5 08 08 05 20 01 01 11 49 06 20 02 01 1C 13 00
      0F 07 03 15 12 29 01 12 2D 15 11 1D 01 11 21 02 02 06 03 0A 20 01 02 15 11 80 B1 02 03 03 0A 00
      01 03 15 11 80 B1 02 03 03 0E 06 15 12 80 B5 02 15 11 80 B1 02 03 03 03 07 15 11 80 B1 02 03 03
      04 20 00 13 01 04 20 01 02 03 04 07 02 02 03 04 20 00 13 00 03 07 01 03 0A 15 12 3D 01 15 12 41
      01 12 0D 0B 15 12 80 C1 01 15 12 41 01 12 0D 0D 20 00 15 12 80 C1 01 15 12 41 01 12 0D 09 20 00
      15 12 80 C1 01 13 00 05 20 00 12 80 C5 07 06 15 12 41 01 12 0D 08 20 00 15 12 41 01 12 0D 02 06
      08 03 20 00 1C 03 06 12 08 03 06 12 45 03 06 11 21 03 06 11 49 06 06 15 12 3D 01 03 0E 06 15 12
      80 B5 02 15 11 80 B1 02 03 03 02 03 06 12 10 08 28 00 15 12 41 01 12 0D 03 28 00 1C 05 00 00 12
      80 D1 10 07 03 12 14 15 12 80 C1 01 15 12 41 01 12 0D 02 05 07 01 12 80 C5 05 20 01 11 49 08 0A
      20 02 11 21 12 80 A5 11 80 D5 03 20 00 03 05 00 01 08 11 21 07 00 02 11 21 11 21 08 05 20 01 02
      13 00 08 20 02 02 13 00 10 13 01 05 20 00 12 80 D9 08 15 12 80 DD 01 12 80 E1 06 20 02 01 11 21
      08 07 15 12 80 E5 01 12 0D 07 20 02 01 11 49 13 00 05 20 01 02 13 01 0D 15 12 80 B5 02 15 11 80
      B1 02 03 03 02 17 10 01 02 15 12 3D 01 1E 00 15 12 3D 01 1E 00 15 12 80 B5 02 1E 00 02 09 0A 01
      15 11 80 B1 02 03 03 0D 15 12 80 B5 02 15 11 80 B1 02 03 03 03 18 10 02 02 15 12 3D 01 1E 01 15
      12 3D 01 1E 00 15 12 80 B5 02 1E 00 1E 01 0A 0A 02 15 11 80 B1 02 03 03 03 0C 10 01 02 1E 00 15
      12 3D 01 1E 00 08 03 0A 01 03 0F 07 06 02 08 02 15 11 1D 01 11 21 11 21 11 49 08 07 01 15 12 41
      01 12 0D 03 07 01 1C 0E 07 02 12 14 15 12 3D 01 15 12 41 01 12 0D 05 20 00 12 80 F1 03 20 00 0E
      04 20 00 11 21 05 00 02 08 08 08 04 20 01 03 08 06 20 01 12 80 F1 08 0F 07 0A 12 80 F1 0E 08 08
      08 08 03 02 11 21 02 07 20 02 01 11 21 11 21 07 00 02 08 11 21 11 21 0D 07 09 12 80 F1 08 08 0E
      08 08 03 02 02 06 20 01 01 12 81 01 80 A1 01 00 80 9B 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75
      61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 54 61 67 67 69 6E 67 2E 49 56 69 65 77 54 61 67 67 65
      72 50 72 6F 76 69 64 65 72 2C 20 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69
      6F 2E 54 65 78 74 2E 55 49 2C 20 56 65 72 73 69 6F 6E 3D 31 30 2E 30 2E 30 2E 30 2C 20 43 75 6C
      74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 30 33
      66 35 66 37 66 31 31 64 35 30 61 33 61 00 00 09 01 00 04 74 65 78 74 00 00 80 9B 01 00 80 95 4D
      69 63 72 6F 73 6F 66 74 2E 56 69 73 75 61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 54 61 67 67 69
      6E 67 2E 54 65 78 74 4D 61 72 6B 65 72 54 61 67 2C 20 4D 69 63 72 6F 73 6F 66 74 2E 56 69 73 75
      61 6C 53 74 75 64 69 6F 2E 54 65 78 74 2E 55 49 2C 20 56 65 72 73 69 6F 6E 3D 31 30 2E 30 2E 30
      2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F
      6B 65 6E 3D 62 30 33 66 35 66 37 66 31 31 64 35 30 61 33 61 00 00 06 15 12 09 01 1E 00 09 07 02
      15 12 09 01 1E 00 02 2B 01 00 26 4A 41 45 45 2E 41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73 69
      6F 6E 73 2E 42 72 61 63 65 4D 61 74 63 68 69 6E 67 00 00 05 01 00 00 00 00 16 01 00 11 77 77 77
      2E 6A 61 65 73 74 65 76 61 6E 2E 63 6F 6D 00 00 1F 01 00 1A 4A 41 45 45 42 72 61 63 65 4D 61 74
      63 68 69 6E 67 45 78 74 65 6E 73 69 6F 6E 00 00 1A 01 00 15 4A 6F 73 C3 A9 20 41 6E 74 6F 6E 69
      6F 20 45 73 74 65 76 61 6E 00 00 0C 01 00 07 30 2E 31 2E 30 2E 30 00 00 47 01 00 1A 2E 4E 45 54
      46 72 61 6D 65 77 6F 72 6B 2C 56 65 72 73 69 6F 6E 3D 76 34 2E 30 01 00 54 0E 14 46 72 61 6D 65
      77 6F 72 6B 44 69 73 70 6C 61 79 4E 61 6D 65 10 2E 4E 45 54 20 46 72 61 6D 65 77 6F 72 6B 20 34
      08 01 00 07 01 00 00 00 00 08 01 00 08 00 00 00 00 00 1E 01 00 01 00 54 02 16 57 72 61 70 4E 6F
      6E 45 78 63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 00 00 00 00 00 00 0F F4 3C 51 00 00 00 00 02
      00 00 00 9A 00 00 00 D8 4A 00 00 D8 2C 00 00 52 53 44 53 AF 6D 8D 7A BD D7 63 47 93 8D 92 3C 01
      B7 DA A3 01 00 00 00 44 3A 5C 44 72 6F 70 62 6F 78 5C 56 69 73 75 61 6C 20 53 74 75 64 69 6F 5C
      4A 41 45 45 2E 41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73 69 6F 6E 73 5C 4A 41 45 45 42 72 61
      63 65 4D 61 74 63 68 69 6E 67 45 78 74 65 6E 73 69 6F 6E 5C 6F 62 6A 5C 44 65 62 75 67 5C 4A 41
      45 45 2E 41 58 2E 45 64 69 74 6F 72 45 78 74 65 6E 73 69 6F 6E 73 2E 42 72 61 63 65 4D 61 74 63
      68 69 6E 67 2E 70 64 62 00 00 00 9C 4B 00 00 00 00 00 00 00 00 00 00 BE 4B 00 00 00 20 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 B0 4B 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 5F 43 6F 72 44 6C 6C 4D 61 69 6E 00 6D 73 63 6F 72 65 65 2E 64 6C 6C
      00 00 00 00 00 FF 25 00 20 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 01 00 10 00 00 00 18 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 01
      00 00 00 30 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 48 00 00 00 58
      60 00 00 D4 03 00 00 00 00 00 00 00 00 00 00 D4 03 34 00 00 00 56 00 53 00 5F 00 56 00 45 00 52
      00 53 00 49 00 4F 00 4E 00 5F 00 49 00 4E 00 46 00 4F 00 00 00 00 00 BD 04 EF FE 00 00 01 00 01
      00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 3F 00 00 00 00 00 00 00 04 00 00 00 02 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 44 00 00 00 01 00 56 00 61 00 72 00 46 00 69 00 6C 00 65 00 49
      00 6E 00 66 00 6F 00 00 00 00 00 24 00 04 00 00 00 54 00 72 00 61 00 6E 00 73 00 6C 00 61 00 74
      00 69 00 6F 00 6E 00 00 00 00 00 00 00 B0 04 34 03 00 00 01 00 53 00 74 00 72 00 69 00 6E 00 67
      00 46 00 69 00 6C 00 65 00 49 00 6E 00 66 00 6F 00 00 00 10 03 00 00 01 00 30 00 30 00 30 00 30
      00 30 00 34 00 62 00 30 00 00 00 44 00 12 00 01 00 43 00 6F 00 6D 00 70 00 61 00 6E 00 79 00 4E
      00 61 00 6D 00 65 00 00 00 00 00 77 00 77 00 77 00 2E 00 6A 00 61 00 65 00 73 00 74 00 65 00 76
      00 61 00 6E 00 2E 00 63 00 6F 00 6D 00 00 00 78 00 27 00 01 00 46 00 69 00 6C 00 65 00 44 00 65
      00 73 00 63 00 72 00 69 00 70 00 74 00 69 00 6F 00 6E 00 00 00 00 00 4A 00 41 00 45 00 45 00 2E
      00 41 00 58 00 2E 00 45 00 64 00 69 00 74 00 6F 00 72 00 45 00 78 00 74 00 65 00 6E 00 73 00 69
      00 6F 00 6E 00 73 00 2E 00 42 00 72 00 61 00 63 00 65 00 4D 00 61 00 74 00 63 00 68 00 69 00 6E
      00 67 00 00 00 00 00 30 00 08 00 01 00 46 00 69 00 6C 00 65 00 56 00 65 00 72 00 73 00 69 00 6F
      00 6E 00 00 00 00 00 30 00 2E 00 31 00 2E 00 30 00 2E 00 30 00 00 00 78 00 2B 00 01 00 49 00 6E
      00 74 00 65 00 72 00 6E 00 61 00 6C 00 4E 00 61 00 6D 00 65 00 00 00 4A 00 41 00 45 00 45 00 2E
      00 41 00 58 00 2E 00 45 00 64 00 69 00 74 00 6F 00 72 00 45 00 78 00 74 00 65 00 6E 00 73 00 69
      00 6F 00 6E 00 73 00 2E 00 42 00 72 00 61 00 63 00 65 00 4D 00 61 00 74 00 63 00 68 00 69 00 6E
      00 67 00 2E 00 64 00 6C 00 6C 00 00 00 00 00 50 00 15 00 01 00 4C 00 65 00 67 00 61 00 6C 00 43
      00 6F 00 70 00 79 00 72 00 69 00 67 00 68 00 74 00 00 00 4A 00 6F 00 73 00 E9 00 20 00 41 00 6E
      00 74 00 6F 00 6E 00 69 00 6F 00 20 00 45 00 73 00 74 00 65 00 76 00 61 00 6E 00 00 00 00 00 80
      00 2B 00 01 00 4F 00 72 00 69 00 67 00 69 00 6E 00 61 00 6C 00 46 00 69 00 6C 00 65 00 6E 00 61
      00 6D 00 65 00 00 00 4A 00 41 00 45 00 45 00 2E 00 41 00 58 00 2E 00 45 00 64 00 69 00 74 00 6F
      00 72 00 45 00 78 00 74 00 65 00 6E 00 73 00 69 00 6F 00 6E 00 73 00 2E 00 42 00 72 00 61 00 63
      00 65 00 4D 00 61 00 74 00 63 00 68 00 69 00 6E 00 67 00 2E 00 64 00 6C 00 6C 00 00 00 00 00 58
      00 1B 00 01 00 50 00 72 00 6F 00 64 00 75 00 63 00 74 00 4E 00 61 00 6D 00 65 00 00 00 00 00 4A
      00 41 00 45 00 45 00 42 00 72 00 61 00 63 00 65 00 4D 00 61 00 74 00 63 00 68 00 69 00 6E 00 67
      00 45 00 78 00 74 00 65 00 6E 00 73 00 69 00 6F 00 6E 00 00 00 00 00 34 00 08 00 01 00 50 00 72
      00 6F 00 64 00 75 00 63 00 74 00 56 00 65 00 72 00 73 00 69 00 6F 00 6E 00 00 00 30 00 2E 00 31
      00 2E 00 30 00 2E 00 30 00 00 00 38 00 08 00 01 00 41 00 73 00 73 00 65 00 6D 00 62 00 6C 00 79
      00 20 00 56 00 65 00 72 00 73 00 69 00 6F 00 6E 00 00 00 30 00 2E 00 31 00 2E 00 30 00 2E 00 30
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 0C 00 00 00 D0
      3B 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FF FF FF
    ENDBINARY
  ENDRESOURCE
  

***Element: CLS

; Microsoft Dynamics AX Class: FileEditorComponentBase unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #FileEditorComponentBase
    PROPERTIES
      Name                #FileEditorComponentBase
      Extends             #SysFileDeploymentFile
      Origin              #{72F528C7-307E-4A24-9982-3ADAE2CAACC6}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #/// <summary>
        #/// Base class for Editor component file deployments
        #/// </summary>
        #/// <remarks>
        #/// For the editor components dlls be deployed properly, proper
        #/// </remarks>
        #/// <history>
        #///     <utcdatetime>7/25/2014 09:11:05 am</utcdatetime>
        #///     <author>Dominic Lee</author>
        #///     <version>1.0.0</version>
        #///     <reason>
        #///     Initial version
        #///     </reason>
        #/// </history>
        #class FileEditorComponentBase extends SysFileDeploymentFile
        #{
        #}
      ENDSOURCE
      SOURCE #destinationPath
        #protected FilenameSave destinationPath()
        #{
        #    return xInfo::directory(DirectoryType::Bin) + @"\EditorComponents\";
        #}
      ENDSOURCE
      SOURCE #filename
        #/// <summary>
        #/// Filename method stub
        #/// </summary>
        #/// <returns>
        #/// Empty string
        #/// </returns>
        #/// <remarks>
        #/// This method is required to by pass the \Classes\SysFileDeployment\isNameValid check
        #/// </remarks>
        #/// <history>
        #///     <utcdatetime>7/25/2014 08:49:40 am</utcdatetime>
        #///     <author>Dominic Lee</author>
        #///     <version>1.0.0</version>
        #///     <reason>
        #///     Initial version
        #///     </reason>
        #/// </history>
        #public Filename filename()
        #{
        #    return "";
        #}
      ENDSOURCE
      SOURCE #isClientUpdated
        #public boolean isClientUpdated()
        #{
        #    return this.parmClientVersion() == this.parmServerVersion();
        #}
      ENDSOURCE
      SOURCE #parmClientVersion
        #public anytype parmClientVersion()
        #{
        #    str filename = strFmt(@'%1\%2', this.destinationPath(), this.filename());
        #    date clientDate;
        #    TimeOfDay clientTime;
        #
        #    if (WinAPI::fileExists(filename))
        #    {
        #        clientDate = WinAPI::getFileModifiedDate(filename);
        #        clientTime = WinAPI::getFileModifiedTime(filename);
        #    }
        #
        #    return strFmt('%1T%2', clientDate, clientTime);
        #}
      ENDSOURCE
      SOURCE #parmServerVersion
        #public anytype parmServerVersion()
        #{
        #    str filename = strFmt(@'%1\%2', this.sourcePath(), this.filename());
        #
        #    return FileEditorComponentBase::ServerFileVersion(filename);
        #}
      ENDSOURCE
      SOURCE #resourceNode
        #public resourceNode resourceNode()
        #{
        #    throw Global::error("This method must be implemented in subclass");
        #}
      ENDSOURCE
      SOURCE #sourcePath
        #protected FilenameOpen sourcePath()
        #{
        #    return FileEditorComponentBase::getIncludePath();
        #}
      ENDSOURCE
      SOURCE #createFileInShareFolder
        #public static server void createFileInShareFolder()
        #{
        #    SysDictClass    subClass, baseClass = new SysDictClass(classNum(FileEditorComponentBase));
        #    List            subClassList = baseClass.extendedBy();
        #    ListEnumerator  listEnum = subClassList.getEnumerator();
        #    Object          subClassInstance;
        #    Set             permissionSet;
        #
        #    #FILE
        #    resourceNode    resourceNode;
        #    FilePath        filePath;
        #    Filename        fileName;
        #
        #    try
        #    {
        #        while (listEnum.moveNext())
        #        {
        #            permissionSet = new Set(Types::Class);
        #            permissionSet.add(new ExecutePermission());
        #            CodeAccessPermission::assertMultiple(permissionSet);
        #
        #            subClass = new SysDictClass(listEnum.current());
        #            subClassInstance = subClass.makeObject();
        #            filePath = SysDictClass::invokeObjectMethod(subClassInstance, methodStr(FileEditorComponentBase,sourcePath),true);
        #            fileName = SysDictClass::invokeObjectMethod(subClassInstance, methodStr(SysFileDeployment,filename),true);
        #
        #            CodeAccessPermission::revertAssert();
        #            permissionSet.add( new FileIOPermission(filePath + fileName, #IO_WRITE));
        #            CodeAccessPermission::assertMultiple(permissionSet);
        #
        #            resourceNode = SysDictClass::invokeObjectMethod(subClassInstance, methodStr(FileEditorComponentBase,resourceNode));
        #
        #            if (resourceNode)
        #            {
        #                resourceNode.AOTload();
        #                SysResource::exportResource(resourceNode,FilePath);
        #            }
        #
        #            CodeAccessPermission::revertAssert();
        #        }
        #        info("Source files created.");
        #    }
        #    catch (Exception::Error)
        #    {
        #        throw error("Error encountered during creation of Editor components files on server.");
        #    }
        #}
      ENDSOURCE
      SOURCE #deleteFileFrShareFolder
        #public static server void deleteFileFrShareFolder()
        #{
        #    SysDictClass    subClass, baseClass = new SysDictClass(classNum(FileEditorComponentBase));
        #    List            subClassList = baseClass.extendedBy();
        #    ListEnumerator  listEnum = subClassList.getEnumerator();
        #    Object          subClassInstance;
        #    Set             permissionSet;
        #
        #    #FILE
        #    FilePath        filePath;
        #    Filename        fileName;
        #
        #    try
        #    {
        #        while (listEnum.moveNext())
        #        {
        #            permissionSet = new Set(Types::Class);
        #            permissionSet.add(new ExecutePermission());
        #            CodeAccessPermission::assertMultiple(permissionSet);
        #
        #            subClass = new SysDictClass(listEnum.current());
        #            subClassInstance = subClass.makeObject();
        #            filePath = SysDictClass::invokeObjectMethod(subClassInstance, methodStr(FileEditorComponentBase,sourcePath),true);
        #            fileName = SysDictClass::invokeObjectMethod(subClassInstance, methodStr(SysFileDeployment,filename),true);
        #
        #            CodeAccessPermission::revertAssert();
        #            permissionSet.add( new FileIOPermission(filePath + fileName, #IO_WRITE));
        #            CodeAccessPermission::assertMultiple(permissionSet);
        #
        #            WinAPI::deleteFile(filePath + fileName);
        #
        #            CodeAccessPermission::revertAssert();
        #        }
        #    }
        #    catch (Exception::Error)
        #    {
        #        throw error("Error encountered during deletion of Editor components files on server.");
        #    }
        #
        #}
      ENDSOURCE
      SOURCE #FileExistsInShareFolder
        #public static boolean FileExistsInShareFolder()
        #{
        #    SysDictClass    subClass, baseClass = new SysDictClass(classNum(FileEditorComponentBase));
        #    List            subClassList = baseClass.extendedBy();
        #    ListEnumerator  listEnum = subClassList.getEnumerator();
        #    Object          subClassInstance;
        #    boolean         ret = true;
        #
        #    #FILE
        #    FilePath        filePath;
        #    Filename        fileName;
        #
        #    while (listEnum.moveNext())
        #    {
        #        subClass = new SysDictClass(listEnum.current());
        #        subClassInstance = subClass.makeObject();
        #        filePath = SysDictClass::invokeObjectMethod(subClassInstance, methodStr(FileEditorComponentBase,sourcePath),true);
        #        fileName = SysDictClass::invokeObjectMethod(subClassInstance, methodStr(SysFileDeployment,filename),true);
        #
        #        new FileIOPermission(filePath + fileName, #IO_WRITE).assert();
        #
        #        ret = ret && WinAPI::fileExists(filePath + fileName);
        #
        #        CodeAccessPermission::revertAssert();
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #getIncludePath
        #public server static str getIncludePath()
        #{
        #    return xInfo::directory(DirectoryType::Include);
        #}
      ENDSOURCE
      SOURCE #ServerFileVersion
        #protected server static anytype ServerFileVersion(str filename)
        #{
        #    date serverDate;
        #    TimeOfDay   serverTime;
        #
        #    new FileIOPermission(filename, 'r').assert();
        #
        #    if (WinAPIServer::fileExists(filename))
        #    {
        #        serverDate = WinAPIServer::getFileModifiedDate(filename);
        #        serverTime = WinAPIServer::getFileModifiedTime(filename);
        #    }
        #
        #    return strFmt('%1T%2', serverDate, serverTime);
        #}
        #
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: SysFileDeployer unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #SysFileDeployer
    PROPERTIES
      Name                #SysFileDeployer
      Extends             #RunBase
      RunOn               #Client
      Origin              #{2D0F1781-0000-1000-FAB6-028C31A0EBBD}
      LegacyId            #6017
    ENDPROPERTIES
    
    METHODS
      SOURCE #parmUpToDatePostEHr
        #public static void parmUpToDatePostEHr(XppPrePostArgs _args)
        #{
        #    _args.setReturnValue(false);
        #}
      ENDSOURCE
    ENDMETHODS
    EVENTS
      METHOD #parmUpToDate
        EVENTHANDLERS
          EVENTHANDLER #parmUpToDatePostEHr
            PROPERTIES
              CalledWhen          #Post
              Class               #SysFileDeployer
              Method              #parmUpToDatePostEHr
              AOTlink             #\Classes\SysFileDeployer\parmUpToDatePostEHr
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
      METHOD #filesToDeploy
        EVENTHANDLERS
          EVENTHANDLER #FileEditorComponentBraceMatchingPostEHr
            PROPERTIES
              CalledWhen          #Post
              Class               #FileEditorComponentBraceMatching
              Method              #filesToDeployHandler
              AOTlink             #\Classes\FileEditorComponentBraceMatching\filesToDeployHandler
            ENDPROPERTIES
            
          ENDEVENTHANDLER
          EVENTHANDLER #FileEditorComponentHighlightWordPostEHr
            PROPERTIES
              CalledWhen          #Post
              Class               #FileEditorComponentHighlightWord
              Method              #filesToDeployHandler
              AOTlink             #\Classes\FileEditorComponentHighlightWord\filesToDeployHandler
            ENDPROPERTIES
            
          ENDEVENTHANDLER
          EVENTHANDLER #FileEditorComponentOutliningPostEHr
            PROPERTIES
              CalledWhen          #Post
              Class               #FileEditorComponentOutlining
              Method              #filesToDeployHandler
              AOTlink             #\Classes\FileEditorComponentOutlining\filesToDeployHandler
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
    ENDEVENTS
  ENDCLASS

***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #DEV_CreateNewProjectDlg
  PROPERTIES
    Name                #DEV_CreateNewProjectDlg
    Origin              #{284E4EA6-89A7-4AC8-8D96-69E9BD1178FC}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #//<DEV_CreateNewProject_IKash date=2007-09-03 txt='DEV_CreateNewProject Tool (also a Tabax extension plugin)'>
      ##AOT
      ##ResAppl
      #public class FormRun extends ObjectRun
      #{
      #    DEV_CreateNewProject        axCreateNewProject;
      #    ImageListAppl_Aot           imageListSmallAOT;
      #    ImageListAppl_checkbox      imageListAppl_checkbox;
      #    container                   aotPathes;
      #    int                         maxNameLen;
      #
      #    ProjectSharedPrivate        projectType;
      #    TreeNodeName                projectPrefix;
      #    TreeNodeName                projectName;
      #    container                   selectedProjectNodes;
      #    NoYes                       usePrefixValue;
      #    NoYes                       warnAboutNameDuplicates;
      #    NoYes                       updateExistingProject;
      #    Map                         objectTypeName;
      #
      #    TreeNodeName                projectPrefixOrig;
      #    TreeNodeName                projectNameOrig;
      #    ProjectSharedPrivate        projectTypeOrig;
      #    NoYes                       usePrefixOrig;
      #
      #    #localmacro.FormControlValues
      #        projectType,
      #        projectPrefix,
      #        projectName,
      #        selectedProjectNodes,
      #        usePrefixValue,
      #        warnAboutNameDuplicates,
      #        updateExistingProject
      #    #endmacro
      #}
    ENDSOURCE
    SOURCE #addObject2Tree
      #void addObject2Tree(TreeNode _treeNode)
      #{
      #    TreeNodePath    treeNodePath;
      #    int             i;
      #    container       con;
      #    int             nItem, nChild, nIndex, nChildLevel2;
      #    FormTreeItem    formTreeItem;
      #
      #    ;
      #    treeNodePath = subStr(_treeNode.treeNodePath(), 1, strLen(_treeNode.treeNodePath()) - strLen(_treeNode.treeNodeName()) - 1);
      #
      #    for (i = 1; i <= conLen(this.pathes()); i++)
      #    {
      #        con = conPeek(this.pathes(), i);
      #        if (conPeek(con, 1) == treeNodePath)
      #        {
      #            nIndex = i;
      #            break;
      #        }
      #    }
      #    if (nIndex < 1) //means, that the group node name with the selected object is not found in pathes
      #        return;
      #
      #    nItem = treeSettings.getChild(treeSettings.getRoot());
      #    while (nItem)
      #    {
      #        if (typeOf(treeSettings.getItem(nItem).data()) == Types::String && treeSettings.getItem(nItem).data() == treeNodePath)
      #        {
      #            SysFormTreeControl::addTreeItem(treeSettings, _treeNode.treeNodeName(), nItem, _treeNode.treeNodeType().id(),//_treeNode.treeNodePath(),
      #                                            imageListSmallAOT.image(ImageListAppl_Aot::utilElementType2Image(_treeNode.treeNodeType().id())), false, this.getNodeStateImage(nIndex));
      #
      #            formTreeItem = treeSettings.getItem(nItem);
      #            formTreeItem.children(true);
      #            treeSettings.setItem(formTreeItem);
      #            return;
      #        }
      #        nChild = treeSettings.getChild(nItem);
      #        while (nChild)
      #        {
      #            if (typeOf(treeSettings.getItem(nChild).data()) == Types::String && treeSettings.getItem(nChild).data() == treeNodePath)
      #            {
      #                SysFormTreeControl::addTreeItem(treeSettings, _treeNode.treeNodeName(), nChild, _treeNode.treeNodeType().id(),//_treeNode.treeNodePath(),
      #                                                imageListSmallAOT.image(ImageListAppl_Aot::utilElementType2Image(_treeNode.treeNodeType().id())), false, this.getNodeStateImage(nIndex));
      #                formTreeItem = treeSettings.getItem(nChild);
      #                formTreeItem.children(true);
      #                treeSettings.setItem(formTreeItem);
      #                return;
      #            }
      #            nChildLevel2 = treeSettings.getChild(nChild);
      #            while (nChildLevel2)
      #            {
      #                if (typeOf(treeSettings.getItem(nChildLevel2).data()) == Types::String && treeSettings.getItem(nChildLevel2).data() == treeNodePath)
      #                {
      #                    SysFormTreeControl::addTreeItem(treeSettings, _treeNode.treeNodeName(), nChildLevel2, _treeNode.treeNodeType().id(),//_treeNode.treeNodePath(),
      #                                                    imageListSmallAOT.image(ImageListAppl_Aot::utilElementType2Image(_treeNode.treeNodeType().id())), false, this.getNodeStateImage(nIndex));
      #                    formTreeItem = treeSettings.getItem(nChildLevel2);
      #                    formTreeItem.children(true);
      #                    treeSettings.setItem(formTreeItem);
      #                    return;
      #                }
      #                nChildLevel2 = treeSettings.getNextSibling(nChildLevel2);
      #            }
      #            nChild = treeSettings.getNextSibling(nChild);
      #        }
      #        nItem = treeSettings.getNextSibling(nItem);
      #    }
      #}
    ENDSOURCE
    SOURCE #addProjectObjects2Tree
      ##TreeNodeSysNodeType
      #void addProjectObjects2Tree()
      #{
      #    TreeNodeName        findProjectName;
      #    Object              prjListNode;
      #    ProjectNode         prjNode;
      #    TreeNode            treeNode;
      #    TreeNodeIterator    treeNodeIterator;
      #
      #    void    getProjectGroup(ProjectGroupNode parentNode)
      #    {
      #        TreeNode                treeNodeLocal;
      #        TreeNodeIterator        treeNodeIteratorLocal;
      #        ;
      #        treeNodeIteratorLocal = parentNode.AOTiterator();
      #        treeNodeLocal = treeNodeIteratorLocal.next();
      #        while (treeNodeLocal)
      #        {
      #            if (treeNodeLocal.treeNodeType().id() == #NT_PROJECT_GROUP)
      #                getProjectGroup(treeNodeLocal);
      #            else
      #            {
      #                element.addObject2Tree(treeNodeLocal);
      #            }
      #            treeNodeLocal = treeNodeIteratorLocal.next();
      #        }
      #    }
      #    ;
      #    prjListNode = projectTypeOrig == ProjectSharedPrivate::ProjPrivate ?
      #        SysTreeNode::getPrivateProject() : SysTreeNode::getSharedProject();
      #
      #    if (usePrefixOrig)
      #        findProjectName = axCreateNewProject.convertProjectPrefix(projectPrefixOrig);
      #    findProjectName += projectNameOrig;
      #
      #    prjNode = prjListNode.aoTfindChild(findProjectName);
      #
      #    if (!prjNode)
      #    {
      #        error(strFmt(@"A %1 project %2 was not found", cbProjectType.selection() == ProjectSharedPrivate::ProjPrivate ?
      #            @"Private" : @"Shared", projectNameOrig));
      #        return;
      #    }
      #
      #    prjNode = prjNode.loadForInspection();
      #    startLengthyOperation();
      #    treeNodeIterator = prjNode.AOTiterator();
      #
      #    treeNode = treeNodeIterator.next();
      #    while (treeNode)
      #    {
      #        if (treeNode.treeNodeType().id() == #NT_PROJECT_GROUP)
      #        {
      #            getProjectGroup(treeNode);
      #        }
      #        else
      #        {
      #            element.addObject2Tree(treeNode);
      #        }
      #        treeNode = treeNodeIterator.next();
      #    }
      #    endLengthyOperation();
      #    buttonCopyProjectObjects.enabled(NoYes::No);
      #}
    ENDSOURCE
    SOURCE #addTreeNode
      #TreeItemIdx addTreeNode(str _nodePath, int _nIndex, int _parentIdx, boolean _hasChildren = false)
      #{
      #    int     img;
      #    int     dummy;
      #    ;
      #    [dummy, img] = conPeek(this.pathes(), _nIndex);
      #    dummy = dummy; //BP Deviation Fix
      #    return SysFormTreeControl::addTreeItem(treeSettings,                        //FormTreeControl
      #                                           SysTreeNode::pathName(_nodePath),    //Item Name
      #                                           _parentIdx,                          //Parent Index
      #                                           _nodePath,                           //Item Data
      #                                           imageListSmallAOT.image(img),        //Item Image
      #                                           _hasChildren,                        //has Child nodes?
      #                                           element.getNodeStateImage(_nIndex)); //Item checkbox image
      #}
    ENDSOURCE
    SOURCE #closeOk
      #void closeOk()
      #{
      #    DialogRunbase dialog = element.args().caller();
      #    ;
      #    element.sendDataToClass();
      #
      #    dialog.updateServer();
      #
      #    if (axCreateNewProject.checkCloseDialog())
      #        super();
      #}
      #
    ENDSOURCE
    SOURCE #fillTree
      #void fillTree()
      #{
      #    TreeItemIdx     rootIdx;
      #    TreeItemIdx     dataDictionaryIdx;
      #    TreeItemIdx     menuItemsIdx;
      #    TreeItemIdx     moreIdx;
      #    TreeItemIdx     ssrsReportRootIdx;
      #    TreeItemIdx     vsProjectIdx;
      #    TreeItemIdx     workflowIdx;
      #    TreeItemIdx     securityIdx;
      #    TreeItemIdx     partsIdx;
      #    Line            curLine = 8;
      #    ;
      #    treeSettings.deleteAll();
      #
      #    rootIdx = SysFormTreeControl::addTreeItem(treeSettings, @"Project", FormTreeAdd::Root, @"Project",
      #        imageListSmallAOT.image(#ImageProject), true, element.getRootStateImage());
      #
      #    dataDictionaryIdx   = element.addTreeNode(#DataDictionaryPath,      1, rootIdx, true);
      #    element.addTreeNode(#TablesPath,              2, dataDictionaryIdx);
      #    element.addTreeNode(#TableMapsPath,           3, dataDictionaryIdx);
      #    element.addTreeNode(#ViewsPath,               4, dataDictionaryIdx);
      #    element.addTreeNode(#ExtendedDataTypesPath,   5, dataDictionaryIdx);
      #    element.addTreeNode(#BaseEnumsPath,           6, dataDictionaryIdx);
      #
      #    moreIdx = SysFormTreeControl::addTreeItem(treeSettings, @"More...", dataDictionaryIdx, @"More...",
      #        imageListSmallAOT.image(#ImageDataDictionary), true, element.getNodeStateImage(7));
      #
      #    element.addTreeNode(#LicenseCodesPath,        curLine, moreIdx);    curLine++;
      #    element.addTreeNode(#ConfigurationKeysPath,   curLine, moreIdx);    curLine++;
      #    element.addTreeNode(#TableCollectionsPath,    curLine, moreIdx);    curLine++;
      #    element.addTreeNode(#PerspectivesPath,        curLine, moreIdx);    curLine++;
      #
      #    element.addTreeNode(#MacrosPath,              12, rootIdx);
      #    element.addTreeNode(#ClassesPath,             13, rootIdx);
      #    element.addTreeNode(#FormsPath,               14, rootIdx);
      #
      #    partsIdx            = element.addTreeNode(#PartsPath,               15, rootIdx);
      #    element.addTreeNode(#InfoPartsPath,           16, partsIdx);
      #    element.addTreeNode(#FormPartsPath,           17, partsIdx);
      #    element.addTreeNode(#CuesPath,                18, partsIdx);
      #    element.addTreeNode(#CueGroupsPath,           19, partsIdx);
      #
      #    ssrsReportRootIdx   = element.addTreeNode(#SSRSReportsRootPath, 20, rootIdx);
      #    element.addTreeNode(#SSRSReportsPath,         21, ssrsReportRootIdx);
      #
      #    vsProjectIdx        = element.addTreeNode(#VSProjectsPath,  22, rootIdx);
      #    element.addTreeNode(#VSProjectsAXModelPath,   23, vsProjectIdx);
      #    element.addTreeNode(#VSProjectsCSharpPath,    24, vsProjectIdx);
      #    element.addTreeNode(#VSProjectsAnalysisPath,  25, vsProjectIdx);
      #
      #    element.addTreeNode(#QueriesPath,             26, rootIdx);
      #    element.addTreeNode(#JobsPath,                27, rootIdx);
      #    element.addTreeNode(#MenusPath,               28, rootIdx);
      #
      #    menuItemsIdx        = element.addTreeNode(#MenuItemsPath, 29, rootIdx, true);
      #    element.addTreeNode(#MenuItemsDisplayPath,    30, menuItemsIdx);
      #    element.addTreeNode(#MenuItemsOutputPath,     31, menuItemsIdx);
      #    element.addTreeNode(#MenuItemsActionPath,     32, menuItemsIdx);
      #
      #    element.addTreeNode(#ServicesPath,            33, rootIdx);
      #    element.addTreeNode(#ServiceGroupsPath,       34, rootIdx);
      #
      #    workflowIdx         = element.addTreeNode(#WorkflowPath,  35, rootIdx);
      #    element.addTreeNode(#WorkflowCategoriesPath,  36, workflowIdx);
      #    element.addTreeNode(#WorkflowApprovalTasksPath, 37, workflowIdx);
      #    element.addTreeNode(#WorkflowTasksPath,       38, workflowIdx);
      #    element.addTreeNode(#WorkflowAutomatedTasksPath, 39, workflowIdx);
      #    element.addTreeNode(#WorkflowTypesPath,       40, workflowIdx);
      #    element.addTreeNode(#WorkflowProvidersPath,   41, workflowIdx);
      #
      #    securityIdx         = element.addTreeNode(#SecurityPath,    42, rootIdx);
      #    element.addTreeNode(#SecCodePermissionsPath,  43, securityIdx);
      #    element.addTreeNode(#SecPrivilegesPath,       44, securityIdx);
      #    element.addTreeNode(#SecDutiesPath,           45, securityIdx);
      #    element.addTreeNode(#SecRolesPath,            46, securityIdx);
      #    element.addTreeNode(#SecProcessCyclesPath,    47, securityIdx);
      #    element.addTreeNode(#SecPoliciesPath,         48, securityIdx);
      #
      #    SysFormTreeControl::expandTree(treeSettings, rootIdx);
      #    SysFormTreeControl::expandTree(treeSettings, dataDictionaryIdx);
      #    SysFormTreeControl::expandTree(treeSettings, menuItemsIdx);
      #    SysFormTreeControl::collapseTree(treeSettings, moreIdx);
      #    SysFormTreeControl::collapseTree(treeSettings, partsIdx);
      #    SysFormTreeControl::collapseTree(treeSettings, vsProjectIdx);
      #    SysFormTreeControl::collapseTree(treeSettings, workflowIdx);
      #    SysFormTreeControl::collapseTree(treeSettings, securityIdx);
      #
      #    treeSettings.select(rootIdx);
      #}
    ENDSOURCE
    SOURCE #getNodeStateImage
      #int getNodeStateImage(int _nIndex)
      #{
      #    ;
      #    switch (conPeek(selectedProjectNodes, _nIndex))
      #    {
      #        case UnknownNoYes::Unknown  :
      #            return imageListAppl_checkbox.image(#ImageCheckSome);
      #
      #        case UnknownNoYes::Yes      :
      #            return imageListAppl_checkbox.image(#ImageCheckAll);
      #    }
      #    return imageListAppl_checkbox.image(#ImageCheckNone);
      #}
    ENDSOURCE
    SOURCE #getNodeStateValue
      #int getNodeStateValue(int _nIndex)
      #{
      #    FormTreeItem formTreeItem = treeSettings.getItem(_nIndex);
      #    ;
      #
      #    switch (formTreeItem.stateImage())
      #    {
      #        case imageListAppl_checkbox.image(#ImageCheckAll) :
      #            return UnknownNoYes::Yes;
      #
      #        case imageListAppl_checkbox.image(#ImageCheckNone) :
      #            return UnknownNoYes::No;
      #    }
      #    return UnknownNoYes::Unknown;
      #}
    ENDSOURCE
    SOURCE #getRootStateImage
      #int getRootStateImage()
      #{
      #    ;
      #    if (!conFind(selectedProjectNodes, UnknownNoYes::No))
      #        return imageListAppl_checkbox.image(#ImageCheckAll);
      #
      #    if (!conFind(selectedProjectNodes, UnknownNoYes::Yes))
      #        return imageListAppl_checkbox.image(#ImageCheckNone);
      #
      #    return imageListAppl_checkbox.image(#ImageCheckSome);
      #}
    ENDSOURCE
    SOURCE #init
      #public void init()
      #{
      #    ;
      #    if (!element.args().caller())
      #        throw error(strFmt(@"Method '%1.%2()' was called incorrectly", this.name(), funcName()));
      #
      #    axCreateNewProject =  element.args().caller().runbase();
      #
      #    super();
      #
      #    maxNameLen = new SysDictType(extendedTypeNum(TreeNodeName)).stringLen();
      #    this.initFromCallerClass();
      #    this.validateProjectName(szProjectNamePrefix.valueStr(), szProjectName.valueStr());
      #}
    ENDSOURCE
    SOURCE #initFromCallerClass
      #void initFromCallerClass()
      #{
      #    ;
      #    [#FormControlValues] = axCreateNewProject.parmFormControlValues();
      #
      #    szProjectNamePrefix.text(projectPrefix);
      #    cbProjectType.selection(projectType);
      #    szProjectName.text(projectName);
      #    usePrefix.value(usePrefixValue);
      #    szProjectNamePrefix.enabled(usePrefixValue);
      #
      #    element.setCaptionText();
      #
      #    if (updateExistingProject && !warnAboutNameDuplicates)
      #    {
      #        projectPrefixOrig = projectPrefix;
      #        projectNameOrig = projectName;
      #        projectTypeOrig = projectType;
      #        usePrefixOrig   = usePrefixValue;
      #    }
      #
      #    if (projectPrefix != "")
      #    {
      #        usePrefix.value(true);
      #        szProjectNamePrefix.enabled(true);
      #    }
      #
      #    this.initImageLists();
      #    this.fillTree();
      #}
    ENDSOURCE
    SOURCE #initImageLists
      #void initImageLists()
      #{
      #    int i;
      #    int img;
      #    str dummy;
      #    ;
      #
      #    imageListSmallAOT       = new ImageListAppl_Aot();
      #    imageListAppl_checkbox  = new ImageListAppl_checkbox();
      #
      #    if (updateExistingProject && !warnAboutNameDuplicates)
      #    {
      #        imageListSmallAOT.build();
      #        objectTypeName = new Map(Types::Integer, Types::Container);
      #    }
      #    else
      #    {
      #        imageListSmallAOT.add(#ImageProject);
      #        for(i = 1; i <= conLen(this.pathes()); i++)
      #        {
      #            [dummy, img] = conPeek(this.pathes(), i);
      #            imageListSmallAOT.add(img);
      #        }
      #    }
      #    dummy = dummy; //BP Deviation Fix
      #    treeSettings.setImagelist(imageListSmallAOT.imageList());
      #    treeSettings.setStateImagelist(imageListAppl_checkbox.imageList());
      #}
    ENDSOURCE
    SOURCE #pathes
      #container pathes()
      #{
      #    ;
      #    if (!aotPathes)
      #    {
      #        aotPathes =
      #        [
      #            [#DataDictionaryPath,       #imageDataDictionary],
      #            [#TablesPath,               #imageTables],
      #            [#TableMapsPath,            #imageTableMaps],
      #            [#ViewsPath,                #ImageViews],
      #            [#ExtendedDataTypesPath,    #imageEDTs],
      #            [#BaseEnumsPath,            #imageBaseEnums],
      #            [#DataDictionaryPath,       #imageDataDictionary],
      #            [#LicenseCodesPath,         #ImageLicenseCodes],
      #            [#ConfigurationKeysPath,    #ImageConfigurationKeys],
      #            [#TableCollectionsPath,     #ImageTableCollections],
      #            [#PerspectivesPath,         #ImagePerspectiveList],
      #            [#MacrosPath,               #imageMacros],
      #            [#ClassesPath,              #imageClasses],
      #            [#FormsPath,                #imageForms],
      #
      #            [#PartsPath,                #imageParts],
      #            [#InfoPartsPath,            #imageInfoParts],
      #            [#FormPartsPath,            #imageFormParts],
      #            [#CuesPath,                 #imageCues],
      #            [#CueGroupsPath,            #imageCueGroups],
      #
      #            [#SSRSReportsRootPath,      #imageReports],
      #            [#SSRSReportsPath,          #imageReports],
      #
      #            [#VSProjectsPath,           #imageVSProjects],
      #            [#VSProjectsAXModelPath,    #imageVSProjectType],
      #            [#VSProjectsCSharpPath,     #imageVSProjectType],
      #            [#VSProjectsAnalysisPath,   #imageVSProjectType],
      #
      #            [#QueriesPath,              #imageQueries],
      #            [#JobsPath,                 #imageJobs],
      #            [#MenusPath,                #imageMenus],
      #            [#MenuItemsPath,            #imageMenuItems],
      #            [#MenuItemsDisplayPath,     #ImageMenuDisplayItems],
      #            [#MenuItemsOutputPath,      #imageMenuOutputItems],
      #            [#MenuItemsActionPath,      #imageMenuActionItems],
      #
      #            [#ServicesPath,             #ImageAifServices],
      #            [#ServiceGroupsPath,        #ImageAifServices],
      #
      #            [#WorkflowPath,             #imageWorkflow],
      #            [#WorkflowCategoriesPath,   #imageWorkflowCategoryList],
      #            [#WorkflowApprovalTasksPath,#imageWorkflowApprovalTaskList],
      #            [#WorkflowTasksPath,        #imageWorkflowTaskList],
      #            [#WorkflowAutomatedTasksPath,#imageWorkflowAutomatedTaskList],
      #            [#WorkflowTypesPath,        #imageWorkflowTemplateList],
      #            [#WorkflowProvidersPath,    #imageWorkflowProviderList],
      #
      #            [#SecurityPath,             #imageSecurity],
      #            [#SecCodePermissionsPath,   #imageSecurityCodePermissions],
      #            [#SecPrivilegesPath,        #imageSecurityKeys],
      #            [#SecDutiesPath,            #imageSecurityDuties],
      #            [#SecRolesPath,             #imageSecurityRoles],
      #            [#SecProcessCyclesPath,     #imageSecurityProcessCycles],
      #            [#SecPoliciesPath,          #imageSecurityPolicies]
      #        ];
      #    }
      #    return aotPathes;
      #}
    ENDSOURCE
    SOURCE #readSelectedNodes
      #container readSelectedNodes(container _selectedNodes, int _item)
      #{
      #    FormTreeItem    formTreeItem;
      #    container       conSelected = _selectedNodes;
      #    container       conObjects;
      #    int             nItem;
      #    int             nIndex;
      #    ;
      #    nItem = treeSettings.getChild(_item);
      #    while (nItem)
      #    {
      #        formTreeItem = treeSettings.getItem(nItem);
      #        if (typeOf(formTreeItem.data()) == Types::String)
      #            conSelected += [element.getNodeStateValue(nItem)];
      #        else if (formTreeItem.stateImage() == imageListAppl_checkbox.image(#ImageCheckAll))
      #        {
      #            nIndex = conLen(conSelected);
      #            if (objectTypeName.exists(nIndex))
      #                conObjects = objectTypeName.lookup(nIndex);
      #            conObjects += formTreeItem.text();
      #            conObjects += formTreeItem.data();
      #
      #            objectTypeName.insert(nIndex, conObjects);
      #        }
      #        if (treeSettings.getChild(nItem))
      #            conSelected = element.readSelectedNodes(conSelected, nItem);
      #
      #        nItem = treeSettings.getNextSibling(nItem);
      #    }
      #    return conSelected;
      #}
    ENDSOURCE
    SOURCE #runBase
      #RunBase runBase()
      #{
      #    return axCreateNewProject;
      #}
      #
    ENDSOURCE
    SOURCE #sendDataToClass
      #void sendDataToClass()
      #{
      #    ;
      #    selectedProjectNodes = element.readSelectedNodes(conNull(), treeSettings.getRoot());
      #
      #    projectType          = cbProjectType.selection();
      #    projectName          = szProjectName.valueStr();
      #    projectPrefix        = szProjectNamePrefix.valueStr();
      #    usePrefixValue       = usePrefix.value();
      #
      #    axCreateNewProject.parmFormControlValues([#FormControlValues]);
      #
      #    if (updateExistingProject && warnAboutNameDuplicates && objectTypeName.elements() > 0)
      #    {
      #        axCreateNewProject.setObjectTypeName(objectTypeName.pack());
      #    }
      #}
    ENDSOURCE
    SOURCE #setCaptionText
      #void setCaptionText()
      #{
      #    ;
      #    if (warnAboutNameDuplicates)
      #    {
      #        if (cbProjectType.selection() == ProjectSharedPrivate::ProjPrivate)
      #            element.design().caption(@"Create a new Private project");
      #        else
      #            element.design().caption(@"Create a new Shared project");
      #    }
      #    else
      #    {
      #        element.design().caption(@"Update an existing project");
      #    }
      #}
    ENDSOURCE
    SOURCE #validateProjectName
      #void validateProjectName(str _projectPrefix, str _projectName)
      #{
      #    str             validateName;
      #    FormTreeItem    rootNode;
      #    ;
      #    if (usePrefix.value())
      #        validateName = axCreateNewProject.convertProjectPrefix(_projectPrefix);
      #    validateName += _projectName;
      #
      #    if ((maxNameLen < strLen(validateName)) ||
      #        (!TreeNode::isValidObjectName(validateName)))
      #    {
      #        projectNameValid.imageResource(1031);
      #    }
      #    else
      #    {
      #        if (warnAboutNameDuplicates &&
      #            ((cbProjectType.selection() == ProjectSharedPrivate::ProjShared && SysTreeNode::getSharedProject().AOTfindChild(validateName)) ||
      #            (cbProjectType.selection() == ProjectSharedPrivate::ProjPrivate && SysTreeNode::getPrivateProject().AOTfindChild(validateName))))
      #        {
      #            projectNameValid.imageResource(1031);
      #        }
      #        else
      #        {
      #            projectNameValid.imageResource(1030);
      #        }
      #    }
      #    rootNode = treeSettings.getItem(treeSettings.getRoot());
      #    rootNode.text(validateName);
      #    treeSettings.setItem(rootNode);
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Width               #Column width
      Height              #Column height
      Caption             #Create a new Shared/Private Project
      Frame               #Dialog
      WindowType          #Popup
      HideToolbar         #Yes
      BackgroundColor     #Button face (3D)
      Columns             #2
      ArrangeGuide        
        ARRAY INDEX Columns 
          #0
          #0
        ENDARRAY
      AllowUserSetup      #Restricted
    ENDPROPERTIES
    
    CONTAINER
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #BottomButtonGrp
          Left                #Auto (right)
          ElementPosition     #1431655764
          HierarchyParent     #BottomGrp
          SizeWidth           #No
          BackStyle           #Opaque
          ArrangeMethod       #Horizontal, flush right
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #RightButtonGrp
          ElementPosition     #1789569705
          HierarchyParent     #TabPage
          BackStyle           #Opaque
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #BottomGrp
          Top                 #Bottom edge
          Width               #Column width
          ElementPosition     #1431655764
          FrameType           #Edged 3D Line
          BackStyle           #Opaque
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #dialogStartGrp
          Visible             #No
          ElementPosition     #715827882
          HierarchyParent     #TabPage
          FrameType           #None
          BackStyle           #Opaque
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ProjectNameGrp
          ElementPosition     #1073741823
          HierarchyParent     #TabPage
          FrameType           #None
          BackStyle           #Opaque
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
          AlignChildren       #No
          AlignChild          #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ProjectNamePrefix
          ElementPosition     #1073741822
          HierarchyParent     #ProjectTypePrefixGrp
          FrameType           #None
          BackStyle           #Opaque
          Columns             #2
          Columnspace         #0
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
          AlignChildren       #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ProjectTypePrefixGrp
          ElementPosition     #1073741822
          HierarchyParent     #SettingsMainGrp
          FrameType           #None
          BackStyle           #Opaque
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
          AlignChild          #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #SettingsGrp
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612733
          HierarchyParent     #SettingsMainGrp
          FrameType           #None
          BackStyle           #Opaque
          AlignChild          #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #SettingsMainGrp
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          Skip                #Yes
          ElementPosition     #1431655764
          HierarchyParent     #TabPage
          FrameType           #Edged 3D Line
          Caption             #Project Settings
          BackStyle           #Opaque
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #Tab
          Width               #Column width
          Height              #Column height
          ElementPosition     #715827882
          BackgroundColor     #Button face (3D)
          BackStyle           #Opaque
          ShowTabs            #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabPage
          ElementPosition     #1431655764
          HierarchyParent     #Tab
          BackgroundColor     #Button face (3D)
          BackStyle           #Opaque
          Caption             #@SYS2952
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #ButtonCopyProjectObjects
          AutoDeclaration     #Yes
          Enabled             #No
          HelpText            #Copy objects from the selected Project
          ElementPosition     #858993458
          HierarchyParent     #BottomButtonGrp
          Text                #Copy Objects
          ShowShortCut        #No
          BackStyle           #Opaque
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #
            #    element.addProjectObjects2Tree();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #UsePrefix
          AutoDeclaration     #Yes
          Skip                #Yes
          ElementPosition     #1073741822
          HierarchyParent     #ProjectNamePrefix
          Value               #1
          BackStyle           #Opaque
          LabelForegroundColor #Window text
          ShowLabel           #No
          LabelAlignment      #Right
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    szProjectNamePrefix.enabled(this.value());
            #
            #    if (updateExistingProject && !warnAboutNameDuplicates)
            #    {
            #        warnAboutNameDuplicates = NoYes::Yes;
            #        buttonCopyProjectObjects.enabled(NoYes::Yes);
            #    }
            #    element.setCaptionText();
            #
            #    element.validateProjectName(szProjectNamePrefix.valueStr(), szProjectName.valueStr());
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #cbProjectType
          AutoDeclaration     #Yes
          HelpText            #Create a shared or a private project?
          ElementPosition     #1610612733
          HierarchyParent     #ProjectTypePrefixGrp
          Text                
            ARRAY INDEX Items 
              #Shared
              #Private
            ENDARRAY
          Item                #1
          Items               #2
          BackStyle           #Opaque
          LabelForegroundColor #Window text
          Label               #Project type
          LabelAlignment      #Right
        ENDPROPERTIES
        
        METHODS
          SOURCE #selectionChange
            #public int selectionChange()
            #{
            #    int ret;
            #
            #    ret = super();
            #
            #    if (updateExistingProject && !warnAboutNameDuplicates)
            #    {
            #        warnAboutNameDuplicates = NoYes::Yes;
            #        buttonCopyProjectObjects.enabled(NoYes::Yes);
            #    }
            #    element.setCaptionText();
            #
            #    element.validateProjectName(szProjectNamePrefix.valueStr(), szProjectName.valueStr());
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #CommandButtonCancel
          ElementPosition     #1717986916
          HierarchyParent     #BottomButtonGrp
          ShowShortCut        #No
          BackStyle           #Opaque
          Command             #264
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #CommandButtonOK
          ElementPosition     #1288490187
          HierarchyParent     #BottomButtonGrp
          ShowShortCut        #No
          DefaultButton       #Yes
          BackStyle           #Opaque
          Command             #263
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #szProjectName
          AutoDeclaration     #Yes
          Width               #150
          ElementPosition     #1073741822
          HierarchyParent     #ProjectNameGrp
          BackStyle           #Opaque
          LabelForegroundColor #Window text
          Label               #Project name
          LabelAlignment      #Right
          ExtendedDataType    
            ARRAY 
              #TreeNodeName
              #
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
          SOURCE #textChange
            #public void textChange()
            #{
            #    super();
            #
            #    if (updateExistingProject && !warnAboutNameDuplicates)
            #    {
            #        warnAboutNameDuplicates = NoYes::Yes;
            #        buttonCopyProjectObjects.enabled(NoYes::Yes);
            #    }
            #    element.setCaptionText();
            #
            #    element.validateProjectName(szProjectNamePrefix.valueStr(), szProjectName.valueStr());
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #szProjectNamePrefix
          AutoDeclaration     #Yes
          HelpText            #Input a prefix that will be automatically added to the name of the project
          ElementPosition     #1610612733
          HierarchyParent     #ProjectNamePrefix
          LimitText           #20
          DisplayLength       #10
          BackStyle           #Opaque
          LabelForegroundColor #Window text
          Label               #Prefix
          LabelAlignment      #Right
        ENDPROPERTIES
        
        METHODS
          SOURCE #textChange
            #public void textChange()
            #{
            #    super();
            #
            #    if (updateExistingProject && !warnAboutNameDuplicates)
            #    {
            #        warnAboutNameDuplicates = NoYes::Yes;
            #        buttonCopyProjectObjects.enabled(NoYes::Yes);
            #    }
            #    element.setCaptionText();
            #
            #    element.validateProjectName(szProjectNamePrefix.valueStr(), szProjectName.valueStr());
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TREE
        PROPERTIES
          Name                #TreeSettings
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #SettingsGrp
          LinesAtRoot         #No
          BackStyle           #Opaque
          Bold                #Normal
        ENDPROPERTIES
        
        METHODS
          SOURCE #mouseDblClick
            #public int mouseDblClick(int _x, int _y, int _button, boolean _ctrl, boolean _shift)
            #{
            #    #define.FOCUS_CHECKBOX(64)
            #    int             ret;
            #    int             idx;
            #    int             focus;
            #    FormTreeItem    formTreeItem;
            #    ;
            #    if (_shift || _ctrl || _button != 1)
            #        return 1;
            #
            #    ret = super(_x, _y, _button, _ctrl, _shift);
            #
            #    [idx, focus] = this.hitTest(_x, _y);
            #
            #    if (focus & #FOCUS_CHECKBOX && this.getItem(idx))
            #    {
            #        formTreeItem = this.getItem(idx);
            #
            #        SysFormTreeControl::changeStateImage_CheckBox(this, formTreeItem.idx());
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
          SOURCE #mouseDown
            #public int mouseDown(int _x, int _y, int _button, boolean _ctrl, boolean _shift)
            #{
            #    #define.FOCUS_CHECKBOX(64)
            #        #FormListControl
            #    int             ret;
            #    int             focus;
            #    TreeItemIdx     idx;
            #    FormTreeItem    formTreeItem;
            #    ;
            #    ret = super(_x, _y, _button, _ctrl, _shift);
            #
            #    [idx, focus] = this.hitTest(_x, _y);
            #
            #    if (focus & #FOCUS_CHECKBOX && this.getItem(idx))
            #    {
            #        formTreeItem = this.getItem(idx);
            #
            #        SysFormTreeControl::changeStateImage_CheckBox(this, formTreeItem.idx());
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL WINDOW
        PROPERTIES
          Name                #ProjectNameValid
          AutoDeclaration     #Yes
          Height              #Column height
          Skip                #Yes
          ElementPosition     #1610612733
          HierarchyParent     #ProjectNameGrp
          ImageResource       #1031
          Imagemode           #Size to fit
          BackStyle           #Transparent
          BackgroundColor     #Button face (3D)
          ForegroundColor     #Button text
          ShowLabel           #No
        ENDPROPERTIES
        
        METHODS
          SOURCE #toolTip
            #public str toolTip()
            #{
            #    str validateName;
            #    ;
            #    if (usePrefix.value())
            #    {
            #        validateName = axCreateNewProject.convertProjectPrefix(szProjectNamePrefix.valueStr());
            #        if (validateName && !TreeNode::isValidObjectName(validateName))
            #            return @"The Project prefix contains illegal characters";
            #    }
            #    validateName += szProjectName.valueStr();
            #
            #    if (maxNameLen < strLen(validateName))
            #        return @"The name of the project is too long";
            #
            #    if (warnAboutNameDuplicates &&
            #        ((cbProjectType.selection() == ProjectSharedPrivate::ProjShared && SysTreeNode::getSharedProject().AOTfindChild(validateName)) ||
            #        (cbProjectType.selection() == ProjectSharedPrivate::ProjPrivate && SysTreeNode::getPrivateProject().AOTfindChild(validateName))))
            #        return @"Project with such name already exists";
            #
            #    if (!TreeNode::isValidObjectName(validateName))
            #        return @"The name of the project contains illegal characters";
            #
            #    return @"The Project Name is valid";
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: CLS

; Microsoft Dynamics AX Class: DEV_CreateNewProject unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #DEV_CreateNewProject
    PROPERTIES
      Name                #DEV_CreateNewProject
      Extends             #RunBase
      Origin              #{F2F037EF-78CE-41D0-9617-5BB3B4A46BB7}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #/*
        #    <DEV_CreateNewProject date=2012-08-07 txt='Create a new Project or Update an existing one'>
        #    <Info>Modify based on version 2.0.1 of DEV_CreateNewProject by Ivan Kashperuk</Info>
        #    <Version>3.0.0</Version>
        #    Please feel free to contact me regarding the use of this project or to report a bug
        #    <Contacts>Name='Dominic Lee' Email='fattung@gmail.com'</Contacts>
        #    <OrigAuthor>Name='Ivan Kashperuk' Email='ivan.kashperuk@gmail.com'</OrigAuthor>
        #*/
        ##AOT
        #class dev_CreateNewProject extends RunBase
        #{
        #    ProjectSharedPrivate    projectType;
        #    TreeNodeName            projectPrefix;
        #    TreeNodeName            projectName;
        #    container               selectedProjectNodes;
        #    NoYes                   usePrefix;
        #    TreeNodeName            projectPrefixValue;
        #    NoYes                   warnAboutNameDuplicates;
        #    NoYes                   updateExistingProject;
        #    Map                     objectTypeName;
        #    container               currentListOld;
        #
        #    #define.ParamsCount(48)     // The number of project nodes
        #    #define.CurrentVersion(24)
        #
        #    #localmacro.CurrentList
        #        projectType,
        #        projectPrefix,
        #        projectName,
        #        selectedProjectNodes,
        #        usePrefix,
        #        warnAboutNameDuplicates,
        #        updateExistingProject
        #    #endmacro
        #}
      ENDSOURCE
      SOURCE #convertProjectPrefix
        ##define.datePrefix("%d")
        ##define.userPrefix("%u")
        #public TreeNodeName convertProjectPrefix(TreeNodeName _projectPrefix)
        #{
        #    TreeNodeName    projectPrefixNew;
        #    ;
        #    projectPrefixNew = strReplace(_projectPrefix, #datePrefix, date2str(systemDateGet(), 123, 2, 0, 2, 0, 4));
        #    projectPrefixNew = strReplace(projectPrefixNew, #userPrefix, curUserId());
        #
        #    return projectPrefixNew;
        #}
      ENDSOURCE
      SOURCE #dialog
        #public Object dialog()
        #{
        #    DialogRunbase       dialog = Dialog::newFormnameRunbase(formStr(DEV_CreateNewProjectDlg), this);
        #    TreeNode            treeNode;
        #    LastAotSelection    lastAotSelection;
        #    ;
        #
        #    //dialog = super(dialog);
        #
        #    warnAboutNameDuplicates = NoYes::Yes;
        #    updateExistingProject = NoYes::No;
        #
        #    if (WinAPI::isControlButtonDown())
        #    {
        #        lastAotSelection = new LastAotSelection();
        #        treeNode = lastAotSelection.first();
        #        if (treeNode && SysTreeNode::isProject(treeNode))
        #        {
        #            if (this.initFromAOTProject(treeNode))
        #            {
        #                warnAboutNameDuplicates = NoYes::No;
        #                updateExistingProject = NoYes::Yes;
        #            }
        #            else
        #                selectedProjectNodes = conNull();
        #        }
        #    }
        #
        #        /*
        #    if (!selectedProjectNodes || conLen(selectedProjectNodes) != #ParamsCount)
        #        this.initParmDefault();
        #        */
        #    return dialog;
        #}
      ENDSOURCE
      SOURCE #dialogMake
        #public Object dialogMake()
        #{
        #    Object ret;
        #
        #    ret = super();
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #initFromAOTProject
        #NoYes initFromAOTProject(TreeNode _project)
        #{
        #    ProjectNode     project = _project;
        #    TreeNodeName    projectPrefixNew;
        #    ProjectNode     dataDictNode;
        #    ProjectNode     menuItemNode;
        #    ProjectNode     vsProjectNode, workflowNode, securityNode, partsNode;
        #    int             totalMenuItems;
        #    int             totalMore;
        #    int             totalWorkflow, totalSec, totalParts, totalVSProject;
        #    ;
        #    if (!project)
        #        return checkFailed(@"The selected project could not be initialized. Default settings used");
        #
        #    //projectType = project.applObjectType() == UtilElementType::SharedProject ? ProjectSharedPrivate::ProjShared : ProjectSharedPrivate::ProjPrivate;
        #    projectType = project.AOTparent().AOTname() == "Private" ?
        #                  ProjectSharedPrivate::ProjPrivate : ProjectSharedPrivate::ProjShared;
        #    projectPrefixNew = this.convertProjectPrefix(projectPrefix);
        #    if (projectPrefixNew && subStr(project.treeNodeName(), 1, strLen(projectPrefixNew)) == projectPrefixNew)
        #    {
        #        usePrefix = NoYes::Yes;
        #        projectName = strDel(project.treeNodeName(), 1, strLen(projectPrefixNew));
        #    }
        #    else
        #    {
        #        usePrefix = NoYes::No;
        #        projectName = project.treeNodeName();
        #    }
        #
        #    selectedProjectNodes = conNull();
        #    project = project.loadForInspection();
        #
        #    dataDictNode = project.AOTfindChild(TreeNode::findNode(#DataDictionaryPath).treeNodeName());
        #    if (dataDictNode)
        #    {
        #        selectedProjectNodes += UnknownNoYes::Unknown; //Data Dictionary
        #        selectedProjectNodes += dataDictNode.AOTfindChild(TreeNode::findNode(#TablesPath).treeNodeName())               ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #        selectedProjectNodes += dataDictNode.AOTfindChild(TreeNode::findNode(#TableMapsPath).treeNodeName())            ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #        selectedProjectNodes += dataDictNode.AOTfindChild(TreeNode::findNode(#ViewsPath).treeNodeName())                ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #        selectedProjectNodes += dataDictNode.AOTfindChild(TreeNode::findNode(#ExtendedDataTypesPath).treeNodeName())    ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #        selectedProjectNodes += dataDictNode.AOTfindChild(TreeNode::findNode(#BaseEnumsPath).treeNodeName())            ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #
        #        selectedProjectNodes += UnknownNoYes::Unknown; //More...
        #        selectedProjectNodes += dataDictNode.AOTfindChild(TreeNode::findNode(#LicenseCodesPath).treeNodeName())         ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #        totalMore += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedProjectNodes += dataDictNode.AOTfindChild(TreeNode::findNode(#ConfigurationKeysPath).treeNodeName())    ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #        totalMore += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedProjectNodes += dataDictNode.AOTfindChild(TreeNode::findNode(#TableCollectionsPath).treeNodeName())     ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #        totalMore += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedProjectNodes += dataDictNode.AOTfindChild(TreeNode::findNode(#PerspectivesPath).treeNodeName())     ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #        totalMore += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #
        #        if (totalMore == 4) //All five were NoYes::No (value = 1)
        #            selectedProjectNodes = conPoke(selectedProjectNodes, 7, UnknownNoYes::No);
        #        if (totalMore == 8) //All five were NoYes::Yes (value = 2)
        #            selectedProjectNodes = conPoke(selectedProjectNodes, 7, UnknownNoYes::Yes);
        #
        #        if (!conFind(selectedProjectNodes, UnknownNoYes::No))
        #            selectedProjectNodes = conPoke(selectedProjectNodes, 1, UnknownNoYes::Yes);
        #        if (!conFind(selectedProjectNodes, UnknownNoYes::Yes))
        #            selectedProjectNodes = conPoke(selectedProjectNodes, 1, UnknownNoYes::No);
        #    }
        #    else
        #    {
        #        selectedProjectNodes = [UnknownNoYes::No, UnknownNoYes::No, UnknownNoYes::No, UnknownNoYes::No, UnknownNoYes::No,
        #                                UnknownNoYes::No, UnknownNoYes::No, UnknownNoYes::No, UnknownNoYes::No, UnknownNoYes::No, UnknownNoYes::No];
        #    }
        #
        #    selectedProjectNodes += project.AOTfindChild(TreeNode::findNode(#MacrosPath).treeNodeName())                        ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #    selectedProjectNodes += project.AOTfindChild(TreeNode::findNode(#ClassesPath).treeNodeName())                       ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #    selectedProjectNodes += project.AOTfindChild(TreeNode::findNode(#FormsPath).treeNodeName())                         ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #
        #    partsNode = project.AOTfindChild(TreeNode::findNode(#PartsPath).treeNodeName());
        #    if (partsNode)
        #    {
        #        selectedProjectNodes += UnknownNoYes::Unknown;  // Parts
        #        selectedProjectNodes += partsNode.AOTfindChild(TreeNode::findNode(#InfoPartsPath).treeNodeName())        ? UnknownNoYes::Yes : UnknownNoYes::No;
        #        totalParts += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedProjectNodes += partsNode.AOTfindChild(TreeNode::findNode(#FormPartsPath).treeNodeName()) ? UnknownNoYes::Yes : UnknownNoYes::No;
        #        totalParts += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedProjectNodes += partsNode.AOTfindChild(TreeNode::findNode(#CuesPath).treeNodeName())        ? UnknownNoYes::Yes : UnknownNoYes::No;
        #        totalParts += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedProjectNodes += partsNode.AOTfindChild(TreeNode::findNode(#CueGroupsPath).treeNodeName())    ? UnknownNoYes::Yes : UnknownNoYes::No;
        #        totalParts += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        if (totalParts == 4)
        #        {
        #            selectedProjectNodes = conPoke(selectedProjectNodes, 15, UnknownNoYes::No);
        #        }
        #        else if (totalParts == 8)
        #        {
        #            selectedProjectNodes = conPoke(selectedProjectNodes, 15, UnknownNoYes::Yes);
        #        }
        #    }
        #    else
        #    {
        #        selectedProjectNodes = conIns(selectedProjectNodes, 15, UnknownNoYes::No, UnknownNoYes::No, UnknownNoYes::No,
        #                                                                UnknownNoYes::No, UnknownNoYes::No);
        #    }
        #
        #    selectedProjectNodes += project.AOTfindChild(TreeNode::findNode(#SSRSReportsRootPath).treeNodeName())               ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #    selectedProjectNodes += project.AOTfindChild(TreeNode::findNode(#SSRSReportsPath).treeNodeName())                   ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #
        #    vsProjectNode = project.AOTfindChild(TreeNode::findNode(#VSProjectsPath).treeNodeName());
        #    if (vsProjectNode)
        #    {
        #        selectedProjectNodes += UnknownNoYes::Unknown;
        #        selectedProjectNodes += vsProjectNode.AOTfindChild(TreeNode::findNode(#VSProjectsAXModelPath).treeNodeName())     ? UnknownNoYes::Yes : UnknownNoYes::No;
        #        totalVSProject += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedProjectNodes += vsProjectNode.AOTfindChild(TreeNode::findNode(#VSProjectsCSharpPath).treeNodeName())      ? UnknownNoYes::Yes : UnknownNoYes::No;
        #        totalVSProject += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedPRojectNodes += vsProjectNode.AOTfindChild(TreeNode::findNode(#VSProjectsAnalysisPath).treeNodeName())    ? UnknownNoYes::Yes : UnknownNoYes::No;
        #        totalVSProject += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #
        #        if (totalVSProject == 3)
        #        {
        #            selectedProjectNodes = conPoke(selectedProjectNodes,22,UnknownNoYes::No);
        #        }
        #        else if (totalVSProject == 6)
        #        {
        #            selectedProjectNodes = conPoke(selectedProjectNodes,22,UnknownNoYes::Yes);
        #        }
        #    }
        #    else
        #    {
        #        selectedProjectNodes = conIns(selectedProjectNodes, 22, UnknownNoYes::No, UnknownNoYes::No, UnknownNoYes::No, UnknownNoYes::No);
        #    }
        #
        #    selectedProjectNodes += project.AOTfindChild(TreeNode::findNode(#QueriesPath).treeNodeName())                       ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #    selectedProjectNodes += project.AOTfindChild(TreeNode::findNode(#JobsPath).treeNodeName())                          ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #    selectedProjectNodes += project.AOTfindChild(TreeNode::findNode(#MenusPath).treeNodeName())                         ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #
        #    menuItemNode = project.AOTfindChild(TreeNode::findNode(#MenuItemsPath).treeNodeName());
        #    if (menuItemNode)
        #    {
        #        selectedProjectNodes += UnknownNoYes::Unknown;  // Menu Item
        #        selectedProjectNodes += menuItemNode.AOTfindChild(TreeNode::findNode(#MenuItemsDisplayPath).treeNodeName())     ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #        totalMenuItems += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedProjectNodes += menuItemNode.AOTfindChild(TreeNode::findNode(#MenuItemsOutputPath).treeNodeName())      ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #        totalMenuItems += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedProjectNodes += menuItemNode.AOTfindChild(TreeNode::findNode(#MenuItemsActionPath).treeNodeName())      ? UnknownNoYes::Yes :  UnknownNoYes::No;
        #        totalMenuItems += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        if (totalMenuItems == 3)
        #            selectedProjectNodes = conPoke(selectedProjectNodes, 29, UnknownNoYes::No);
        #        if (totalMenuItems == 6)
        #            selectedProjectNodes = conPoke(selectedProjectNodes, 29, UnknownNoYes::Yes);
        #    }
        #    else
        #    {
        #        selectedProjectNodes = conIns(selectedProjectNodes, 29, UnknownNoYes::No, UnknownNoYes::No, UnknownNoYes::No, UnknownNoYes::No);
        #    }
        #
        #    selectedProjectNodes += project.AOTfindChild(TreeNode::findNode(#ServicesPath).treeNodeName())              ? UnknownNoYes::Yes : UnknownNoYes::No;
        #    selectedProjectNodes += project.AOTfindChild(TreeNode::findNode(#ServiceGroupsPath).treeNodeName())         ? UnknownNoYes::Yes : UnknownNoYes::No;
        #
        #    workflowNode = project.AOTfindChild(TreeNode::findNode(#WorkflowPath).treeNodeName());
        #    if (workflowNode)
        #    {
        #        selectedProjectNodes += UnknownNoYes::Unknown;  // Workflow
        #        selectedProjectNodes += workflowNode.AOTfindChild(TreeNode::findNode(#WorkflowCategoriesPAth).treeNodeName())   ? UnknownNoYes::Yes : UnknownNoYes::No;
        #        totalWorkflow += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedProjectNodes += workflowNode.AOTfindChild(TreeNode::findNode(#WorkflowApprovalTasksPath).treeNodeName()) ? UnknownNoYes::Yes : UnknownNoYes::No;
        #        totalWorkflow += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedProjectNodes += workflowNode.AOTfindChild(TreeNode::findNode(#WorkflowTasksPath).treeNodeName())        ? UnknownNoYes::Yes : UnknownNoYes::No;
        #        totalWorkflow += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedProjectNodes += workflowNode.AOTfindChild(TreeNode::findNode(#WorkflowAutomatedTasksPath).treeNodeName()) ? UnknownNoYes::Yes : UnknownNoYes::No;
        #        totalWorkflow += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedProjectNodes += workflowNode.AOTfindChild(TreeNode::findNode(#WorkflowTypesPath).treeNodeName())        ? UnknownNoYes::Yes : UnknownNoYes::No;
        #        totalWorkflow += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedProjectNodes += workflowNode.AOTfindChild(TreeNode::findNode(#WorkflowProvidersPath).treeNodeName())    ? UnknownNoYes::Yes : UnknownNoYes::No;
        #        totalWorkflow += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        if (totalWorkflow == 6)
        #        {
        #            selectedProjectNodes = conPoke(selectedProjectNodes, 35, UnknownNoYes::No);
        #        }
        #        else if (totalWorkflow == 12)
        #        {
        #            selectedProjectNodes = conPoke(selectedProjectNodes, 35, UnknownNoYes::Yes);
        #        }
        #    }
        #    else
        #    {
        #        selectedProjectNodes = conIns(selectedProjectNodes, 35, UnknownNoYes::No, UnknownNoYes::No, UnknownNoYes::No,
        #                                                                UnknownNoYes::No, UnknownNoYes::No, UnknownNoYes::No, UnknownNoYes::No);
        #    }
        #
        #    securityNode = project.AOTfindChild(TreeNode::findNode(#SecurityPath).treeNodeName());
        #    if (securityNode)
        #    {
        #        selectedProjectNodes += UnknownNoYes::Unknown;  // Security
        #        selectedProjectNodes += securityNode.AOTfindChild(TreeNode::findNode(#SecCodePermissionsPath).treeNodeName())   ? UnknownNoYes::Yes : UnknownNoYes::No;
        #        totalSec += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedProjectNodes += securityNode.AOTfindChild(TreeNode::findNode(#SecPrivilegesPAth).treeNodeName()) ? UnknownNoYes::Yes : UnknownNoYes::No;
        #        totalSec += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedProjectNodes += securityNode.AOTfindChild(TreeNode::findNode(#SecDutiesPAth).treeNodeName())        ? UnknownNoYes::Yes : UnknownNoYes::No;
        #        totalSec += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedProjectNodes += securityNode.AOTfindChild(TreeNode::findNode(#SecRolesPath).treeNodeName()) ? UnknownNoYes::Yes : UnknownNoYes::No;
        #        totalSec += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedProjectNodes += securityNode.AOTfindChild(TreeNode::findNode(#SecPRocessCyclesPath).treeNodeName())        ? UnknownNoYes::Yes : UnknownNoYes::No;
        #        totalSec += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        selectedProjectNodes += securityNode.AOTfindChild(TreeNode::findNode(#SecPoliciesPath).treeNodeName())    ? UnknownNoYes::Yes : UnknownNoYes::No;
        #        totalSec += conPeek(selectedProjectNodes, conLen(selectedProjectNodes));
        #        if (totalSec == 6)
        #        {
        #            selectedProjectNodes = conPoke(selectedProjectNodes, 42, UnknownNoYes::No);
        #        }
        #        else if (totalSec == 12)
        #        {
        #            selectedProjectNodes = conPoke(selectedProjectNodes, 42, UnknownNoYes::Yes);
        #        }
        #    }
        #    else
        #    {
        #        selectedProjectNodes = conIns(selectedProjectNodes, 42, UnknownNoYes::No, UnknownNoYes::No, UnknownNoYes::No,
        #                                                                UnknownNoYes::No, UnknownNoYes::No, UnknownNoYes::No, UnknownNoYes::No);
        #    }
        #
        #
        #
        #
        #
        #    return NoYes::Yes;
        #}
      ENDSOURCE
      SOURCE #initParmDefault
        #public void initParmDefault()
        #{
        #    ;
        #    super();
        #
        #    if (projectPrefix == '')
        #    {
        #        projectType             = ProjectSharedPrivate::ProjShared;
        #        projectPrefix           = '';
        #    }
        #    projectName             = SysTreeNode::getSharedProject().newObjectName();
        #    selectedProjectNodes    = [
        #                                UnknownNoYes::Unknown,  //01 - Data Dictionary
        #                                UnknownNoYes::Yes,      //02 - Tables
        #                                UnknownNoYes::No,       //03 - Table Maps
        #                                UnknownNoYes::No,       //04 - Views
        #                                UnknownNoYes::Yes,      //05 - Extended Data Types
        #                                UnknownNoYes::Yes,      //06 - Base Enums
        #                                UnknownNoYes::No,       //07 - More...
        #                                UnknownNoYes::No,       //08 - License Codes
        #                                UnknownNoYes::No,       //09 - Configuration Keys
        #                                //UnknownNoYes::No,       //10 - Security Keys
        #                                UnknownNoYes::No,       //10 - Table Collections
        #                                UnknownNoYes::No,       //11 - Perspectives
        #                                UnknownNoYes::No,       //12 - Macros
        #                                UnknownNoYes::Yes,      //13 - Classes
        #                                UnknownNoYes::Yes,      //14 - Forms
        #                                UnknownNoYes::Unknown,  //15 - Parts
        #                                UnknownNoYes::Yes,      //16 - InfoParts
        #                                UnknownNoYes::Yes,      //17 - FormParts,
        #                                UnknownNoYes::No,       //18 - Cues,
        #                                UnknownNoYes::No,       //19 - Cue groups
        #                                UnknownNoYes::No,       //20 - SSRS Reports
        #                                UnknownNoYes::No,       //21 - Reports
        #                                UnknownNoYes::No,       //22 - Visual studio projects
        #                                UnknownNoYes::No,       //23 - Visual studio project types
        #                                UnknownNoYes::No,       //24 - Visual studio project types
        #                                UnknownNoYes::No,       //25 - Visual studio project types
        #                                UnknownNoYes::Yes,      //26 - Queries
        #                                UnknownNoYes::Yes,      //27 - Jobs
        #                                UnknownNoYes::Yes,      //28 - Menus
        #                                UnknownNoYes::Yes,      //29 - Menu Items
        #                                UnknownNoYes::Yes,      //30 - Display
        #                                UnknownNoYes::Yes,      //31 - Output
        #                                UnknownNoYes::Yes,      //32 - Action,
        #                                UnknownNoYes::No,       //33 - Service
        #                                UnknownNoYes::No,       //34 - Service Groups
        #                                UnknownNoYes::No,       //35 - Workflow
        #                                UnknownNoYes::No,       //36 - Workflow Categories
        #                                UnknownNoYes::No,       //37 - Workflow Approvals
        #                                UnknownNoYes::No,       //38 - Workflow Tasks
        #                                UnknownNoYes::No,       //39 - Workflow Automated tasks,
        #                                UnknownNoYes::No,       //40 - Workflow Types
        #                                UnknownNoYes::No,       //41 - Workflow providers
        #                                UnknownNoYes::Unknown,  //42 - Security
        #                                UnknownNoYes::No,       //43 - Sec Code permissions
        #                                UnknownNoYes::Yes,      //44 - Sec Privileges
        #                                UnknownNoYes::Yes,      //45 - Sec duties
        #                                UnknownNoYes::Yes,      //46 - Sec Roles
        #                                UnknownNoYes::No,       //47 - Sec Process cycles
        #                                UnknownNoYes::No        //48 - Policies
        #                              ];
        #
        #    usePrefix                 = NoYes::No;
        #    warnAboutNameDuplicates   = NoYes::Yes;
        #    updateExistingProject     = NoYes::No;
        #}
      ENDSOURCE
      SOURCE #pack
        #public container pack()
        #{
        #    if (updateExistingProject)
        #        return currentListOld;
        #    return [#CurrentVersion, #CurrentList];
        #}
      ENDSOURCE
      SOURCE #parmFormControlValues
        #container parmFormControlValues(container _values  = [#CurrentList])
        #{
        #    ;
        #    [#CurrentList] = _values;
        #
        #    projectPrefixValue = this.convertProjectPrefix(projectPrefix);
        #
        #    return [#CurrentList];
        #}
      ENDSOURCE
      SOURCE #run
        #public void run()
        #{
        #    ProjectNode         projNode;
        #    TreeNode            projNodeRoot;
        #    ProjectGroupNode    dataDictNode;
        #    ProjectGroupNode    menuItemsNode;
        #    ProjectGroupNode    ssrsReportRootNode, vsProjectNode, workflowNode, securityNode, partsNode;
        #    container           conObjects;
        #    int                 nIndex;
        #
        #    //Method creates a new Shared/Private project
        #    TreeNode createNewSharedPrivateProject()
        #    {
        #        ProjectNode      upgradeNode;
        #        TreeNode         treeNodeProject;
        #        str              projName;
        #        ;
        #
        #        if (projectType == ProjectSharedPrivate::ProjPrivate)
        #            treeNodeProject = SysTreeNode::getPrivateProject();
        #        else
        #            treeNodeProject = SysTreeNode::getSharedProject();
        #
        #        if (projectName)
        #            projName  = usePrefix ? projectPrefixValue + projectName : projectName;
        #        else
        #        {
        #            projName = treeNodeProject.newObjectName();
        #            warning(strFmt(@"The project was created with a default name: %1", projName));
        #        }
        #
        #        if (!treeNodeProject.AOTfindChild(projName))
        #            treeNodeProject.AOTadd(projName);
        #
        #        upgradeNode = treeNodeProject.AOTfindChild(projName);
        #
        #        return upgradeNode.getRunNode();
        #    }
        #    //Methods creates sub groups in the Project Node
        #    ProjectGroupNode createGroup(int _nIndex, str _nodeName, ProjectGroupNode parent)
        #    {
        #        TreeNodeName     projNodeName = SysTreeNode::pathName(_nodeName);
        #        TreeNodeName     origName;
        #        ProjectGroupNode child;
        #        GroupNodeType    groupNodeType;
        #        boolean          isGroupNode = false;
        #        ;
        #        #if.ReportLibrariesPath
        #        origName = projNodeName;
        #        projNodeName = strRem(projNodeName, ' ');
        #        #endif
        #        if (parent)
        #            child = parent.AOTfindChild(projNodeName);
        #        if (parent && !child)
        #        {
        #            //Create only selected project nodes
        #            if (conPeek(selectedProjectNodes, _nIndex) == UnknownNoYes::No)
        #                return child;
        #
        #            if (classIdGet(parent) != classNum(ProjectNode))
        #            {
        #                groupNodeType = parent.projectGroupType();
        #                parent.projectGroupType(GroupNodeType::All);
        #                isGroupNode = true;
        #            }
        #
        #            parent.AOTadd(projNodeName);
        #            child = parent.AOTfindChild(projNodeName);
        #
        #            // Add back the proper label to the node
        #            #if.ReportLibrariesPath
        #            child.name(origName);
        #            #endif
        #
        #            if (isGroupNode)
        #                parent.projectGroupType(groupNodeType);
        #        }
        #        if (child)
        #        {
        #            child.projectGroupType(SysTreeNode::path2ProjectGroupNodeType(_nodeName));
        #
        #            if (objectTypeName && objectTypeName.exists(_nIndex))
        #            {
        #                conObjects = objectTypeName.lookup(_nIndex);
        #                for (nIndex = 1; nIndex <= conLen(conObjects); nIndex += 2)
        #                {
        #                    if (!child.findGroupMember(conPeek(conObjects, nIndex), conPeek(conObjects, nIndex + 1), NoYes::No))
        #                        child.addUtilNode(conPeek(conObjects, nIndex + 1), conPeek(conObjects, nIndex));
        #                }
        #            }
        #        }
        #        return child;
        #    }
        #    ;
        #
        #    projNode      = createNewSharedPrivateProject();
        #    projNode.lockUpdate();
        #    projNodeRoot = projNode;
        #
        #    securityNode  = createGroup(42, #SecurityPath,          projNodeRoot);
        #                    createGroup(48, #SecPoliciesPath,       securityNode);
        #                    createGroup(47, #SecProcessCyclesPath,  securityNode);
        #                    createGroup(46, #SecRolesPath,          securityNode);
        #                    createGroup(45, #SecDutiesPath,         securityNode);
        #                    createGroup(44, #SecPrivilegesPath,     securityNode);
        #                    createGroup(43, #SecCodePermissionsPath,securityNode);
        #
        #    workflowNode  = createGroup(35, #WorkflowPath,          projNodeRoot);
        #                    createGroup(41, #WorkflowProvidersPath, workflowNode);
        #                    createGroup(40, #WorkflowTypesPath,     workflowNode);
        #                    createGroup(39, #WorkflowAutomatedTasksPath,    workflowNode);
        #                    createGroup(38, #WorkflowTasksPath,     workflowNode);
        #                    createGroup(37, #WorkflowApprovalTasksPath, workflowNode);
        #                    createGroup(36, #WorkflowCategoriesPath,workflowNode);
        #
        #                    createGroup(34, #ServiceGroupsPath,     projNodeRoot);
        #                    createGroup(33, #ServicesPath,           projNodeRoot);
        #
        #    menuItemsNode = createGroup(29, #MenuItemsPath,         projNodeRoot);
        #                    createGroup(32, #MenuItemsActionPath,   menuItemsNode);
        #                    createGroup(31, #MenuItemsOutputPath,   menuItemsNode);
        #                    createGroup(30, #MenuItemsDisplayPath,  menuItemsNode);
        #
        #                    createGroup(28, #MenusPath,             projNodeRoot);
        #                    createGroup(27, #JobsPath,              projNodeRoot);
        #                    createGroup(26, #QueriesPath,           projNodeRoot);
        #
        #    vsProjectNode = createGroup(22, #VSProjectsPath,        projNodeRoot);
        #                    createGroup(25, #VSProjectsAnalysisPath,vsProjectNode);
        #                    createGroup(24, #VSProjectsCSharpPath,  vsProjectNode);
        #                    createGroup(23, #VSProjectsAXModelPath, vsProjectNode);
        #
        #    ssrsReportRootNode = createGroup(20, #SSRSReportsRootPath, projNodeRoot);
        #                    createGroup(21, #SSRSReportsPath,       ssrsReportRootNode);
        #
        #    partsNode     = createGroup(15, #PartsPath,             projNodeRoot);
        #                    createGroup(19, #CueGroupsPath,         partsNode);
        #                    createGroup(18, #CuesPath,              partsNode);
        #                    createGroup(17, #FormPartsPath,         partsNode);
        #                    createGroup(16, #InfoPartsPath,         partsNode);
        #
        #                    //createGroup(16, #ReportsPath,           projNodeRoot);
        #                    createGroup(14, #FormsPath,             projNodeRoot);
        #                    createGroup(13, #ClassesPath,           projNodeRoot);
        #                    createGroup(12, #MacrosPath,            projNodeRoot);
        #    dataDictNode  = createGroup(01, #DataDictionaryPath,    projNodeRoot);
        #                    createGroup(11, #PerspectivesPath,      dataDictNode);
        #                    createGroup(10, #TableCollectionsPath,  dataDictNode);
        #                    createGroup(09, #ConfigurationKeysPath, dataDictNode);
        #                    createGroup(08, #LicenseCodesPath,      dataDictNode);
        #                    // 07 = More... = no need
        #                    createGroup(06, #BaseEnumsPath,         dataDictNode);
        #                    createGroup(05, #ExtendedDataTypesPath, dataDictNode);
        #                    createGroup(04, #ViewsPath,             dataDictNode);
        #                    createGroup(03, #TableMapsPath,         dataDictNode);
        #                    createGroup(02, #TablesPath,            dataDictNode);
        #
        #    projNode.AOTsave();
        #    projNode.unlockUpdate();
        #}
      ENDSOURCE
      SOURCE #setObjectTypeName
        #void setObjectTypeName(container _packedMap)
        #{
        #    ;
        #    objectTypeName = Map::create(_packedMap);
        #}
      ENDSOURCE
      SOURCE #unpack
        #public boolean unpack(container packedClass)
        #{
        #    Version version = RunBase::getVersion(packedClass);
        #
        #    switch (version)
        #    {
        #        case #CurrentVersion:
        #            [version, #CurrentList] = packedClass;
        #            currentListOld = packedClass;
        #            break;
        #        default:
        #            return false;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #validate
        #public boolean validate(Object calledFrom = null)
        #{
        #    boolean         ret;
        #    int             lenMax = new SysDictType(extendedTypeNum(TreeNodeName)).stringLen();
        #    TreeNodeName    projName;
        #    ;
        #
        #    ret = super(calledFrom);
        #
        #    if (ret && projectName)
        #    {
        #        projName = usePrefix ? projectPrefixValue + projectName : projectName;
        #
        #        if (strLen(projName) > lenMax)
        #            return checkFailed(strFmt(@"The name of the project is too long. Maximum length, including prefix is %1", lenMax));
        #
        #        if (!TreeNode::isValidObjectName(projName))
        #            return checkFailed(strFmt(@"The name of the project (%1) contains illegal characters", projName));
        #
        #        if (warnAboutNameDuplicates &&
        #            ((projectType == ProjectSharedPrivate::ProjShared && SysTreeNode::getSharedProject().AOTfindChild(projName)) ||
        #            (projectType == ProjectSharedPrivate::ProjPrivate && SysTreeNode::getPrivateProject().AOTfindChild(projName))))
        #        {
        #            if (Box::yesNo(strFmt(@"The name of the project you entered (%1) already exists.%2Do you want to update the existing project?", projName, '\n'),
        #                    DialogButton::No, @"Verify the name of the project") == DialogButton::No)
        #            {
        #                return checkFailed(@"Operation cancelled by user");
        #            }
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #construct
        #public static DEV_CreateNewProject construct()
        #{
        #    return new DEV_CreateNewProject();
        #}
        #
      ENDSOURCE
      SOURCE #main
        #static void main(Args _args)
        #{
        #    DEV_CreateNewProject   axCreateNewProject;
        #    ;
        #    axCreateNewProject = DEV_CreateNewProject::construct();
        #
        #    if (axCreateNewProject.prompt())
        #        axCreateNewProject.run();
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #DEV_ToolbarConfig
  PROPERTIES
    Name                #DEV_ToolbarConfig
    Origin              #{A63704C3-43E8-4C0E-9E5E-A835BFCD7E99}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #public class FormRun extends ObjectRun
      #{
      #    AddaxDevToolbarPlugin plugin;
      #}
    ENDSOURCE
    SOURCE #editCompileAll
      #public edit NoYesId editCompileAll(
      #    boolean _set,
      #    NoYesId _value
      #    )
      #{
      #    if (_set)
      #    {
      #        plugin.parmEnableCompileAll(_value);
      #    }
      #    return  plugin.parmEnableCompileAll();
      #}
    ENDSOURCE
    SOURCE #editFilePath
      #public edit FileNameSave editFilePath(
      #    boolean _set,
      #    FileNameSave _filePath
      #    )
      #{
      #    if (_set)
      #    {
      #        plugin.parmLogFilePath(_filePath);
      #    }
      #    return  plugin.parmLogFilePath();
      #}
    ENDSOURCE
    SOURCE #editGenCIL
      #public edit NoYesId editGenCIL(
      #    boolean _set,
      #    NoYesId _value
      #    )
      #{
      #    if (_set)
      #    {
      #        plugin.parmEnableCILGeneration(_value);
      #    }
      #    return  plugin.parmEnableCILGeneration();
      #}
    ENDSOURCE
    SOURCE #editSyncDB
      #public edit NoYesId editSyncDB(
      #    boolean _set,
      #    NoYesId _value
      #    )
      #{
      #    if (_set)
      #    {
      #        plugin.parmEnableDBSync(_value);
      #    }
      #    return  plugin.parmEnableDBSync();
      #}
    ENDSOURCE
    SOURCE #fileNameLookupFilename
      #str fileNameLookupFilename()
      #{
      #    Filename    filepath;
      #    Filename    filename;
      #    Filename    fileType;
      #
      #    [filepath, filename, fileType] = fileNameSplit(strLogFilePath.text());
      #
      #    return filename + fileType;
      #}
    ENDSOURCE
    SOURCE #fileNameLookupFilter
      #container fileNameLookupFilter()
      #{
      #    #File
      #    Filename    filepath;
      #    Filename    filename;
      #    Filename    fileExtention;
      #
      #
      #    [filepath, filename, fileExtention] = Global::fileNameSplit(strLogFilePath.text());
      #
      #    if (!fileExtention)
      #    {
      #        fileExtention = #txt;
      #    }
      #
      #    return [WinAPI::fileType(fileExtention),#AllFilesName+fileExtention, #AllFilesExt, #AllFilesType];
      #}
    ENDSOURCE
    SOURCE #fileNameLookupInitialPath
      #// AOSRunMode::client
      #str fileNameLookupInitialPath()
      #{
      #    #WinAPI
      #
      #    Filename    filepath;
      #    Filename    filename;
      #    Filename    fileType;
      #
      #    [filepath, filename, fileType] = Global::fileNameSplit(strLogFilePath.text());
      #    /*
      #    // Default path
      #    if (!filepath)
      #    {
      #        switch (defaultPath.selection())
      #        {
      #            case 0:
      #                // Full path to the Application Data folder for the current user.
      #                // Exists on Windows 2000, Windows NT, Microsoft Windows 98, and Microsoft Windows 95.
      #                filepath = WinAPI::getFolderPath(#CSIDL_AppData);
      #                break;
      #            case 1:
      #                // Full path to the file directory containing application data for All Users.
      #                // Exists on Windows 2000.
      #                filepath = WinAPI::getFolderPath(#CSIDL_Common_AppData);
      #                break;
      #            case 2:
      #                // File system directory that serves as a common repository for Internet cookies.
      #                // Exists on Windows 2000, Windows NT, Windows 98, and Windows 95.
      #                filepath = WinAPI::getFolderPath(#CSIDL_Cookies);
      #                break;
      #            case 3:
      #                // File system directory that serves as a common repository for Internet history items.
      #                // Exists on Windows 2000, Windows NT, Windows 98, and Windows 95.
      #                filepath = WinAPI::getFolderPath(#CSIDL_History);
      #                break;
      #            case 4:
      #                // File system directory that serves as a common repository for temporary Internet files.
      #                // Exists on Windows 2000, Windows NT, Windows 98, and Windows 95.
      #                filepath = WinAPI::getFolderPath(#CSIDL_Internet_cache);
      #                break;
      #            case 5:
      #                // Full path to the MyPictures folder.
      #                // Exists on Windows 2000, Windows NT, Windows 98, and Windows 95.
      #                filepath = WinAPI::getFolderPath(#CSIDL_MyPictures);
      #                break;
      #            case 6:
      #                // Full path to the Personal folder for the current user.
      #                // Exists on Windows 2000, Windows NT, Windows 98, and Windows 95.
      #                filepath = WinAPI::getFolderPath(#CSIDL_Personal);
      #                break;
      #            case 7:
      #                // System folder. A typical path is C:\WINNT\SYSTEM32
      #                // Exists on Windows 2000, Windows NT, Windows 98, and Windows 95.
      #                filepath = WinAPI::getFolderPath(#CSIDL_System);
      #                break;
      #            case 8:
      #                // Full path to the Windows folder for the current user.
      #                // Exists on Windows 2000, Windows NT, Windows 98, and Windows 95.
      #                filepath = WinAPI::getFolderPath(#CSIDL_Windows);
      #                break;
      #        }
      #    }
      #    */
      #    if (!filepath)
      #        filepath = WinAPI::getFolderPath(#CSIDL_Personal);
      #    return filepath;
      #}
    ENDSOURCE
    SOURCE #fileNameLookupTitle
      #// AOSRunMode::client
      #str fileNameLookupTitle()
      #{
      #    return  'Lookup Title: ' + strLogFilePath.label();
      #}
    ENDSOURCE
    SOURCE #init
      #public void init()
      #{
      #    AddaxPluginTable pluginTable = AddaxPluginTable::findClassName(classStr(AddaxDevToolbarPlugin));
      #
      #    super();
      #
      #    plugin = new AddaxDevToolbarPlugin();
      #
      #    if (pluginTable.RecId != 0 &&
      #        pluginTable.ConfigData != conNull())
      #    {
      #        plugin.DeserializeConfigData(pluginTable.ConfigData);
      #    }
      #}
    ENDSOURCE
    SOURCE #saveConfig
      #public void saveConfig()
      #{
      #    AddaxPluginTable pluginTable;
      #
      #    ttsBegin;
      #    pluginTable = AddaxPluginTable::findClassName(classStr(AddaxDevToolbarPlugin),true);
      #
      #    if (pluginTable.RecId != 0)
      #    {
      #        pluginTable.ConfigData = plugin.SerializeConfigData();
      #        pluginTable.update();
      #    }
      #    ttsCommit;
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Caption             #Development Toolbar configuration
      WindowType          #Popup
      HideToolbar         #Yes
      BackgroundColor     #Window background
    ENDPROPERTIES
    
    CONTAINER
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroup
          Left                #Auto (right)
          ElementPosition     #1073741822
          HierarchyParent     #DialogCommit
          Style               #DialogCommitContainer
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CompileAllConfig
          ElementPosition     #1431655764
          HierarchyParent     #Configurables
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Configurables
          ElementPosition     #1879048189
          HierarchyParent     #DialogContent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DialogCommit
          ElementPosition     #1431655764
          Style               #DialogCommit
          AlignChild          #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DialogContent
          ElementPosition     #715827882
          Style               #DialogContent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Footnote
          Visible             #No
          ElementPosition     #1610612734
          HierarchyParent     #DialogCommit
          FrameType           #Edged 3D Line
          Style               #MarginlessContainer
          TopMargin           #10
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #boolEnableCILGeneration
          AutoDeclaration     #Yes
          ElementPosition     #1789569705
          HierarchyParent     #CompileAllConfig
          Label               #Enable CIL Generation
          DataMethod          #editGenCIL
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #boolEnableCompileAll
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #CompileAllConfig
          Label               #Enable Compile All
          DataMethod          #editCompileAll
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #boolEnableDBSync
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #CompileAllConfig
          Label               #Enable DB Synchronize
          DataMethod          #editSyncDB
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #CancelButton
          ElementPosition     #1610612733
          HierarchyParent     #ButtonGroup
          Command             #264
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #OKButton
          ElementPosition     #1073741822
          HierarchyParent     #ButtonGroup
          DefaultButton       #Yes
          Command             #263
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #
            #    element.saveConfig();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STATICTEXT
        PROPERTIES
          Name                #MainInstruction
          ElementPosition     #1073741822
          HierarchyParent     #DialogContent
          Text                #Configure Development Toolbar behavior
          ForegroundColor     #Scroll bar
          FontSize            #13
          Style               #MainInstruction
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STATICTEXT
        PROPERTIES
          Name                #SupplementalInstruction
          Width               #Column width
          ElementPosition     #1476395005
          HierarchyParent     #DialogContent
          Text                #Configure the log file location and which options are included when Compile All is run
          DisplayLength       #80
          DisplayHeight       #2
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #strLogFilePath
          AutoDeclaration     #Yes
          ElementPosition     #715827882
          HierarchyParent     #CompileAllConfig
          DataMethod          #editFilePath
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: FTM

; Microsoft Dynamics AX MENUITEM : DEV_ToolbarConfig unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #DEV_ToolbarConfig
    Type: 1
    PROPERTIES
      Name                #DEV_ToolbarConfig
      Label               #Development Toolbar Configuration
      Object              #DEV_ToolbarConfig
      Origin              #{A1FC8A25-7FD1-4639-B7C8-C3F0423E3CB7}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: FTM

; Microsoft Dynamics AX MENUITEM : DEV_CompileAll unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #DEV_CompileAll
    Type: 3
    PROPERTIES
      Name                #DEV_CompileAll
      Label               #Compile all objects
      ObjectType          #Class
      Object              #DEv_Util
      Parameters          #CompileAll
      Origin              #{AFDEFD15-DE22-43D2-ACF1-BA1F777B7712}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: FTM

; Microsoft Dynamics AX MENUITEM : DEV_CreateNewProject unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #DEV_CreateNewProject
    Type: 3
    PROPERTIES
      Name                #DEV_CreateNewProject
      Label               #Create new project (hold Ctrl to edit/duplicate the selected project)
      HelpText            #Create a new project with selected project groups or Update an existing project
      ObjectType          #Class
      Object              #DEV_CreateNewProject
      RunOn               #Client
      SecurityKey         #SysDevelopment
      Origin              #{9D96B3BF-E5EC-4E47-BAAC-7E64AF9F27EF}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: FTM

; Microsoft Dynamics AX MENUITEM : DEV_FlushAll unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #DEV_FlushAll
    Type: 3
    PROPERTIES
      Name                #DEV_FlushAll
      Label               #Flush All (Server)
      HelpText            #Flush AOD, Data, Dictionary and Report Server
      ObjectType          #Class
      Object              #DEv_Util
      Parameters          #FlushAll
      Origin              #{AAEDD25C-1473-43E8-ADE5-E2E42BCDA9C1}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: FTM

; Microsoft Dynamics AX MENUITEM : DEV_FlushAllClient unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #DEV_FlushAllClient
    Type: 3
    PROPERTIES
      Name                #DEV_FlushAllClient
      Label               #Flush All
      HelpText            #Flush AOD, Data, Dictionary and Report Server
      ObjectType          #Class
      Object              #DEv_Util
      Parameters          #FlushAllClient
      Origin              #{F0406DF3-C70B-44DA-A4A3-31C0B98CD559}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: CLS

; Microsoft Dynamics AX Class: DEV_Logger unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #DEV_Logger
    PROPERTIES
      Name                #DEV_Logger
      Origin              #{B4ABB5F2-4DAD-4184-902D-764A35F7955B}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #class DEV_Logger
        #{
        #    Filename    fileName;
        #    CommaTextIo logFile;
        #    Map         startTimeMap;
        #}
      ENDSOURCE
      SOURCE #initLogFile
        #private void initLogFile()
        #{
        #    #File
        #    FileIOPermission    perm;
        #
        #    perm = new FileIOPermission(fileName, #io_write);
        #    perm.assert();
        #
        #    logFile = new CommaTextIo(fileName, #io_write);
        #
        #    CodeAccessPermission::revertAssert();
        #}
      ENDSOURCE
      SOURCE #logMessage
        #public void logMessage(str _message)
        #{
        #    utcDateTime     dateTime = DateTimeUtil::getSystemDateTime();
        #
        #    logFile.write(strFmt("%1: %2",
        #                         dateTime,
        #                         _message));
        #
        #    startTimeMap.insert(_message, dateTime);
        #}
      ENDSOURCE
      SOURCE #logProcessEnd
        #public void logProcessEnd(str _processName)
        #{
        #    utcDateTime dateTime = DateTimeUtil::getSystemDateTime();
        #    int64       secsPassed;
        #
        #    logFile.write(strFmt("%1: Process (%2) ends.",
        #                         datetime,
        #                         _processName));
        #
        #    if (startTimeMap.exists(_processName))
        #    {
        #        secsPassed = DateTimeUtil::getDifference(dateTime, startTimeMap.lookup(_processName));
        #        logFile.write(strFmt("%1 secs have passed since process started",secsPassed));
        #    }
        #
        #    logFile.write(" ");
        #}
      ENDSOURCE
      SOURCE #logProcessStart
        #public void logProcessStart(str _processName)
        #{
        #    utcDateTime     dateTime = DateTimeUtil::getSystemDateTime();
        #
        #    logFile.write(strFmt("%1: Process (%2) starts.",
        #                         dateTime,
        #                         _processName));
        #
        #    startTimeMap.insert(_processName, dateTime);
        #}
      ENDSOURCE
      SOURCE #new
        #protected void new()
        #{
        #    startTimeMap = new Map(Types::String, Types::UtcDateTime);
        #}
      ENDSOURCE
      SOURCE #parmFileName
        #public Filename parmFileName(Filename _fileName = fileName)
        #{
        #    fileName = _fileName;
        #
        #    return fileName;
        #}
      ENDSOURCE
      SOURCE #construct
        #public server static DEV_Logger construct(FileName _fileName)
        #{
        #    #FILE
        #    DEV_Logger logger = new DEV_Logger();
        #    Set permissionSet = new Set(Types::Class);
        #
        #    try
        #    {
        #        logger.parmFileName(_fileName);
        #        logger.initLogFile();
        #
        #        permissionSet.add(new FileIOPermission(_fileName,#IO_READ));
        #        CodeAccessPermission::assertMultiple(permissionSet);
        #        if (!WinAPIServer::fileExists(_fileName))
        #        {
        #            throw error("Log File not found.");
        #        }
        #        CodeAccessPermission::revertAssert();
        #    }
        #    catch (Exception::Error)
        #    {
        #        throw error("Log file cannot be created. Please check configuration.");
        #    }
        #
        #    return logger;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: DEV_Util unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #DEV_Util
    PROPERTIES
      Name                #DEV_Util
      Origin              #{862CE992-F0AB-45E3-8B88-79ABAE3B3F45}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #class DEV_Util
        #{
        #}
      ENDSOURCE
      SOURCE #CompileAll
        #public server static void CompileAll()
        #{
        #    AddaxPluginTable pluginTable = AddaxPluginTable::findClassName(classStr(AddaxDevToolbarPlugin));
        #    AddaxDevToolbarPlugin plugin = new AddaxDevToolbarPlugin();
        #    DEV_Logger logger;
        #
        #    plugin.DeserializeConfigData(pluginTable.ConfigData);
        #    logger = DEV_Logger::construct(plugin.parmLogFilePath());
        #
        #    try
        #    {
        #        if (plugin.parmEnableCompileAll())
        #        {
        #            logger.logProcessStart("CompileAll");
        #            SysCompileAll::flushClient();
        #            SysCompileAll::compile();
        #            logger.logProcessEnd("CompileAll");
        #        }
        #
        #        if (plugin.parmEnableDBSync())
        #        {
        #            logger.logProcessStart("Synchronize");
        #            If (SqlDataDictionary::synchronize())
        #            {
        #                logger.logMessage("DB Syncrhonize succeeded.");
        #            }
        #            else
        #            {
        #                logger.logMessage("DB Synchronize failed.");
        #            }
        #            logger.logProcessEnd("Synchronize");
        #        }
        #
        #        if (plugin.parmEnableCILGeneration())
        #        {
        #            logger.logProcessStart("Generate Full CIL");
        #            SysCompileIL::generateIL();
        #            logger.logProcessEnd("Generate Full CIL");
        #        }
        #    }
        #    catch (Exception::Error)
        #    {
        #        logger.logMessage("Error caught during compile/sync process");
        #        throw Exception::Error;
        #    }
        #}
      ENDSOURCE
      SOURCE #FlushAll
        #public server static void FlushAll()
        #{
        #    Args args;
        #
        #    SysFlushAOD::main(args);
        #    SysFlushData::main(args);
        #    SysFlushDictionary::main(args);
        #    SysFlushReportServer::main(args);
        #}
      ENDSOURCE
      SOURCE #FlushAllClient
        #public client static void FlushAllClient()
        #{
        #    Args args;
        #
        #    SysFlushAOD::main(args);
        #    SysFlushData::main(args);
        #    SysFlushDictionary::main(args);
        #    SysFlushReportServer::main(args);
        #}
      ENDSOURCE
      SOURCE #main
        #public static void main(Args args)
        #{
        #    str     parmMethod;
        #
        #    if (args == null)
        #    {
        #        throw error("Wrong use of DEV_Util");
        #    }
        #
        #    parmMethod = args.parm();
        #
        #    switch (parmMethod)
        #    {
        #        case "FlushAll": DEV_Util::FlushAll(); break;
        #        case "FlushAllClient": DEV_Util::FlushAllClient(); break;
        #        case "CompileAll": DEV_Util::CompileAll(); break;
        #        default: throw error(strFmt("Unknown method name (Class: DEV_Util, Method:%1)",parmMethod));
        #    }
        #
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: Info unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #Info
    PROPERTIES
      Name                #Info
      Extends             #xInfo
      Origin              #{2D04F004-0000-1000-496E-666F00000000}
      LegacyId            #61444
    ENDPROPERTIES
    
    METHODS
      SOURCE #workspaceWindowCreated
        #void workspaceWindowCreated(int _hWnd)
        #{
        #    SqlSystem   sqlSystem = new SqlSystem();
        #    LoginProperty   loginProperty = sqlSystem.createLoginProperty();
        #
        #    super(_hWnd);
        #
        #    // Put workspace window specific initialization here.
        #
        #    if (loginProperty)
        #    {
        #        WinAPI::setWindowText(_hWnd, strFmt("%1 - %2@%3 (%4)", WinAPI::getWindowText(_hWnd), loginProperty.getDatabase(),
        #                                            loginProperty.getServer(), this.currentAOLayer()));
        #    }
        #
        #    if (AddaxPluginTable::findClassName(classStr(AddaxDevToolbarPlugin)).Active &&
        #        WinAPI::isShiftButtonDown() &&
        #        isDeveloper())
        #    {
        #        // If shift button is pressed, open DEV_Toolbar form.
        #        TreeNode::findNode(@'\\Forms\\' + formStr(DEV_Toolbar)).AOTrun();
        #    }
        #
        #    // Update areas pages for Retail Essentials
        #    RetailSMB::UpdateAreaPages();
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: AddaxDevToolbarPlugin unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #AddaxDevToolbarPlugin
    PROPERTIES
      Name                #AddaxDevToolbarPlugin
      Extends             #AddaxPluginBase
      Origin              #{975EF3CD-8C4B-49AD-861C-05D714D04505}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #class AddaxDevToolbarPlugin extends AddaxPluginBase implements AddaxPlugable
        #{
        #    FileNameSave    logFilePath;
        #    NoYesId     enableCompileAll;
        #    NoYesId     enableDBSync;
        #    NoYesId     enableCILGeneration;
        #
        #    #localMacro.ConfigDataList
        #        logFilePath,
        #        enableCompileAll,
        #        enableDBSync,
        #        enableCILGeneration
        #    #endMacro
        #}
      ENDSOURCE
      SOURCE #configMenuFunction
        #public MenuFunction configMenuFunction()
        #{
        #    return new MenuFunction(menuitemDisplayStr(DEV_ToolbarConfig), MenuItemType::Display);
        #}
      ENDSOURCE
      SOURCE #description
        #public ClassDescription description()
        #{
        #    return "A Tabax successor to enable a tabbed development environment (http://axcoder.blogspot.hk/2012/02/devtoolbar-tabax-for-ax2012.html)" + "\n" +
        #           "Enabled when open development workspace using Ctrl-shift-W (or click the New Development Workspace with shift pressed)";
        #}
      ENDSOURCE
      SOURCE #DeserializeConfigData
        #public void DeserializeConfigData(container _configData)
        #{
        #    [#ConfigDataList] = _configData;
        #}
      ENDSOURCE
      SOURCE #name
        #public Name name()
        #{
        #    return "DEV Toolbar";
        #}
      ENDSOURCE
      SOURCE #parmEnableCILGeneration
        #public NoYesId parmEnableCILGeneration(NoYesId _enableCILGeneration = enableCILGeneration)
        #{
        #    enableCILGeneration = _enableCILGeneration;
        #
        #    return enableCILGeneration;
        #}
      ENDSOURCE
      SOURCE #parmEnableCompileAll
        #public NoYesId parmEnableCompileAll(NoYesId _enableCompileAll = enableCompileAll)
        #{
        #    enableCompileAll = _enableCompileAll;
        #
        #    return enableCompileAll;
        #}
      ENDSOURCE
      SOURCE #parmEnableDBSync
        #public NoYesId parmEnableDBSync(NoYesId _enableDBSync = enableDBSync)
        #{
        #    enableDBSync = _enableDBSync;
        #
        #    return enableDBSync;
        #}
      ENDSOURCE
      SOURCE #parmLogFilePath
        #public FileNameSave parmLogFilePath(FileNameSave _logFilePath = logFilePath)
        #{
        #    logFilePath = _logFilePath;
        #
        #    return logFilePath;
        #}
      ENDSOURCE
      SOURCE #SerializeConfigData
        #public container SerializeConfigData()
        #{
        #    return [#ConfigDataList];
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #DEV_Toolbar
  PROPERTIES
    Name                #DEV_Toolbar
    Origin              #{7EC4D81C-D775-43F0-8033-861FDD54A1B3}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #// This is Internal alpha - please email to for details MaximBel@microsoft.com
      #public class FormRun extends ObjectRun
      #{
      #    // CONSTANTS
      #    // ----------------------------------------------------------
      #    #define.extensionButtonPrefix('DEV_Toolbar_')
      #    #define.topmostFormTimeout(5) // sec
      #    #define.windowsScanTimeout(100) // msec
      #    // distance of cursor movement with pressed left button to begin drag and drop
      #    #define.TabDragAndDropDistance(1)
      #    // ----------------------------------------------------------
      #    #task
      #    #TreeNodeSysNodeType
      #
      #    // [hwnd] -> [Tab, TextBlock]
      #    Map tabs;
      #    int autosizes;
      #    container oldWindows;
      #    System.Windows.Controls.TabControl _ManagedHost_Control;
      #    boolean inSelectionChange;
      #    container titleMapping;
      #    real desiredheight;
      #    int  firstTicks;
      #    utcdatetime topmostFormTime;
      #    boolean topmostFormInsideAx;
      #    boolean inPause;
      #
      #    #aot #resappl
      #    #winApi
      #    #define.UserDLL('USER32')
      #    #define.KernelDLL('KERNEL32')
      #    #define.ShellDLL('SHELL32')
      #    #define.GDIDLL('GDI32')
      #    #define.editorSuffix('- Editor')
      #    System.Windows.ResourceDictionary resourceDictionary;
      #    ObjectIdent topmostFormRun;
      #    HWND        hwndTopmostFormRun;
      #    HWND        mdicLient;
      #    Filename    logFileName;
      #    // === drag and drop ===
      #    boolean isDragStarted;
      #    real  dragX;
      #    real  dragY;
      #    System.Object possibleDrag;
      #    #LOCALMACRO.FLAG_SQLTrace                    (1 << 8) #ENDMACRO
      #}
    ENDSOURCE
    SOURCE #addTab
      #Struct addTab(int _image, str _name, str _text, HWND _tag)
      #{
      #    System.Windows.Size                     size;
      #
      #    System.Windows.Controls.TabControl      tc;
      #    System.Windows.Controls.TabItem         tabItem;
      #    System.Windows.Controls.ItemCollection  items;
      #    System.Windows.Controls.Image           image = new System.Windows.Controls.Image();
      #    System.Windows.Controls.StackPanel      stackPanel = new System.Windows.Controls.StackPanel();
      #    System.Windows.Controls.TextBlock       block = new System.Windows.Controls.TextBlock();
      #    Image                                   i = new Image(_image);
      #    System.IntPtr                           iptr = new System.IntPtr(i.exportBitmap());
      #    System.Drawing.Bitmap                   drawingImage = System.Drawing.Image::FromHbitmap(iptr);
      #    Struct                                  ret = new Struct(Types::Class, 'tabItem', Types::Class, 'block');
      #    System.Drawing.Graphics                 g;
      #    System.Windows.Media.Imaging.BitmapImage gdi2wpf(System.Drawing.Bitmap _drawing)
      #    {
      #        System.IO.MemoryStream  ms = new System.IO.MemoryStream();
      #        System.IO.MemoryStream  ms2;
      #        real x;
      #        System.Windows.Media.Imaging.BitmapImage bImg = new System.Windows.Media.Imaging.BitmapImage();
      #        _drawing.MakeTransparent();
      #        _drawing.Save(ms, System.Drawing.Imaging.ImageFormat::get_Png());
      #        ms2 = new System.IO.MemoryStream(ms.ToArray());
      #        bImg.BeginInit();
      #        bImg.set_StreamSource(ms2);
      #        bImg.EndInit();
      #        return bimg;
      #    }
      #    image.set_Source(gdi2wpf(drawingImage));
      #    stackPanel.set_Orientation(System.Windows.Controls.Orientation::Horizontal);
      #    stackPanel.AddChild(image);
      #    block.AddText(_name);
      #    block.set_ToolTip(_text);
      #    stackPanel.AddChild(block);
      #
      #    tc = managedHost.control();
      #
      #    tabItem = new System.Windows.Controls.TabItem();
      #    tabItem.set_Header(stackPanel);
      #    tabItem.set_Tag(_tag);
      #    if (strEndsWith(_text, #editorSuffix) && resourceDictionary)
      #    {
      #        tabItem.set_Style(resourceDictionary.get_Item('EditorTabItem'));
      #    }
      #
      #    items = tc.get_Items();
      #    items.Add(tabItem);
      #    ret.value('tabItem', tabItem);
      #    ret.value('block', block);
      #    this.tabItem_attachDragAndDropHandlers(tabitem);
      #    tabItem.add_MouseUp(new ManagedEventHandler(this, 'onTabMouseUp'));
      #    desiredHeight = tc.get_ActualHeight();
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #addTabs
      #void addTabs(container _created)
      #{
      #    int i;
      #    Struct tab;
      #    HWND hwnd;
      #    str text;
      #    int image;
      #    str title;
      #    if (! tabs)
      #    {
      #        tabs = new Map(Types::Integer, Types::Class);
      #    }
      #
      #    for (i=1; i<=conLen(_created); i++)
      #    {
      #        [hwnd, text] = conPeek(_created, i);
      #        [title, image] = this.parseTitle(text);
      #        tab = this.addTab(image, title, text, hwnd);
      #        tabs.insert(hwnd, tab);
      #    }
      #}
    ENDSOURCE
    SOURCE #autosize
      #void autosize()
      #{
      #    System.Exception laste;
      #    int l,t,r,b;
      #    int tabh = 120;
      #    int w, h;
      #
      #    [l,t,r,b] = WinAPI::getWindowRect(this.hwnd());
      #    w = r-l;
      #    h = b-t;
      #    h = desiredheight * 3;
      #    WinAPI::setWindowPos(this.Hwnd(),0,0,
      #        w, 36 * 2, true,false,
      #              32 //#SWP_FRAMECHANGED
      #              +
      #              256 //#SWP_NOCOPYBITS
      #          );
      #}
    ENDSOURCE
    SOURCE #closeAfter
      #private void closeAfter(System.Windows.Controls.TabItem _tabItem)
      #{
      #    System.Windows.Controls.ItemCollection items = _ManagedHost_Control.get_Items();
      #    container hwnds;
      #    int i;
      #    int itemPos = items.IndexOf(_tabItem);
      #    System.Windows.Controls.TabItem localItem;
      #    HWND hwnd;
      #    int size = items.get_Count();
      #    for (i=itemPos + 1; i < size; i++)
      #    {
      #        localItem = items.get_Item(i);
      #        hwnd = localItem.get_Tag();
      #        hwnds += hwnd;
      #    }
      #    this.hwnds_close(hwnds);
      #}
    ENDSOURCE
    SOURCE #closeAllExcept
      #private void closeAllExcept(HWND _hwnd)
      #{
      #    #WinApi
      #    int i;
      #    container all = this.getWindows();
      #    HWND hwnd;
      #    for (i=1; i<=conLen(all); i++)
      #    {
      #        hwnd = conPeek(conPeek(all, i), 1);
      #        if (_hwnd != hwnd)
      #        {
      #             WinAPI::sendMessageEx(hwnd, #WM_CLOSE, 0, 0);
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #con2map
      #Map con2map(container _con)
      #{
      #    Map ret = new Map(Types::Integer, Types::String);
      #    int i;
      #    anytype key;
      #    anytype value;
      #    for (i=1; i<=conLen(_con); i++)
      #    {
      #        [key, value] = conPeek(_con, i);
      #        ret.insert(key, value);
      #    }
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #con2str
      #str con2str(container _con)
      #{
      #    str ret = '[';
      #    int i;
      #    for (i=1; i<=conLen(_con); i++)
      #    {
      #        if (i>1)
      #            ret += ', ';
      #        ret += element.toStr(conPeek(_con, i));
      #    }
      #    return ret + ']';
      #}
    ENDSOURCE
    SOURCE #copyPathes
      #void copyPathes(boolean _nameOnly = false)
      #{
      #    SysContextMenu context = this.sysContextMenu();
      #    TreeNode node = context.first();
      #    TextBuffer buf = new TextBuffer();
      #    str pathes;
      #    while (node)
      #    {
      #        if (pathes)
      #        {
      #            pathes += '\r\n';
      #        }
      #        pathes += _nameOnly ? node.treeNodeName() : node.treeNodePath();
      #        node = context.next();
      #    }
      #    buf.setText(pathes);
      #    buf.toClipboard();
      #}
    ENDSOURCE
    SOURCE #copyTitle
      #private void copyTitle(HWND _hwnd)
      #{
      #    TextBuffer buf = new TextBuffer();
      #    buf.appendText(WinAPI::getWindowText(_hwnd));
      #    buf.toClipboard();
      #}
    ENDSOURCE
    SOURCE #currentSQLTrace
      #public boolean currentSQLTrace(boolean _value=false)
      #{
      #    UserInfo userInfo;
      #    ttsbegin;
      #    userInfo.selectForUpdate(! prmisDefault(_value));
      #    select userInfo where userInfo.Id == curUserId();
      #    if (! prmisDefault(_value))
      #    {
      #        if (_value)
      #        {
      #            userInfo.DebugInfo = userInfo.DebugInfo | #FLAG_SQLTrace;
      #        }
      #        else
      #        {
      #            userInfo.DebugInfo = userInfo.DebugInfo ^ #FLAG_SQLTrace;
      #        }
      #        userInfo.doUpdate();
      #    }
      #    ttscommit;
      #    if (! prmisDefault(_value))
      #    {
      #        userInfo.reread();
      #        infolog.getUserSetup().setUserSetup(userInfo);
      #        ttsbegin;
      #        userInfo.selectForUpdate(true);
      #        userInfo.write();
      #        ttscommit;
      #    }
      #    return (userInfo.DebugInfo & #FLAG_SQLTrace) ? true : false;
      #
      #}
    ENDSOURCE
    SOURCE #currentTopMost
      #private HWND currentTopMost()
      #{
      #    if (oldWindows)
      #    {
      #        return conPeek(conPeek(oldWindows, 1), 1);
      #    }
      #    return 0;
      #}
    ENDSOURCE
    SOURCE #deleteTabs
      #private void deleteTabs(container _deleted)
      #{
      #    int i;
      #    Struct tab;
      #    HWND hwnd;
      #    str text;
      #    System.Windows.Controls.TabControl      tc = managedHost.control();
      #    System.Windows.Controls.ItemCollection  items = tc.get_Items();
      #    System.Windows.Controls.TabItem         tabItem;
      #
      #    for (i=1; i<=conLen(_deleted); i++)
      #    {
      #        [hwnd, text] = conPeek(_deleted, i);
      #        tab = tabs.lookup(hwnd);
      #        tabItem = tab.value('tabItem');
      #        inSelectionChange = true;
      #        items.Remove(tabItem);
      #        inSelectionChange = false;
      #        tabs.remove(hwnd);
      #    }
      #}
    ENDSOURCE
    SOURCE #dsContextMenu
      #SysContextMenu dsContextMenu()
      #{
      #    FormRun formRun = element.topmostFormRun();
      #    FormDataSource ds;
      #    SysContextMenu context;
      #    if (formRun)
      #    {
      #        ds = formRun.dataSource();
      #    }
      #    context = ds ? SysContextMenuTreeNode::newPath(#TablesPath + '\\' + tableId2name(ds.table())) :
      #                   element.sysContextMenu();
      #
      #    return context;
      #}
    ENDSOURCE
    SOURCE #dump
      #private void dump()
      #{
      #    System.Xml.XmlWriterSettings settings = new System.Xml.XmlWriterSettings();
      #    System.Text.StringBuilder    strBuild;
      #    System.Xml.XmlWriter xmlwrite;
      #    settings.set_Indent(true);
      #    settings.set_IndentChars('    ');
      #    settings.set_NewLineOnAttributes(true);
      #    strBuild = new System.Text.StringBuilder();
      #    xmlwrite = System.Xml.XmlWriter::Create(strbuild, settings);
      #    System.Windows.Markup.XamlWriter::Save(_ManagedHost_Control.get_Template(), xmlwrite);
      #    info(strBuild.ToString());
      #}
    ENDSOURCE
    SOURCE #enableLog
      #void enableLog(str _fileName)
      #{
      #    logFileName = _fileName;
      #}
    ENDSOURCE
    SOURCE #ensureIsShown
      #private void ensureIsShown(HWND _hwnd)
      #{
      #    if (element.winApi_isIconic(_hwnd) || element.winApi_isZoomed(_hwnd))
      #    {
      #        WinAPI::showWindow(_hwnd, #SW_RESTORE);
      #    }
      #}
    ENDSOURCE
    SOURCE #evalBuf
      #private boolean evalBuf(str _text)
      #{
      #    if (strStartsWith(_text, '?'))
      #    {
      #        this.runCode('ret = ' + subStr(_text, 2, strLen(_text)) + ';');
      #        return true;
      #    }
      #    return false;
      #}
    ENDSOURCE
    SOURCE #extensionButtonClicked
      #private void extensionButtonClicked(FormFunctionButtonControl _button)
      #{
      #    Args args = new Args();
      #    args.parmObject(this.sysContextMenu());
      #    _button.menufunction().run(args);
      #}
    ENDSOURCE
    SOURCE #fitWindow
      #private void fitWindow(HWND _hwnd)
      #{
      #    int x1, y1, x2, y2;
      #    [x1, y1, x2, y2] = this.winApi_GetClientRect(mdicLient);
      #    this.ensureIsShown(_hwnd);
      #    WinAPI::setWindowPos(_hwnd, 0, 0, x2-x1, y2-y1);
      #}
    ENDSOURCE
    SOURCE #get2TopmostWindows
      #private container get2TopmostWindows()
      #{
      #    HWND first, second;
      #    first = WinAPI::findWindowEx(mdicLient, 0, '','');
      #    if (first)
      #    {
      #        second = WinAPI::findWindowEx(mdicLient, first, '', '');
      #    }
      #    return [first, second];
      #}
    ENDSOURCE
    SOURCE #getCurrentEditorPath
      #str getCurrentEditorPath()
      #{
      #    str title = WinAPI::getWindowText(this.getCurrentHWND());
      #    return subStr(title, 1, strLen(title) - strLen(#editorSuffix));
      #}
    ENDSOURCE
    SOURCE #getCurrentHWND
      #HWND getCurrentHWND()
      #{
      #    HWND parent = WinAPI::getWindow(infolog.hWnd(), #GW_CHILD);
      #    return WinAPI::findWindowEx(parent, 0, '','');
      #}
    ENDSOURCE
    SOURCE #getMDIClientHWND
      #HWND getMDIClientHWND()
      #{
      #    #define.MDIClientClass('MDIClient')
      #    HWND parent = this.getWorkspaceHWND();
      #    HWND h;
      #    HWND first;
      #    HWND ret;
      #    for (h = WinAPI::findWindowEx(parent, 0, '',''); h && h != first; h = WinAPI::findWindowEx(parent, h, '', ''))
      #    {
      #        if (! first)
      #            first = h;
      #        if (this.WinAPI_getClassName(h)==#MDIClientClass)
      #        {
      #            ret = h;
      #            break;
      #        }
      #    }
      #    if (! ret)
      #        throw error("MDIClient !found");
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #getTabItemByHWND
      #private System.Windows.Controls.TabItem getTabItemByHWND(HWND _hwnd)
      #{
      #    Struct item = tabs.lookup(_hwnd);
      #    if (item)
      #        return item.value('tabItem');
      #    return null;
      #}
    ENDSOURCE
    SOURCE #getWindows
      #container getWindows()
      #{
      #    int h;
      #    int first;
      #    str text;
      #    int parent;
      #    #WinAPI
      #    container ret;
      #
      #    //parent = WinApi::getWindow(MDIClient, #GW_CHILD);
      #    parent = mdicLient;
      #    for (h = WinAPI::findWindowEx(parent, 0, '',''); h && h != first; h = WinAPI::findWindowEx(parent, h, '', ''))
      #    {
      #        if (! first)
      #            first = h;
      #        if (this.isWindowVisible(h))
      #        {
      #            text = WinAPI::getWindowText(h);
      #            ret += [[h, text]];
      #        }
      #    }
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #getWorkspaceHWND
      #public HWND getWorkspaceHWND()
      #{
      #    HWND hwnd = this.hWnd();
      #    while (hwnd && this.WinAPI_getClassName(hwnd) != 'AxMainFrame')
      #    {
      #        hwnd = this.WinAPI_getParent(hwnd);
      #    }
      #    return hwnd;
      #}
    ENDSOURCE
    SOURCE #handler
      #private ManagedEventHandler handler(str _name)
      #{
      #    return new ManagedEventHandler(this, _name);
      #}
    ENDSOURCE
    SOURCE #hwnd_close
      #private void hwnd_close(HWND _hwnd)
      #{
      #    WinAPI::sendMessageEx(_hwnd, #WM_CLOSE, 0, 0);
      #}
    ENDSOURCE
    SOURCE #hwnds_close
      #private void hwnds_close(container _hwnds)
      #{
      #    int i;
      #    for (i=1; i<=conLen(_hwnds); i++)
      #    {
      #        this.hwnd_close(conPeek(_hwnds, i));
      #    }
      #}
    ENDSOURCE
    SOURCE #inEditor
      #boolean inEditor()
      #{
      #    str title = WinAPI::getWindowText(this.getCurrentHWND());
      #
      #    return strEndsWith(title, #editorSuffix) && TreeNode::findNode(this.getCurrentEditorPath());
      #}
    ENDSOURCE
    SOURCE #init
      #public void init()
      #{
      #    System.Exception laste;
      #    try
      #    {
      #            super();
      #            mdicLient = this.getMDIClientHWND();
      #            this.initTitleMapping();
      #            _ManagedHost_Control = managedHost.control();
      #            _ManagedHost_Control.add_SelectionChanged(this.handler('ManagedHost_SelectionChanged'));
      #            _ManagedHost_Control.set_AllowDrop(true);
      #            this.tabControl_attachDragAndDropHandlers(_ManagedHost_Control);
      #            if (element.xamlResources())
      #            {
      #                this.loadTabTemplate();
      #            }
      #            _ManagedHost_Control.set_SelectedIndex(0);
      #            element.timeoutHandler();
      #            element.loadExtensionButtons();
      #            element.initSQLTrace();
      #
      #    }
      #    catch (Exception::CLRError)
      #    {
      #        laste = CLRInterop::getLastException();
      #        throw error(laste.ToString());
      #    }
      #
      #}
    ENDSOURCE
    SOURCE #initSQLTrace
      #void initSQLTrace()
      #{
      #    toggleSQLBut.normalImage(element.currentSQLTrace() ? '7699' : '7639');
      #}
    ENDSOURCE
    SOURCE #initTitleMapping
      #// [System.IO.File]::ReadAllText('c:\0\test.txt')  -replace '(?ims)case.*?#([^:]+):.*?imageRes\s+=\s+#([^;]+);.*?break;', '[#$1, #$2],'
      #private void initTitleMapping()
      #{
      #    titleMapping
      #        =[
      #        [#TablesPath, #ImageTables],
      #        [#TableMapsPath, #ImageTableMaps],
      #        [#ViewsPath, #ImageViews],
      #        [#ExtendedDataTypesPath, #ImageEDTs],
      #        [#BaseEnumsPath, #ImageBaseEnums],
      #        [#LicenseCodesPath, #ImageLicenseCodes],
      #        [#ConfigurationKeysPath, #ImageConfigurationKeys],
      #        [#SecurityKeysPath, #ImageSecurityKeys],
      #        [#TableCollectionsPath, #ImageTableCollections],
      #        [#PerspectivesPath, #ImagePerspectiveList],
      #        [#MacrosPath, #ImageMacros],
      #        [#DataDictionaryPath, #ImageDataDictionary],
      #        [#ClassesPath, #ImageClasses],
      #        [#FormsPath, #ImageForms],
      #        [#ReportsPath, #ImageReports],
      #        [#ReportTemplatesPath, #ImageReportTemplates],
      #        [#SectionTemplatesPath, #ImageSectionTemplates],
      #        [#QueriesPath, #ImageQueries],
      #        [#DataSetsPath, #ImageDataSets],
      #        [#JobsPath, #ImageJobs],
      #        [#MenusPath, #ImageMenus],
      #        [#MenuItemsPath, #ImageMenuItems],
      #        [#MenuItemsDisplayPath, #ImageMenuDisplayItems],
      #        [#MenuItemsOutputPath, #ImageMenuOutputItems],
      #        [#MenuItemsActionPath, #ImageMenuActionItems],
      #        [#ReferencesPath, #ImageReferences],
      #        [#ResourcesPath, #ImageResources],
      #        [#WebPath, #ImageWeb],
      #        [#WebFormsPath, #ImageWebForms],
      #        [#WebMenusPath, #ImageWebMenus],
      #        [#WebletItemsPath, #ImageMenuItems],
      #        [#WebMenuItemsUrlPath, #ImageMenuItems],
      #        [#WebMenuItemsActionPath, #ImageMenuItems],
      #        [#WebContentItemsDisplayPath, #ImageMenuItems],
      #        [#WebContentItemsOutputPath, #ImageMenuItems],
      #        [#WebContentItemsManagedPath, #ImageMenuItems],
      #        [#WebFilesPath, #ImageWebFiles],
      #        [#WebWebPartsPath, #ImageWebWebParts],
      #        //[#WebSiteDefinitionsPath, #ImageWebSiteDefinitions],
      #        //[#WebSiteTemplatesPath, #ImageWebSiteTemplates],
      #        [#WebPageDefinitionsPath, #ImageWebPageDefinitions],
      #        [#WebStaticFilesPath, #ImageWebStaticFiles],
      #        [#WebControlsPath, #ImageWebPageDefinitions],
      #        [#WebListsPath, #ImageWebPageDefinitions],
      #        [#WebModulesPath, #ImageWebModules],
      #        [#HelpFilesPath, #imageHelpFiles],
      #        [#WorkflowCategoriesPath, #ImageWorkflowCategoryList],
      #        [#WorkflowApprovalTasksPath, #ImageWorkflowApprovalTaskList],
      #        [#WorkflowTasksPath, #ImageWorkflowTaskList],
      #        [#WorkflowAutomatedTasksPath, #ImageWorkflowTaskList],
      #        [#WorkflowTypesPath, #ImageWorkflowTemplateList],
      #        [#WorkflowApprovalTasksPath, #ImageWorkflowApprovalTaskList],
      #        [#ServicesPath, #ImageAifServices],
      #        [#SecCodePermissionsPath, #ImageReportLibraries],
      #        //[#SecTasksPath, #ImageReportLibraries],
      #
      #        [#ReportLibrariesPath, #ImageReportLibraries],
      #
      #        [#SSRSReportsRootPath, #ImageReports],
      #        [#SSRSReportsPath, #ImageReports],
      #        [#ReportStyleTemplatesPath, #ImageSSRSReportStyleTemplates],
      #        [#DatasourcesPath, #ImageSSRSReportDatasource],
      #        [#ReportImagesPath, #ImageSSRSReportImages],
      #        [#LayoutTemplatesPath, #ImageSSRSReportLayoutTemplate],
      #        [#ListStyleTemplatesPath, #ImageSSRSReportListStyleTemplate],
      #        [#MatrixStyleTemplatesPath, #ImageSSRSReportMatrixStyleTemplate],
      #        [#TableStyleTemplatesPath, #ImageSSRSReportTableStyleTemplate],
      #        [#PieChartStyleTemplatesPath, #ImageSSRSReportPiechartStyleTemplate],
      #        [#XyChartStyleTemplatePath, #ImageSSRSReportXYChartStyleTemplate],
      #        [#DocSetsPath, #imageHelpFiles],
      #        ['Project ', #ImageProject],
      #        ['Test project ', #ImageSysTestProject]
      #        ];
      #}
    ENDSOURCE
    SOURCE #isWindowVisible
      #boolean isWindowVisible(int _handle)
      #{
      #    DLL         dll             = new DLL('USER32');
      #    DLLFunction isWindow        = new DLLFunction(dll, 'IsWindowVisible');
      #    int         dllRet;
      #
      #    isWindow.returns(ExtTypes::DWord);
      #    isWindow.arg(ExtTypes::DWord);
      #
      #    dllRet = isWindow.call(_handle);
      #
      #    if (dllRet)
      #        return true;
      #
      #    return false;
      #}
    ENDSOURCE
    SOURCE #justSomeMagicCode
      #private void justSomeMagicCode(System.Windows.Controls.TabItem _tabItem)
      #{
      #    int h = _tabItem.get_ActualHeight();
      #    h = _ManagedHost_Control.get_ActualHeight();
      #    element.design().heightValue(50);
      #}
    ENDSOURCE
    SOURCE #loadExtensionButton
      #void loadExtensionButton(str _resourceName)
      #{
      #    FormFunctionButtonControl button = extensionGroup.addControl(FormControlType::MenuFunctionButton, _resourceName);
      #    container types = [['Action', MenuItemType::Action],
      #                       ['Display', MenuItemType::Display],
      #                       ['Output', MenuItemType::Output]
      #                      ];
      #    void processResourceName()
      #    {
      #        str name = subStr(_resourceName, strLen(#extensionButtonPrefix) + 1, strLen(_resourceName));
      #        int i;
      #        MenuItemType type;
      #        str prefix;
      #        str itemName;
      #        for (i=1; i<=conLen(types); i++)
      #        {
      #            [prefix, type] = conPeek(types, i);
      #            prefix += '_';
      #            if (strStartsWith(name, prefix))
      #            {
      #                button.menuItemType(type);
      #                button.menuItemName(subStr(name, strLen(prefix)+1, strLen(name)));
      #            }
      #        }
      #    }
      #    processResourceName();
      #    button.buttonDisplay(FormButtonDisplay::ImageOnly);
      #    button.imageLocation(SysImageLocation::AOTResource);
      #    button.normalImage(_resourceName);
      #    button.border(FormButtonBorder::Flat);
      #    button.registerOverrideMethod(identifierStr(clicked), identifierStr(extensionButtonClicked), this);
      #
      #}
    ENDSOURCE
    SOURCE #loadExtensionButtons
      #void loadExtensionButtons()
      #{
      #    UtilElements ue;
      #    while select ue group by Name, RecordType
      #        where ue.RecordType == UtilElementType::Resource
      #              && ue.Name like #extensionButtonPrefix + '*'
      #    {
      #        this.loadExtensionButton(ue.Name);
      #    }
      #}
    ENDSOURCE
    SOURCE #loadTabTemplate
      #private void loadTabTemplate()
      #{
      #    System.IO.StringReader stringReader = new System.IO.StringReader(element.xamlResources());
      #    System.Xml.XmlReader r = System.Xml.XmlReader::Create(stringReader);
      #    System.Windows.ResourceDictionary resources = System.Windows.Markup.XamlReader::Load(r);
      #    System.Windows.Controls.ControlTemplate template = resources.get_Item("ScrollableTabControl");
      #    _ManagedHost_Control.set_Resources(resources);
      #    _ManagedHost_Control.set_Template(template);
      #    resourceDictionary = resources;
      #}
    ENDSOURCE
    SOURCE #log
      #void log(str _text)
      #{
      #    AsciiIo io;
      #    if (logFileName)
      #    {
      #        io =new AsciiIo(logFileName, 'a');
      #        io.writeRaw(
      #            strFmt('%1: $2\r\n',
      #                DateTimeUtil::toStr(
      #                    DateTimeUtil::getSystemDateTime()
      #                ),
      #                _text
      #            )
      #        );
      #        io = null;
      #    }
      #}
    ENDSOURCE
    SOURCE #makeFirst
      #private void makeFirst(System.Windows.Controls.TabItem _tabItem)
      #{
      #    System.Windows.Controls.ItemCollection items = _ManagedHost_Control.get_Items();
      #    items.Remove(_tabItem);
      #    items.Insert(0, _tabItem);
      #}
    ENDSOURCE
    SOURCE #ManagedHost_SelectionChanged
      #void ManagedHost_SelectionChanged(System.Object sender, System.Windows.Controls.SelectionChangedEventArgs e)
      #{
      #    /*
      #    System.Windows.Controls.TabControl      tc;
      #    System.Windows.Controls.TabItem         tabItem;
      #    HWND hwnd;
      #    if (! inSelectionChange)
      #    {
      #        inSelectionChange = true;
      #        tc = ManagedHost.control();
      #        tabItem = tc.get_SelectedItem();
      #        hwnd = tabItem.get_Tag();
      #        infolog.yield();
      #        inSelectionChange = false;
      #    }
      #    */
      #}
      #
    ENDSOURCE
    SOURCE #map2con
      #container map2con(Map _map)
      #{
      #    container ret;
      #    MapEnumerator i = _map.getEnumerator();
      #    while (i.moveNext())
      #    {
      #        ret += [[i.currentKey(), i.currentValue()]];
      #    }
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #mdiClient
      #public HWND mdiClient()
      #{
      #    return mdicLient;
      #}
    ENDSOURCE
    SOURCE #onTabMouseUp
      #void onTabMouseUp(System.Object _sender, System.Windows.Input.MouseButtonEventArgs _args)
      #{
      #    #WinApi
      #    System.Windows.Controls.TabItem tabItem = _sender  as System.Windows.Controls.TabItem;
      #    System.Windows.Input.MouseButton button = _args.get_ChangedButton();
      #    HWND hwnd;
      #    PopupMenu menu;
      #    int closeAllExcept;
      #    int copyTitle;
      #    int makeFirst;
      #    int fitWindow;
      #    int closeAfter;
      #    hwnd = tabItem.get_Tag();
      #    if (hwnd != this.currentTopMost() &&
      #        button != System.Windows.Input.MouseButton::Left)
      #    {
      #        hwnd = this.currentTopMost();
      #        tabItem = this.getTabItemByHWND(hwnd);
      #        this.setCurrent(hwnd);
      #    }
      #
      #    if (button == System.Windows.Input.MouseButton::Middle)
      #    {
      #        WinAPI::sendMessageEx(hwnd, #WM_CLOSE, 0, 0);
      #    }
      #    if (button == System.Windows.Input.MouseButton::Right)
      #    {
      #        menu = new PopupMenu(element.hWnd());
      #        closeAllExcept  = menu.insertItem("Close all except this");
      #        copyTitle       = menu.insertItem("Copy title");
      #        makeFirst       = menu.insertItem("Make tab first:");
      #        fitWindow       = menu.insertItem("Fit window");
      #        closeAfter      = menu.insertItem("Close after");
      #        switch (menu.draw())
      #        {
      #            case closeAllExcept:
      #                this.closeAllExcept(hwnd);
      #            break;
      #
      #            case copyTitle:
      #                this.copyTitle(hwnd);
      #            break;
      #
      #            case makeFirst:
      #                this.makeFirst(tabItem);
      #            break;
      #
      #            case fitWindow:
      #                this.fitWindow(hwnd);
      #            break;
      #
      #            case closeAfter:
      #                this.closeAfter(tabItem);
      #            break;
      #        }
      #        _args.set_Handled(true);
      #    }
      #    if (button == System.Windows.Input.MouseButton::Left)
      #    {
      #    //System.Windows.Controls.TabControl      tc;
      #    //System.Windows.Controls.TabItem         tabItem;
      #    //HWND hwnd;
      #        if (! inSelectionChange)
      #        {
      #            inSelectionChange = true;
      #            //tc = ManagedHost.control();
      #            //tabItem = tc.get_SelectedItem();
      #            //hwnd = tabItem.get_Tag();
      #            //infolog.yield();
      #            element.ensureIsShown(hwnd);
      #            infolog.activateWindow(hwnd);
      #            inSelectionChange = false;
      #        }
      #    }
      #}
      #
    ENDSOURCE
    SOURCE #openApplicationObject
      #void openApplicationObject()
      #{
      #    SysContextMenu  context = this.sysContextMenu();
      #    TreeNode        node = context.first();
      #    str             path;
      #    TreeNode        applObject;
      #    while (node)
      #    {
      #        path = node.treeNodePath();
      #        path = SysTreeNode::applObjectPath(path);
      #        applObject = TreeNode::findNode(path);
      #        if (applObject)
      #        {
      #            applObject.AOTnewWindow();
      #        }
      #        node = context.next();
      #    }
      #}
    ENDSOURCE
    SOURCE #openApplObject
      #boolean openApplObject(ClassName _name)
      #{
      #    Map list = new Map(Types::String, Types::String);
      #    UtilElements ue;
      #    str type;
      #    UtilElementType recordType;
      #    MapEnumerator e;
      #    ;
      #    while select RecordType from ue group by RecordType
      #        where ue.Name       == _name &&
      #              ue.ParentId   == 0
      #
      #    {
      #        list.insert(enum2str(ue.RecordType), enum2str(ue.RecordType));
      #    }
      #    if (list.elements())
      #    {
      #        if (list.elements() == 1)
      #        {
      #            e = list.getEnumerator();
      #            e.moveNext();
      #            type = e.currentKey();
      #        }
      #        else
      #        {
      #            type = pickList(list, "Type", "Select element type");
      #        }
      #
      #        if (type)
      #        {
      #            recordType = str2enum(UtilElementType::ActionTool, type);
      #            select firstonly ue
      #                where ue.Name       == _name &&
      #                      ue.RecordType == recordType &&
      #                      ue.ParentId   == 0;
      #            this.openTreeNodePath(xUtilElements::getNodePath(ue));
      #        }
      #        return true;
      #    }
      #    return false;
      #}
    ENDSOURCE
    SOURCE #openMethod
      #boolean openMethod(str _method)
      #{
      #    str type, method;
      #    str m = strLRTrim(_method);
      #    boolean ret;
      #    int i;
      #    container pathPatterns = [
      #        @'\Data Dictionary\Tables\%1\Methods\%2',
      #        @'\Data Dictionary\Maps\%1\Methods\%2',
      #        @'\Data Dictionary\Views\%1\Methods\%2',
      #        @'\Classes\%1\%2'
      #    ];
      #    if (this.regex_match(m, @'^\S+\.\S+$'))
      #    {
      #        [type, method] = str2con(m, '.', false);
      #        for (i=1; i<=conLen(pathPatterns) && ! ret; i++)
      #        {
      #            ret = this.openTreeNodePath(strFmt(conPeek(pathPatterns, i), type, method));
      #        }
      #    }
      #    return ret;
      #}
      #
    ENDSOURCE
    SOURCE #openStackTracePath
      #boolean openStackTracePath(str _path)
      #{
      #    str template = @'^\s*\[[sc]\]\s+(.*)\s+(\d+)\s*$';
      #    System.Text.RegularExpressions.Match m = System.Text.RegularExpressions.Regex::Match(_path, template);
      #    System.Text.RegularExpressions.GroupCollection gs;
      #    System.Text.RegularExpressions.Group g;
      #    str path;
      #    str lineAsTring;
      #    int line;
      #    if (m.get_Success())
      #    {
      #        gs = m.get_Groups();
      #        g = gs.get_Item(1);
      #        path = g.get_Value();
      #        g = gs.get_Item(2);
      #        lineAsTring = g.get_Value();
      #        line = str2int(lineAsTring);
      #        return this.openTreeNodePath(path, line);
      #    }
      #    return false;
      #}
    ENDSOURCE
    SOURCE #openTreeNodePath
      #boolean openTreeNodePath(str _path, int _line = 0)
      #{
      #    TreeNode node = TreeNode::findNode(_path);
      #    ProjectNode project;
      #    if (node)
      #    {
      #        if (SysTreeNode::hasSource(node) && !conFind([#NT_PROJECT_NODE], this.sysNodeType(node)) )
      #            node.AOTedit(_line);
      #        else
      #        {
      #            if (this.sysNodeType(node) == #NT_PROJECT_NODE)
      #            {
      #                project = node;
      #                project.getRunNode()
      #                       .AOTnewWindow();
      #            }
      #            else
      #                node.AOTnewWindow();
      #        }
      #    }
      #    return node ? true : false;
      #}
    ENDSOURCE
    SOURCE #parseTitle
      #container parseTitle(str _title)
      #{
      #    int i;
      #    str possibleStart;
      #    int image;
      #    str ret;
      #    str rightPart(str _s, int _start)
      #    {
      #        return subStr(_s, _start, strLen(_s) - _start + 1);
      #    }
      #    for (i = 1; i<=conLen(titleMapping); i++)
      #    {
      #        [possibleStart, image] = conPeek(titleMapping, i);
      #        if (strStartsWith(_title, possibleStart))
      #        {
      #            ret = rightPart(_title, strLen(possibleStart)+1);
      #            if (strStartsWith(ret, '\\'))
      #                ret = rightPart(ret, 2);
      #            return [ret, image];
      #        }
      #    }
      #    return [_title, #ImageAxapta];
      #}
    ENDSOURCE
    SOURCE #pauseScan
      #void pauseScan()
      #{
      #    inPause = true;
      #}
    ENDSOURCE
    SOURCE #processSearchText
      #boolean processSearchText()
      #{
      #    str value = searchText.text();
      #
      #
      #    return
      #        element.evalBuf(value) ||
      #        element.runBuf(value) ||
      #        this.openStackTracePath(value) ||
      #        this.openTreeNodePath(value) ||
      #        this.openMethod(value) ||
      #        this.openApplObject(value);
      #}
    ENDSOURCE
    SOURCE #processTopmostFormRun
      #private void processTopmostFormRun(HWND _topmost)
      #{
      #    FormRun activeFormRun;
      #    boolean isTopmostHWND(HWND _hwnd)
      #    {
      #        return _hwnd == WinAPI::getForegroundWindow() ||
      #               _hwnd == _topmost;
      #    }
      #    boolean topmostFormExpired()
      #    {
      #        return topmostFormInsideAx ||
      #               (DateTimeUtil::getSystemDateTime()  > DateTimeUtil::addSeconds(topmostFormTime, #topmostFormTimeout));
      #    }
      #;
      #    if (infolog.setLastActivatedForm())
      #    {
      #        activeFormRun=infolog.setLastActivatedForm().object();
      #    }
      #
      #    if (activeFormRun && isTopmostHWND(activeFormRun.hWnd()))
      #    {
      #        topmostFormRun =new ObjectIdent(activeFormRun);
      #        hwndTopmostFormRun = activeFormRun.hWnd();
      #        topmostFormTime = DateTimeUtil::getSystemDateTime();
      #        topmostFormInsideAx = hwndTopmostFormRun == _topmost;
      #        if (topmostFormInsideAx)
      #        {
      #            this.log('topmost inside AX');
      #        }
      #        this.log('topmost');
      #    }
      #    else
      #    {
      #        if (this.topmostFormRun() &&
      #            ! isTopmostHWND(hwndTopmostFormRun) &&
      #            topmostFormExpired()
      #            )
      #        {
      #            hwndTopmostFormRun = 0;
      #            topmostFormRun=null;
      #            this.log('topmost=0');
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #processWhereOverriden
      #void processWhereOverriden()
      #{
      #    SysContextMenu context = this.sysContextMenu();
      #    TreeNode node = context.first();
      #    str pathes;
      #    setPrefix('Where overriden');
      #
      #
      #    while (node)
      #    {
      #        if (match(@'<\\Classes\\.*\\.*>', node.treeNodePath()))
      #        {
      #            pathes += '\r\n' + this.whereOverriden(node.AOTparent().treeNodeName(), node.treeNodeName());
      #        }
      #        node = context.next();
      #    }
      #    //element.showPathes(pathes);
      #}
    ENDSOURCE
    SOURCE #processWindowsChanges
      #private void processWindowsChanges()
      #{
      #    container currentWindows = this.getWindows();
      #    container created, changed, deleted;
      #    HWND      current;
      #    HWND      topmost;
      #    [created, changed, deleted, current] = element.windowsListDiff(oldWindows, currentWindows);
      #    if (currentWindows)
      #    {
      #        topmost = conPeek(conPeek(currentWindows, 1), 1);
      #    }
      #    this.processTopmostFormRun(topmost);
      #    this.refreshTabs(created, changed, deleted, current);
      #    oldWindows = currentWindows;
      #}
    ENDSOURCE
    SOURCE #refreshTabs
      #void refreshTabs(container _created, container _changed, container _deleted, HWND _current)
      #{
      #    this.deleteTabs(_deleted);
      #    this.updateTabs(_changed);
      #    this.addTabs(_created);
      #    this.setCurrent(_current);
      #}
    ENDSOURCE
    SOURCE #regex_match
      #public boolean regex_match(str _s, str _pattern)
      #{
      #    boolean ret = System.Text.RegularExpressions.Regex::IsMatch(_s, _pattern);
      #    return  ret;
      #}
    ENDSOURCE
    SOURCE #runBuf
      #private boolean runBuf(str _text)
      #{
      #    if (strStartsWith(_text, '!'))
      #    {
      #        this.runCode(subStr(_text, 2, strLen(_text)));
      #        return true;
      #    }
      #    return false;
      #}
    ENDSOURCE
    SOURCE #runCode
      #private void runCode(str _text)
      #{
      #    XppCompiler xpp = new XppCompiler();
      #    str src;
      #    anytype ret;
      #    src = 'anytype f(Object _){ AnyType ret; '+
      #        _text +
      #        ' return ret; }';
      #    if (xpp.compile(src))
      #    {
      #        ret = xpp.execute(this);
      #        if (typeOf(ret)!= Types::AnyType)
      #        {
      #            info(this.toStr(ret));
      #        }
      #    }
      #    else
      #    {
      #        warning(xpp.errorText());
      #    }
      #}
    ENDSOURCE
    SOURCE #runSysContextMenu
      #void runSysContextMenu(str _name, MenuItemType _type, SysContextMenu _sysSontextMenu = this.sysContextMenu())
      #{
      #    Args args = new Args();
      #    MenuFunction menuFunction = new MenuFunction(_name, _type);
      #    args.parmObject(_sysSontextMenu);
      #    menuFunction.run(args);
      #}
    ENDSOURCE
    SOURCE #selectedTabItemHWND
      #HWND selectedTabItemHWND()
      #{
      #    int emptyHandle;
      #
      #    System.Windows.Controls.TabItem tabItem = _ManagedHost_Control.get_SelectedItem();
      #
      #    if (tabItem)
      #    {
      #        return tabItem.get_Tag();
      #    }
      #
      #    return 0;
      #}
    ENDSOURCE
    SOURCE #setCurrent
      #private void setCurrent(HWND _hwnd)
      #{
      #    Struct tab;
      #    System.Windows.Controls.TabItem         tabItem;
      #    if (_hwnd)
      #    {
      #        tab = tabs.lookup(_hwnd);
      #        tabItem = tab.value('tabItem');
      #        tabItem.set_IsSelected(true);
      #        tabItem.BringIntoView();
      #    }
      #}
    ENDSOURCE
    SOURCE #startScan
      #void startScan()
      #{
      #    inPause = false;
      #    this.timeoutHandler();
      #}
    ENDSOURCE
    SOURCE #step
      #void step()
      #{
      #    System.Exception laste;
      #
      #    try
      #    {
      #        element.processWindowsChanges();
      #
      #        if (autosizes < 2)
      #        {
      #            element.autoSize();
      #            autosizes ++;
      #        }
      #    }
      #    catch (Exception::CLRError)
      #    {
      #        laste = CLRInterop::getLastException();
      #        throw error(laste.ToString());
      #    }
      #}
    ENDSOURCE
    SOURCE #sysContextMenu
      #SysContextMenu sysContextMenu()
      #{
      #    FormRun formRun = element.topmostFormRun();
      #    if (formRun)
      #    {
      #        return SysContextMenuTreeNode::newPath(@'\Forms\' + formRun.name());
      #    }
      #    else if (element.inEditor())
      #    {
      #        return SysContextMenuTreeNode::newPath(element.getCurrentEditorPath());
      #    }
      #    else
      #    {
      #        return new SysContextMenuAOT();
      #    }
      #}
    ENDSOURCE
    SOURCE #sysNodeType
      #int sysNodeType(TreeNode _node)
      #{
      #    #if.WebReportsPath
      #        return _node.sysNodeType();
      #    #endif
      #    #ifnot.WebReportsPath
      #        return _node.treeNodeType().id();
      #    #endif
      #
      #}
    ENDSOURCE
    SOURCE #tabControl_attachDragAndDropHandlers
      #void tabControl_attachDragAndDropHandlers(System.Windows.Controls.TabControl _tabControl)
      #{
      #    ManagedEventHandler handler = this.handler('tabcontrol_DragEnter');
      #    _tabControl.add_DragEnter(handler);
      #    handler = this.handler('tabcontrol_Drop');
      #    _tabControl.add_Drop(handler);
      #
      #}
    ENDSOURCE
    SOURCE #tabcontrol_DragEnter
      #void tabcontrol_DragEnter(System.Object sender, System.Windows.DragEventArgs e)
      #{
      #    System.Windows.IDataObject data = e.get_Data();
      #    System.Type type = System.Type::GetType('System.Windows.Controls.TabItem');
      #    System.String[] formats = data.GetFormats();
      #    str s;
      #    int i;
      #    int c = formats.get_Count();
      #    for (i=0; i<c; i++)
      #    {
      #        s = formats.get_Item(i);
      #    }
      #    // If the dragged item is a TabItem, set the effect to move.
      #    if (data.GetDataPresent('System.Windows.Controls.TabItem'))
      #    {
      #        e.set_Effects(System.Windows.DragDropEffects::Move);
      #    }
      #}
    ENDSOURCE
    SOURCE #tabcontrol_Drop
      #void tabcontrol_Drop(System.Object sender, System.Windows.DragEventArgs e)
      #{
      #    System.Windows.Controls.TabControl tabcontrol = sender as System.Windows.Controls.TabControl;
      #    System.Windows.IDataObject data = e.get_Data();
      #    System.Type type = System.Type::GetType('System.Windows.Controls.TabItem');
      #    System.Object o = data.GetData('System.Windows.Controls.TabItem');
      #    System.Windows.Controls.TabItem draggeditem = o as System.Windows.Controls.TabItem;
      #    System.Windows.Controls.ItemCollection items = tabControl.get_Items();
      #
      #    // Get the dropped point relative to the TabControl.
      #    System.Windows.Point droppedPoint = e.GetPosition(tabcontrol);
      #    System.Windows.Controls.TabItem item;
      #    System.Windows.Rect rect;
      #    boolean wasSelected;
      #    int cnt = items.get_Count();
      #
      #    // Try to find which TabItem contains the dropped point.
      #    System.Windows.Media.GeneralTransform transform;
      #    int idx = -1;
      #    int i;
      #    for (i = 0; i < cnt; i++)
      #    {
      #        o = items.get_Item(i);
      #        item = o as System.Windows.Controls.TabItem;
      #        transform = item.TransformToVisual(tabcontrol);
      #        rect = new System.Windows.Rect(0, 0, item.get_ActualWidth(), item.get_ActualHeight());
      #        rect = transform.TransformBounds(rect);
      #        if (rect.Contains(droppedPoint))
      #        {
      #            if (! item.Equals(draggeditem))
      #            {
      #                idx = i;
      #            }
      #            break;
      #        }
      #    }
      #
      #    // If the TabItem that contains the dropped point is found, re-arrange the dragged
      #    // TabItem to the index of the dropped TabItem.
      #    if (idx != -1)
      #    {
      #        wasSelected = draggedItem.get_IsSelected();
      #        items.Remove(draggeditem);
      #        items.Insert(idx, draggeditem);
      #        if (wasSelected)
      #        {
      #            draggedItem.set_IsSelected(true);
      #        }
      #    }
      #    // Set the isDragStarted variable to false to indicate this drag&drop operation is
      #    // completed.
      #    isDragStarted = false;
      #}
    ENDSOURCE
    SOURCE #tabItem_attachDragAndDropHandlers
      #void tabItem_attachDragAndDropHandlers(System.Windows.Controls.TabItem _tabItem)
      #{
      #    ManagedEventHandler handler = this.handler('tabitem_QueryContinueDrag');
      #    _tabItem.add_MouseMove(this.handler('tabitem_MouseMove'));
      #    _tabItem.add_QueryContinueDrag(handler);
      #}
    ENDSOURCE
    SOURCE #tabitem_MouseMove
      #void tabitem_MouseMove(System.Object sender, System.Windows.Input.MouseEventArgs e)
      #{
      #    System.Windows.Controls.TabItem item;
      #    System.Windows.Point  p;
      #    real x;
      #    real y;
      #    if (! isDragStarted)
      #    {
      #        //If the Mouse left button is pressed and the dragging hasn't started,
      #        // begin a drag&drop operation.
      #        if (e.get_LeftButton() == System.Windows.Input.MouseButtonState::Pressed)
      #        {
      #            item = sender as System.Windows.Controls.TabItem;
      #            if (possibleDrag)
      #            {
      #                item = possibleDrag as System.Windows.Controls.TabItem;
      #            }
      #            p = e.GetPosition(item);
      #            x = p.get_X();
      #            y = p.get_X();
      #            if (possibleDrag && max(abs(x - dragX), abs(y - dragY)) > 1)
      #            {
      #                // Set the isDragStarted variable to true to indicate a new drag&drop operation is
      #                // started.
      #                isDragStarted = true;
      #                System.Windows.DragDrop::DoDragDrop(item, item, System.Windows.DragDropEffects::Move);
      #            }
      #            else
      #            {
      #                dragX = x;
      #                dragY = y;
      #                possibleDrag = sender;
      #            }
      #        }
      #        else
      #        {
      #            possibleDrag = null;
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #tabitem_QueryContinueDrag
      # void tabitem_QueryContinueDrag(System.Object sender, System.Windows.QueryContinueDragEventArgs e)
      #{
      #    // If the Mouse left button is released, cancel the drag&drop operation.
      #    if (System.Windows.Input.Mouse::get_LeftButton() == System.Windows.Input.MouseButtonState::Released)
      #    {
      #        e.set_Action(System.Windows.DragAction::Cancel);
      #        isDragStarted = false;
      #    }
      #}
      #
    ENDSOURCE
    SOURCE #task
      #public int task(int _taskId)
      #{
      #    int ret;
      #
      #    ret = super(_taskId);
      #    if (_taskID == #taskEnter)
      #    {
      #        this.processSearchText();
      #    }
      #
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #timeoutHandler
      #void timeoutHandler()
      #{
      #    this.step();
      #    if (! inPause)
      #    {
      #        this.setTimeOut(funcName(), #windowsScanTimeout);
      #    }
      #}
    ENDSOURCE
    SOURCE #toggleSqlTrace
      #void toggleSqlTrace()
      #{
      #
      #    info('SQL tracing ' +
      #        (
      #            this.currentSQLTrace(! this.currentSQLTrace())
      #            ?
      #            'enabled':'disabled'
      #         ));
      #}
    ENDSOURCE
    SOURCE #topmostFormRun
      #FormRun topmostFormRun()
      #{
      #    return topmostFormRun ? topmostFormRun.object() : null;
      #}
    ENDSOURCE
    SOURCE #toStr
      #str toStr(anytype _value)
      #{
      #    Object o;
      #    switch (typeOf(_value))
      #    {
      #        case Types::Container: return this.con2str(_value);
      #        case Types::Class:
      #            o = _value;
      #            return o.toString();
      #
      #    }
      #    return strFmt('%1', _value);
      #}
    ENDSOURCE
    SOURCE #updateTabs
      #private void updateTabs(container _updated)
      #{
      #    int i;
      #    Struct tab;
      #    HWND hwnd;
      #    str title;
      #    int image;
      #    str text;
      #    System.Windows.Controls.TabControl      tc = managedHost.control();
      #    System.Windows.Controls.ItemCollection  items = tc.get_Items();
      #    System.Windows.Controls.TextBlock       block;
      #
      #    for (i=1; i<=conLen(_updated); i++)
      #    {
      #        [hwnd, text] = conPeek(_updated, i);
      #        [title, image] = this.parseTitle(text);
      #        tab = tabs.lookup(hwnd);
      #
      #        block = tab.value('block');
      #        block.set_Text(title);
      #    }
      #}
    ENDSOURCE
    SOURCE #whereOverriden
      #str whereOverriden(str _className, str _methodName)
      #{
      #    SysDictClass dictClass =  new SysDictClass(className2Id(_className));
      #    Enumerator i = dictClass.extendedBy().getEnumerator();
      #    SysDictClass descendant;
      #    str          path;
      #    str ret = ' === ' + _className + '.' + _methodName + ': \r\n';
      #    ;
      #    setPrefix(_className + '.' + _methodName);
      #    while (i.moveNext())
      #    {
      #        descendant = new SysDictClass(i.current());
      #        path = descendant.path() + '\\' + _methodName;
      #        if (TreeNode::findNode(path))
      #        {
      #            //ret += path + '\r\n';
      #            info(path, '', SysInfoAction_Editor::newLineColumn(path, 1));
      #        }
      #    }
      #
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #WinAPI_getClassName
      #public str WinAPI_getClassName(HWND _hwnd)
      #{
      #
      #    DLL         dll;
      #    DLLFunction dllFunction;
      #    int         ret;
      #    #define.MaxClassName(255)
      #    Binary      value = new Binary(#MaxClassName * 2);
      #    ;
      #
      #    dll = new DLL(#UserDLL);
      #    dllFunction = new DLLFunction(dll,'GetClassNameW');
      #    dllFunction.arg(ExtTypes::DWord);
      #    dllFunction.arg(ExtTypes::Pointer);
      #    dllFunction.arg(ExtTypes::DWord);
      #    dllFunction.returns(ExtTypes::DWord);
      #    ret = dllFunction.call(_hwnd, value, #MaxClassName-1);
      #    return ret ?  value.wString(0): '';
      #}
    ENDSOURCE
    SOURCE #winApi_getClientRect
      #public container winApi_getClientRect(HWND _hwnd)
      #{
      #    DLL         dll;
      #    DLLFunction dllFunction;
      #    Binary      buffer = new Binary(4*4);
      #    ;
      #
      #    dll = new DLL(#UserDLL);
      #    dllFunction = new DLLFunction(dll, 'GetClientRect');
      #    dllFunction.returns(ExtTypes::DWord);
      #    dllFunction.arg(ExtTypes::DWord, ExtTypes::Pointer);
      #
      #    return dllFunction.call(_hwnd, buffer) ? [buffer.dWord(0), buffer.dWord(4), buffer.dWord(8), buffer.dWord(12)]
      #                                           : conNull();
      #}
    ENDSOURCE
    SOURCE #WinAPI_getParent
      #public HWND WinAPI_getParent(HWND _hwnd)
      #{
      #
      #    DLL         dll;
      #    DLLFunction dllFunction;
      #    ;
      #
      #    dll = new DLL(#UserDLL);
      #    dllFunction = new DLLFunction(dll,'GetParent');
      #    dllFunction.arg(ExtTypes::DWord);
      #    dllFunction.returns(ExtTypes::DWord);
      #    return dllFunction.call(_hwnd);
      #}
    ENDSOURCE
    SOURCE #winApi_isIconic
      #private boolean winApi_isIconic(HWND _hwnd)
      #{
      #    DLL         dll;
      #    DLLFunction dllFunction;
      #    ;
      #
      #    dll = new DLL(#UserDLL);
      #    dllFunction = new DLLFunction(dll,'IsIconic');
      #    dllFunction.returns(ExtTypes::DWord);
      #    dllFunction.arg(ExtTypes::DWord);
      #
      #    return dllFunction.call(_hwnd);
      #}
    ENDSOURCE
    SOURCE #winApi_isZoomed
      #private boolean winApi_isZoomed(HWND _hwnd)
      #{
      #    DLL         dll;
      #    DLLFunction dllFunction;
      #    ;
      #
      #    dll = new DLL(#UserDLL);
      #    dllFunction = new DLLFunction(dll,'IsZoomed');
      #    dllFunction.returns(ExtTypes::DWord);
      #    dllFunction.arg(ExtTypes::DWord);
      #
      #    return dllFunction.call(_hwnd);
      #}
      #
    ENDSOURCE
    SOURCE #windows_tileHorizontal
      #void windows_tileHorizontal()
      #{
      #    int x1, y1, x2, y2;
      #    HWND first, second;
      #    int middle;
      #
      #    [first, second]= this.get2TopmostWindows();
      #    [x1, y1, x2, y2] = this.winApi_GetClientRect(mdicLient);
      #    middle = (x2 - x1) div 2;
      #    if (first)
      #    {
      #        this.ensureIsShown(first);
      #        WinAPI::setWindowPos(first, 0, 0, middle, (y2-y1));
      #    }
      #
      #    if (second)
      #    {
      #        this.ensureIsShown(second);
      #        WinAPI::setWindowPos(second, middle + 1, 0, x2-x1 - middle - 1, y2-y1);
      #    }
      #}
    ENDSOURCE
    SOURCE #windowsListDiff
      #// returns container [created, changed, deleted]
      #container windowsListDiff(container _old, container _new)
      #{
      #    container created;
      #    container changed;
      #    container deleted;
      #    container cur;
      #    Map oldMap = this.con2map(_old);
      #    int hWnd;
      #    int i;
      #    HWND current;
      #    HWND oldCurrent;
      #    HWND newCurrent;
      #    for(i=1; i<=conLen(_new); i++)
      #    {
      #        cur = conPeek(_new, i);
      #        hWnd = conPeek(cur, 1);
      #        if (oldMap.exists(hWnd))
      #        {
      #            if (oldMap.lookup(hWnd) != conPeek(cur, 2))
      #            {
      #                changed += [cur];
      #            }
      #            oldMap.remove(hWnd);
      #        }
      #        else
      #        {
      #            created += [cur];
      #        }
      #    }
      #    deleted = this.map2con(oldMap);
      #
      #    if (_old)
      #    {
      #        oldCurrent = conPeek(conPeek(_old, 1), 1);
      #    }
      #    if (_new)
      #    {
      #        newCurrent = conPeek(conPeek(_new, 1), 1);
      #    }
      #
      #    //if (current != oldCurrent  || current!= this.selectedTabItemHWND() || firstTicks < 5)
      #    if (newCurrent != oldCurrent || firstTicks < 5)
      #    {
      #        current = newCurrent;
      #        firstTicks ++;
      #    }
      #    return [created, changed, deleted, current];
      #}
    ENDSOURCE
    SOURCE #xamlResources
      #str xamlResources()
      #{
      #    return
      #    @'<ResourceDictionary
      #        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      #        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      #        >
      #    <ControlTemplate x:Key="ScrollViewerForTab" TargetType="{x:Type ScrollViewer}">
      #            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
      #                <Grid.ColumnDefinitions>
      #                    <ColumnDefinition Width="Auto"/>
      #                    <ColumnDefinition Width="*"/>
      #                    <ColumnDefinition Width="Auto"/>
      #                </Grid.ColumnDefinitions>
      #                <Grid.RowDefinitions>
      #                    <RowDefinition Height="*"/>
      #                    <RowDefinition Height="Auto"/>
      #                </Grid.RowDefinitions>
      #                <Rectangle x:Name="Corner" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Column="2" Grid.Row="1"/>
      #                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Margin="{TemplateBinding Padding}" Grid.Column="1" Grid.Row="0" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
      #CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"/>
      #                <RepeatButton Grid.Row="0" Grid.Column="0" Command="ScrollBar.PageLeftCommand" Content="&lt;" Background="{x:Null}"/>
      #                <RepeatButton Grid.Row="0" Grid.Column="2" Command="ScrollBar.PageRightCommand" Content="&gt;" Background="{x:Null}"/>
      #
      #            </Grid>
      #        </ControlTemplate>
      #
      #        <ControlTemplate x:Key="ScrollableTabControl" TargetType="{x:Type TabControl}">
      #            <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
      #                <Grid.ColumnDefinitions>
      #                    <ColumnDefinition x:Name="ColumnDefinition0"/>
      #                    <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
      #                </Grid.ColumnDefinitions>
      #                <Grid.RowDefinitions>
      #                    <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
      #                    <RowDefinition x:Name="RowDefinition1" Height="*"/>
      #                </Grid.RowDefinitions>
      #
      #                <ScrollViewer Margin="2,2,2,0" Grid.Column="0" Grid.Row="0" Template="{DynamicResource ScrollViewerForTab}" VerticalScrollBarVisibility="Disabled" VerticalContentAlignment="Bottom" HorizontalScrollBarVisibility="Visible"
      #Focusable="False">
      #                    <StackPanel x:Name="HeaderPanel" IsItemsHost="true" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" Width="Auto" Height="Auto" Orientation="Horizontal" Margin="0,2,0,0"/>
      #                </ScrollViewer>
      #                <Border x:Name="ContentPanel" Grid.Column="0" Grid.Row="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
      #KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
      #                    <ContentPresenter x:Name="PART_SelectedContentHost" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="SelectedContent"/>
      #                </Border>
      #            </Grid>
      #            <ControlTemplate.Triggers>
      #                <Trigger Property="TabStripPlacement" Value="Bottom">
      #                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
      #                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
      #                    <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
      #                    <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
      #                    <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
      #                </Trigger>
      #                <Trigger Property="TabStripPlacement" Value="Left">
      #                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
      #                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
      #                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
      #                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
      #                    <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
      #                    <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
      #                    <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
      #                    <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
      #                    <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
      #                </Trigger>
      #                <Trigger Property="TabStripPlacement" Value="Right">
      #                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
      #                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
      #                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
      #                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
      #                    <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
      #                    <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
      #                    <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
      #                    <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
      #                    <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
      #                </Trigger>
      #                <Trigger Property="IsEnabled" Value="false">
      #                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
      #                </Trigger>
      #            </ControlTemplate.Triggers>
      #        </ControlTemplate>
      #        <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94"/>
      #        <SolidColorBrush x:Key="TabItemSelectedBackground" Color="#F9F9F9"/>
      #        <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1"/>
      #        <SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4"/>
      #        <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA"/>
      #        <LinearGradientBrush x:Key="EditorBackground" EndPoint="0,1" StartPoint="0,0">
      #                        <GradientStop Color="LightSkyBlue" Offset="0"/>
      #                        <GradientStop Color="White" Offset="0.75"/>
      #        </LinearGradientBrush>
      #        <LinearGradientBrush x:Key="EditorHotBackground" EndPoint="0,1" StartPoint="0,0">
      #                        <GradientStop Color="LightSkyBlue" Offset="0"/>
      #                        <GradientStop Color="White" Offset="1"/>
      #        </LinearGradientBrush>
      #        <SolidColorBrush x:Key="EditorSelectedBackground" Color="LightSkyBlue"/>
      # '+@'
      #        <Style x:Key="EditorTabItem" TargetType="{x:Type TabItem}">
      #            <Setter Property="FocusVisualStyle" Value="{DynamicResource TabItemFocusVisual}"/>
      #            <Setter Property="Foreground" Value="Black"/>
      #            <Setter Property="Padding" Value="6,1,6,1"/>
      #            <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
      #            <Setter Property="Background" Value="Yellow"/>
      #            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      #            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
      #            <Setter Property="Template">
      #                <Setter.Value>
      #                    <ControlTemplate TargetType="{x:Type TabItem}">
      #                        <Grid SnapsToDevicePixels="true">
      #                            <Border x:Name="Bd" Background="{StaticResource EditorBackground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Padding="{TemplateBinding Padding}">
      #                                <ContentPresenter x:Name="Content" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" VerticalAlignment="{Binding VerticalContentAlignment,
      #RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True"/>
      #                            </Border>
      #                        </Grid>
      #                        <ControlTemplate.Triggers>
      #                            <Trigger Property="IsMouseOver" Value="true">
      #                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource EditorHotBackground}"/>
      #                            </Trigger>
      #                            <Trigger Property="IsSelected" Value="true">
      #                                <Setter Property="Panel.ZIndex" Value="1"/>
      #                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource EditorSelectedBackground}"/>
      #                            </Trigger>
      #                            <MultiTrigger>
      #                                <MultiTrigger.Conditions>
      #                                    <Condition Property="IsSelected" Value="false"/>
      #                                    <Condition Property="IsMouseOver" Value="true"/>
      #                                </MultiTrigger.Conditions>
      #                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}"/>
      #                            </MultiTrigger>
      #                            <Trigger Property="TabStripPlacement" Value="Bottom">
      #                                <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
      #                            </Trigger>
      #                            <Trigger Property="TabStripPlacement" Value="Left">
      #                                <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
      #                            </Trigger>
      #                            <Trigger Property="TabStripPlacement" Value="Right">
      #                                <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
      #                            </Trigger>
      #                            <MultiTrigger>
      #                                <MultiTrigger.Conditions>
      #                                    <Condition Property="IsSelected" Value="true"/>
      #                                    <Condition Property="TabStripPlacement" Value="Top"/>
      #                                </MultiTrigger.Conditions>
      #                                <Setter Property="Margin" Value="-2,-2,-2,-1"/>
      #                                <Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
      #                            </MultiTrigger>
      #                            <MultiTrigger>
      #                                <MultiTrigger.Conditions>
      #                                    <Condition Property="IsSelected" Value="true"/>
      #                                    <Condition Property="TabStripPlacement" Value="Bottom"/>
      #                                </MultiTrigger.Conditions>
      #                                <Setter Property="Margin" Value="-2,-1,-2,-2"/>
      #                                <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
      #                            </MultiTrigger>
      #                            <MultiTrigger>
      #                                <MultiTrigger.Conditions>
      #                                    <Condition Property="IsSelected" Value="true"/>
      #                                    <Condition Property="TabStripPlacement" Value="Left"/>
      #                                </MultiTrigger.Conditions>
      #                                <Setter Property="Margin" Value="-2,-2,-1,-2"/>
      #                                <Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
      #                            </MultiTrigger>
      #                            <MultiTrigger>
      #                                <MultiTrigger.Conditions>
      #                                    <Condition Property="IsSelected" Value="true"/>
      #                                    <Condition Property="TabStripPlacement" Value="Right"/>
      #                                </MultiTrigger.Conditions>
      #                                <Setter Property="Margin" Value="-1,-2,-2,-2"/>
      #                                <Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
      #                            </MultiTrigger>
      #                            <Trigger Property="IsEnabled" Value="false">
      #                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}"/>
      #                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}"/>
      #                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
      #                            </Trigger>
      #                        </ControlTemplate.Triggers>
      #                    </ControlTemplate>
      #                </Setter.Value>
      #            </Setter>
      #        </Style>
      #        </ResourceDictionary>';
      #
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Top                 #Top edge
      Width               #Column width
      Caption             #Tabaxoid
      Frame               #None
      WindowType          #Workspace
      AllowDocking        #Yes
      TopMargin           #0
      BottomMargin        #0
      LeftMargin          #0
      RightMargin         #0
      AllowUserSetup      #No
      Scrollbars          #No
    ENDPROPERTIES
    
    CONTAINER
      CONTROL GROUP
        PROPERTIES
          Name                #ExtensionGroup
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          VerticalSpacing     #0
          ElementPosition     #1879048178
          HierarchyParent     #Toolbar
          FrameType           #None
          BackgroundColor     #Menu background
          TopMargin           #0
          BottomMargin        #0
          LeftMargin          #0
          RightMargin         #0
          ArrangeMethod       #Horizontal, flush right
          Columnspace         #0
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Toolbar
          Width               #Column width
          VerticalSpacing     #0
          ElementPosition     #715827882
          FrameType           #None
          TopMargin           #0
          BottomMargin        #0
          LeftMargin          #0
          RightMargin         #0
          ArrangeMethod       #Horizontal, flush right
          Columnspace         #0
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MANAGEDHOST
        PROPERTIES
          Name                #ManagedHost
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          TypeName            #System.Windows.Controls.TabControl
          AssemblyName        #PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #AddaxPlugin
          ElementPosition     #1771673994
          HierarchyParent     #Toolbar
          ButtonDisplay       #Image only
          NormalImage         #7695
          ImageLocation       #EmbeddedResource
          Border              #Flat
          MenuItemName        #AddaxPlugin
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #copyBut
          HelpText            #Copy selected pathes to clipboard
          ElementPosition     #805306362
          HierarchyParent     #Toolbar
          ButtonDisplay       #Image only
          NormalImage         #1023
          ImageLocation       #EmbeddedResource
          Border              #Flat
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    element.copyPathes(WinAPI::isShiftButtonDown());
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #DEV_CompileAll
          HelpText            #Compile all objects
          ElementPosition     #1449551451
          HierarchyParent     #Toolbar
          ButtonDisplay       #Image only
          NormalImage         #1078
          ImageLocation       #EmbeddedResource
          Border              #Flat
          MenuItemType        #Action
          MenuItemName        #DEV_CompileAll
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (Box::yesNo("Are you sure you want to compile ALL objects?", DialogButton::No) == DialogButton::Yes)
            #    {
            #        super();
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #DEV_CreateNewProject
          HelpText            #Create new Projects
          ElementPosition     #1342177270
          HierarchyParent     #Toolbar
          ButtonDisplay       #Image only
          NormalImage         #7698
          ImageLocation       #EmbeddedResource
          Border              #Flat
          MenuItemType        #Action
          MenuItemName        #DEV_CreateNewProject
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #DEV_FlushAll
          ElementPosition     #1556925632
          HierarchyParent     #Toolbar
          ButtonDisplay       #Image only
          NormalImage         #1105
          ImageLocation       #EmbeddedResource
          Border              #Flat
          MenuItemType        #Action
          MenuItemName        #DEV_FlushAll
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #DEV_FlushAllClient
          ElementPosition     #1664299813
          HierarchyParent     #Toolbar
          ButtonDisplay       #Image only
          NormalImage         #1088
          ImageLocation       #EmbeddedResource
          Border              #Flat
          MenuItemType        #Action
          MenuItemName        #DEV_FlushAllClient
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #openApplicationObjectBut
          HelpText            #Opens application object related to current treenode
          ElementPosition     #1207959543
          HierarchyParent     #Toolbar
          ButtonDisplay       #Image only
          NormalImage         #1014
          ImageLocation       #EmbeddedResource
          Border              #Flat
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    element.openApplicationObject();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #SysTreeHierarchyBrowser
          VerticalSpacing     #0
          ElementPosition     #402653181
          HierarchyParent     #Toolbar
          ButtonDisplay       #Image only
          NormalImage         #1304
          ImageLocation       #EmbeddedResource
          Border              #Flat
          MenuItemName        #SysTypeHierarchyBrowser
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    #if.WebReportsPath
            #        element.runSysContextMenu(menuItemDisplayStr(SysTreeHierarchyBrowser), MenuItemType::Display);
            #    #endif
            #    #ifnot.WebReportsPath
            #        element.runSysContextMenu(menuitemDisplayStr(SysTypeHierarchyBrowser), MenuItemType::Display);
            #    #endif
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #tableBrowserBut
          ElementPosition     #1073741816
          HierarchyParent     #Toolbar
          ButtonDisplay       #Image only
          NormalImage         #2622
          ImageLocation       #EmbeddedResource
          Border              #Flat
          MenuItemName        #SysTableBrowser
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    element.runSysContextMenu(menuitemDisplayStr(SysTableBrowser), MenuItemType::Display,
            #                              element.dsContextMenu());
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #tileHorizontalBut
          HelpText            #Places two windows side-by-side
          ElementPosition     #268435454
          HierarchyParent     #Toolbar
          ButtonDisplay       #Image only
          NormalImage         #867
          ImageLocation       #EmbeddedResource
          Border              #Flat
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    element.windows_tileHorizontal();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #toggleSqlBut
          AutoDeclaration     #Yes
          HelpText            #Toggle SQL tracer
          ElementPosition     #939524089
          HierarchyParent     #Toolbar
          ButtonDisplay       #Image only
          NormalImage         #7639
          ImageLocation       #EmbeddedResource
          Border              #Flat
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    element.toggleSqlTrace();
            #    this.normalImage(element.currentSQLTrace() ? '7699' : '7639');
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #whereOverridenBut
          HelpText            #Where selected method is overriden
          ElementPosition     #671088635
          HierarchyParent     #Toolbar
          ButtonDisplay       #Image only
          NormalImage         #1306
          ImageLocation       #EmbeddedResource
          Border              #Flat
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    element.processWhereOverriden();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #XRefReferencesUsedBy
          ElementPosition     #536870908
          HierarchyParent     #Toolbar
          ButtonDisplay       #Image only
          NormalImage         #3077
          ImageLocation       #EmbeddedResource
          Border              #Flat
          MenuItemName        #XRefReferencesUsedBy
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    element.runSysContextMenu(menuitemDisplayStr(XRefReferencesUsedBy), MenuItemType::Display);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #searchText
          AutoDeclaration     #Yes
          Left                #Right edge
          ElementPosition     #2013265905
          HierarchyParent     #Toolbar
          DisplayLength       #50
          ShowLabel           #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: DBT

; Microsoft Dynamics AX Table : AddaxPluginTable unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #AddaxPluginTable
    EnforceFKRelation 1
    PROPERTIES
      Name                #AddaxPluginTable
      Label               #Plugin
      CacheLookup         #EntireTable
      CreateRecIdIndex    #Yes
      SaveDataPerCompany  #No
      PrimaryIndex        #SurrogateKey
      ClusterIndex        #SurrogateKey
      ReplacementKey      #ClassNameIdx
      Origin              #{BD24414E-1ED7-4057-B50E-B10C76D9F983}
    ENDPROPERTIES
    
    FIELDS
      FIELD #Active
        ENUM
        PROPERTIES
          Name                #Active
          Label               #@SYS14584
          Table               #AddaxPluginTable
          Origin              #{AA2B5E00-495E-485A-A4EA-061FC416BD64}
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ClassName
        STRING
        PROPERTIES
          Name                #ClassName
          Mandatory           #Yes
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #AddaxPluginTable
          Origin              #{1CA1127A-A01F-4844-812F-27F824B07CBD}
          ExtendedDataType    #ClassName
          StringSize          #40
        ENDPROPERTIES
        
      FIELD #ConfigData
        QUEUE
        PROPERTIES
          Name                #ConfigData
          Table               #AddaxPluginTable
          Origin              #{6CFFD877-959D-428F-9A19-D488B6EBBAE4}
        ENDPROPERTIES
        
      FIELD #Description
        STRING
        PROPERTIES
          Name                #Description
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #AddaxPluginTable
          Origin              #{AAFA0B1B-FEF3-4979-B902-BB900BDB42A6}
          ExtendedDataType    #ClassDescription
          StringSize          #255
        ENDPROPERTIES
        
      FIELD #HasConfig
        ENUM
        PROPERTIES
          Name                #HasConfig
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #AddaxPluginTable
          Origin              #{C290317F-D9B1-433F-B9A2-C2672D23645D}
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #Name
        STRING
        PROPERTIES
          Name                #Name
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #AddaxPluginTable
          Origin              #{E029DCCF-5E75-4ECE-B113-2530F0053373}
          ExtendedDataType    #Name
          StringSize          #60
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoIdentification
        PROPERTIES
          Name                #AutoIdentification
        ENDPROPERTIES
        
        GROUPFIELDS
          #ClassName
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #ClassNameIdx
      PROPERTIES
        Name                #ClassNameIdx
        AllowDuplicates     #No
        AlternateKey        #Yes
        Origin              #{B61C5744-8233-43BC-98D9-F55D250B7E47}
      ENDPROPERTIES
      
      INDEXFIELDS
        #ClassName
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
    ENDREFERENCES
    
    DELETEACTIONS
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #initFromPlugable
        #public void initFromPlugable(AddaxPlugable _plugable)
        #{
        #    if (_plugable)
        #    {
        #        this.ClassName = classId2Name(classIdGet(_plugable));
        #        this.Name = _plugable.name();
        #        this.Description = _plugable.description();
        #        this.HasConfig = _plugable.configMenuFunction() != null;
        #    }
        #}
      ENDSOURCE
      SOURCE #makeObject
        #public AddaxPlugable makeObject()
        #{
        #    SysDictClass dictClass = SysDictClass::newName(this.ClassName);
        #    if (!dictClass)
        #    {
        #        throw error(strFmt("@SYS4973", this.ClassName));
        #    }
        #    return dictClass.makeObject();
        #}
      ENDSOURCE
      SOURCE #createFromClassName
        #public static void createFromClassName(ClassName _className)
        #{
        #    AddaxPluginTable   pluginTable;
        #    AddaxPlugable      plugable;
        #    SysDictClass       dictClass;
        #
        #    if (!_className)
        #        throw error("No class name");
        #
        #    dictClass = SysDictClass::newName(_className);
        #    if (!dictClass || !dictClass.isImplementing(classNum(AddaxPlugable), false))
        #        throw error(strFmt("Class %1 is not an Addax plugin", _className));
        #
        #    plugable = dictClass.makeObject();
        #
        #    pluginTable.initValue();
        #    pluginTable.ClassName = _className;
        #    pluginTable.Name = plugable.name();
        #    pluginTable.Description = plugable.description();
        #    pluginTable.HasConfig = plugable.configMenuFunction() != null;
        #    pluginTable.insert();
        #}
      ENDSOURCE
      SOURCE #findClassName
        #public static AddaxPluginTable findClassName(ClassName _className, boolean _forUpdate = false)
        #{
        #    AddaxPluginTable pluginTable;
        #
        #    if (_className)
        #    {
        #        pluginTable.selectForUpdate(_forUpdate);
        #        select pluginTable
        #            where pluginTable.ClassName == _className;
        #    }
        #
        #    return pluginTable;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: CLS

; Microsoft Dynamics AX Class: AddaxClrException unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #AddaxClrException
    PROPERTIES
      Name                #AddaxClrException
      Extends             #Object
      Origin              #{756CDF8E-B6FF-42EC-8F75-2B667EA8F157}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #/// <summary>
        #/// Wraps CLR exception.
        #/// </summary>
        #class AddaxClrException extends Object
        #{
        #    System.Exception clrException;
        #}
      ENDSOURCE
      SOURCE #clrException
        #public System.Exception clrException()
        #{
        #    return clrException;
        #}
      ENDSOURCE
      SOURCE #getMessage
        #public str getMessage()
        #{
        #    return clrException.get_Message();
        #}
      ENDSOURCE
      SOURCE #new
        #public void new(System.Exception _ex)
        #{
        #    if (!_ex)
        #    {
        #        throw error(Error::wrongUseOfFunction(funcName()));
        #    }
        #    super();
        #    clrException = _ex;
        #}
      ENDSOURCE
      SOURCE #toString
        #public str toString()
        #{
        #    return clrException.ToString();
        #}
      ENDSOURCE
      SOURCE #createFromLast
        #public static AddaxClrException createFromLast(boolean _unwrap = true)
        #{
        #    System.Exception ex = CLRInterop::getLastException();
        #    if (!ex)
        #    {
        #        return null;
        #    }
        #
        #    if (_unwrap)
        #    {
        #        ex = AddaxClrException::unwrap(ex);
        #    }
        #
        #    return new AddaxClrException(ex);
        #}
      ENDSOURCE
      SOURCE #unwrap
        #public static System.Exception unwrap(System.Exception ex)
        #{
        #    if (!ex)
        #    {
        #        return null;
        #    }
        #
        #    return ex.get_InnerException();
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: AddaxPlugable unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  INTERFACE #AddaxPlugable
    PROPERTIES
      Name                #AddaxPlugable
      Origin              #{BAB46F41-5F76-453C-B0F9-844E1D558906}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #/// <summary>
        #/// Addax plug-in.
        #/// </summary>
        #/// <remarks>
        #/// Only non-abstract classes are considered as plug-ins.
        #/// </remarks>
        #interface AddaxPlugable
        #{
        #}
      ENDSOURCE
      SOURCE #configMenuFunction
        #MenuFunction configMenuFunction()
        #{
        #}
      ENDSOURCE
      SOURCE #description
        #ClassDescription description()
        #{
        #}
      ENDSOURCE
      SOURCE #DeserializeConfigData
        #void DeserializeConfigData(container _configData)
        #{
        #}
      ENDSOURCE
      SOURCE #name
        #Name name()
        #{
        #}
      ENDSOURCE
      SOURCE #SerializeConfigData
        #container SerializeConfigData()
        #{
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: AddaxPluginBase unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #AddaxPluginBase
    PROPERTIES
      Name                #AddaxPluginBase
      Origin              #{8D03EB15-50A4-4CC6-A8BD-09ADEA0208D6}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #abstract class AddaxPluginBase implements AddaxPlugable
        #{
        #}
      ENDSOURCE
      SOURCE #configMenuFunction
        #public MenuFunction configMenuFunction()
        #{
        #    return null;
        #}
      ENDSOURCE
      SOURCE #description
        #abstract ClassDescription description()
        #{
        #}
      ENDSOURCE
      SOURCE #DeserializeConfigData
        #public void DeserializeConfigData(container _configData)
        #{
        #}
      ENDSOURCE
      SOURCE #isActive
        #public boolean isActive()
        #{
        #    return AddaxPluginBase::isActiveClassName(classId2Name(classIdGet(this)));
        #}
      ENDSOURCE
      SOURCE #name
        #public abstract Name name()
        #{
        #}
      ENDSOURCE
      SOURCE #SerializeConfigData
        #public container SerializeConfigData()
        #{
        #    return conNull();
        #}
      ENDSOURCE
      SOURCE #isActiveClassName
        #public static boolean isActiveClassName(ClassName _className)
        #{
        #    return AddaxPluginTable::findClassName(_className).Active;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: AddaxPluginUpdate unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #AddaxPluginUpdate
    PROPERTIES
      Name                #AddaxPluginUpdate
      RunOn               #Server
      Origin              #{F96A68FF-7E86-4B80-AE71-530FA00A549D}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #/// <summary>
        #/// Finds existing Addax plugins and add, remove or update corresponding
        #/// records in <c>AddaxPluginTable</c>.
        #/// </summary>
        #class AddaxPluginUpdate
        #{
        #    Set pluginClassNames;
        #    Set currentPluginNames;
        #}
      ENDSOURCE
      SOURCE #createPlugin
        #private void createPlugin(ClassName _className)
        #{
        #    AddaxPluginTable::createFromClassName(_className);
        #}
      ENDSOURCE
      SOURCE #currentPluginNames
        #private Set currentPluginNames()
        #{
        #    Set set = new Set(Types::String);
        #    AddaxPluginTable plugin;
        #
        #    while select ClassName from plugin
        #    {
        #        set.add(plugin.ClassName);
        #    }
        #
        #    return set;
        #}
      ENDSOURCE
      SOURCE #deletePlugin
        #private void deletePlugin(ClassName _className)
        #{
        #    AddaxPluginTable plugin;
        #
        #    plugin = AddaxPluginTable::findClassName(_className, true);
        #    plugin.delete();
        #}
      ENDSOURCE
      SOURCE #deletePlugins
        #private void deletePlugins(Set _pluginNames)
        #{
        #    Enumerator enumerator = _pluginNames.getEnumerator();
        #
        #    while (enumerator.moveNext())
        #    {
        #        this.deletePlugin(enumerator.current());
        #    }
        #}
      ENDSOURCE
      SOURCE #initRun
        #private void initRun()
        #{
        #    pluginClassNames = this.pluginClasses();
        #    currentPluginNames = this.currentPluginNames();
        #}
      ENDSOURCE
      SOURCE #pluginClasses
        #private Set pluginClasses()
        #{
        #    //get all classing implementing AddaxPlugable
        #    List implementing = new SysDictClass(classNum(AddaxPlugable)).implementedBy(false);
        #    ListEnumerator enumerator = implementing.getEnumerator();
        #    Set plugins = new Set(Types::String);
        #    SysDictClass dictClass;
        #
        #    //keep only non-abstract classes
        #    while (enumerator.moveNext())
        #    {
        #        dictClass = new SysDictClass(enumerator.current());
        #
        #        if (!dictClass.isAbstract())
        #        {
        #            plugins.add(dictClass.name());
        #        }
        #    }
        #    return plugins;
        #}
      ENDSOURCE
      SOURCE #run
        #public void run()
        #{
        #    Enumerator implEnumerator;
        #    str className;
        #
        #    this.initRun();
        #
        #    implEnumerator = pluginClassNames.getEnumerator();
        #
        #    ttsBegin;
        #
        #    while (implEnumerator.moveNext())
        #    {
        #        className = implEnumerator.current();
        #        if (currentPluginNames.in(className))
        #        {
        #            //If plugin already exist, update it and remove from collection
        #            this.updatePlugin(className);
        #            currentPluginNames.remove(className);
        #        }
        #        else
        #        {
        #            //If plugin doesn't exist, insert it to table
        #            this.createPlugin(className);
        #        }
        #    }
        #
        #    if (!currentPluginNames.empty()) //If implementation for some records doesn't exist
        #    {
        #        this.deletePlugins(currentPluginNames);
        #    }
        #
        #    ttsCommit;
        #}
      ENDSOURCE
      SOURCE #updatePlugin
        #private void updatePlugin(ClassName _className)
        #{
        #    AddaxPluginTable pluginTable;
        #    AddaxPlugable pluginInstance = SysDictClass::newName(_className).makeObject();
        #
        #    pluginTable = AddaxPluginTable::findClassName(_className, true);
        #    pluginTable.initFromPlugable(pluginInstance);
        #    pluginTable.update();
        #}
      ENDSOURCE
      SOURCE #update
        #public static void update()
        #{
        #    AddaxPluginUpdate update = new AddaxPluginUpdate();
        #    update.run();
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #AddaxPlugin
  PROPERTIES
    Name                #AddaxPlugin
    Origin              #{2DE91B92-FD05-4039-91F0-22177570C05E}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #public class FormRun extends ObjectRun
      #{
      #    SysFormSplitter_X verticalSplitter;
      #}
    ENDSOURCE
    SOURCE #init
      #public void init()
      #{
      #    super();
      #    //Initialize splitter
      #    verticalSplitter = new SysFormSplitter_X(VSplitter, GridContainer, element);
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PluginTable
          Table               #AddaxPluginTable
          AllowCreate         #No
          AllowDelete         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #active
          #public int active()
          #{
          #    int ret = super();
          #    MenuFunction mf;
          #
          #    if (ret)
          #    {
          #        if (pluginTable.HasConfig)
          #        {
          #            mf = pluginTable.makeObject().configMenuFunction();
          #            ConfigureButton.menuItemType(mf.type());
          #            ConfigureButton.menuItemName(mf.name());
          #            ConfigureButton.helpText(mf.helpText());
          #        }
          #        ConfigureButton.enabled(pluginTable.HasConfig);
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Caption             #Plugins
      DataSource          #PluginTable
      Style               #SimpleListDetails
    ENDPROPERTIES
    
    CONTAINER
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPane
          ElementPosition     #715827882
          Style               #Strip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #ActionPaneTab
          ElementPosition     #1431655764
          HierarchyParent     #ActionPane
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroup
          ElementPosition     #1431655764
          HierarchyParent     #ActionPaneTab
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #Grid
          AllowEdit           #No
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #GridContainer
          MultiSelect         #No
          ShowRowLabels       #No
          DataSource          #PluginTable
          GridLinesStyle      #Vertical
          AlternateRowShading #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Body
          ElementPosition     #1431655764
          Style               #MarginlessContainer
          Columns             #3
          Columnspace         #0
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DetailsContainer
          ElementPosition     #1717986916
          HierarchyParent     #Body
          Style               #MarginlessContainer
          TopMargin           #5
          RightMargin         #5
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DetailsHeader
          ElementPosition     #1073741822
          HierarchyParent     #DetailsContainer
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GridContainer
          AutoDeclaration     #Yes
          Width               #300
          ElementPosition     #858993458
          HierarchyParent     #Body
          Style               #BorderlessGridContainer
          RightMargin         #0
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #VSplitter
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #Body
          Style               #SplitterVerticalContainer
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #DetailsTab
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612733
          HierarchyParent     #DetailsContainer
          Style               #FastTabs
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabPage
          ElementPosition     #1431655764
          HierarchyParent     #DetailsTab
          Caption             #@SYS4003755
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #UpdatePlugins
          ElementPosition     #1610612733
          HierarchyParent     #ButtonGroup
          Text                #Update plugins
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #    AddaxPluginUpdate::update();
            #    PluginTable_ds.research();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #Grid_Active
          ElementPosition     #1073741822
          HierarchyParent     #Grid
          BackgroundColor     #Window background
          DataSource          #PluginTable
          DataField           #Active
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PluginTable_Active
          ElementPosition     #1073741822
          HierarchyParent     #DetailsHeader
          DataSource          #PluginTable
          DataField           #Active
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ConfigureButton
          AutoDeclaration     #Yes
          Enabled             #No
          ElementPosition     #1073741822
          HierarchyParent     #ButtonGroup
          Text                #Configure
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Grid_Name
          ElementPosition     #1610612733
          HierarchyParent     #Grid
          DataSource          #PluginTable
          DataField           #Name
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PluginTable_Description
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #TabPage
          MultiLine           #Yes
          DataSource          #PluginTable
          DataField           #Description
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PluginTable_Name
          ElementPosition     #1610612733
          HierarchyParent     #DetailsHeader
          DataSource          #PluginTable
          DataField           #Name
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: FTM

; Microsoft Dynamics AX MENUITEM : AddaxPlugin unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #AddaxPlugin
    Type: 1
    PROPERTIES
      Name                #AddaxPlugin
      Label               #Addax plugins
      HelpText            #Enable and configure Addax plugins
      Object              #AddaxPlugin
      Origin              #{F15CAE2B-CEB5-4070-A12D-22578A7CC9FE}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: CLS

; Microsoft Dynamics AX Class: SysVersionControlSynchronization unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #SysVersionControlSynchronization
    PROPERTIES
      Name                #SysVersionControlSynchronization
      Extends             #RunBase
      RunOn               #Client
      Origin              #{2D20035B-0000-1000-0629-DD686F8F0B68}
      LegacyId            #859
    ENDPROPERTIES
    
    METHODS
      SOURCE #dialog
        #/// <summary>
        #/// Returns a class that contains the methods that are described by the <c>RunBaseDialogable</c>
        #/// interface.
        #/// </summary>
        #/// <returns>
        #/// A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
        #/// </returns>
        #/// <remarks>
        #/// A dialog can be either built by using the <c>Dialog</c> class or by using a class that is created
        #/// in the Application Object Tree (AOT).
        #/// </remarks>
        #public Object dialog()
        #{
        #    DialogRunbase dialog = super();
        #    DialogGroup   dialogGroup = dialog.addGroup();
        #    DialogText    dialogText;
        #
        #    #define.NumOfColumns(2)
        #    #define.DisplayHeight(6)
        #    #define.DisplayLength(100)
        #
        #    dialogGroup.columns(#NumOfColumns);
        #    dialogGroup.frameType(FormFrameType::None);
        #    dialog.addInfoImage();
        #    dialogText = dialog.addText("@SYS85706"+'\n\n' +
        #        strFmt("@SYS85707","@SYS85708"));
        #    dialogText.displayHeight(#DisplayHeight);
        #    dialogText.displayLengthValue(#DisplayLength);
        #
        #    //only add label field if vcs support sync label
        #    if (versioncontrol &&
        #        versioncontrol.parmSysVersionControlSystem() &&
        #        versioncontrol.parmSysVersionControlSystem().supportSyncLabel())
        #    {
        #        dialogGroup = dialog.addGroup();
        #        dialogGroup.frameType(FormFrameType::None);
        #
        #        dialogSyncType = dialog.addField(enumStr(SysVersionControlSynchronizeType),"@SYS120846");
        #        dialogSyncType.value(syncType);
        #
        #        dialogSyncLabel = dialog.addField(extendedTypeStr(SysVersionControlLabel), "@SYS120844");
        #        dialogSyncLabel.value(syncLabel);
        #
        #        dialogText.text("@SYS85706"+'\n\n' +
        #            strFmt("@SYS85707","@SYS85708")+'\n\n' +
        #            strFmt("@SYS96128","@SYS96127"));
        #
        #        dialogText.displayHeight(#DisplayHeight+2);
        #    }
        #
        #    dialogGroup = dialog.addGroup();
        #    dialogGroup.frameType(FormFrameType::None);
        #
        #    dialogForce = dialog.addField(extendedTypeStr(NoYesId), "@SYS85708");
        #    dialogForce.value(force);
        #
        #    // Disable force sync when Addax User Repository is active
        #    if (AddaxPluginTable::findClassName(ClassStr(AddaxUserRepositoryPlugin)).Active)
        #    {
        #        dialogForce.enabled(false);
        #        dialogForce.label("Force (Disabled due to user repository enabled)");
        #    }
        #
        #    //only add delete local files field if vcs support sync delete local file
        #    if (versioncontrol &&
        #        versioncontrol.parmSysVersionControlSystem() &&
        #        versioncontrol.parmSysVersionControlSystem().supportSyncDeleteLocalFiles())
        #    {
        #        dialogDelLocalFiles = dialog.addField(extendedTypeStr(NoYesId), "@SYS96127");
        #        // Always default to deleting local files.
        #        dialogDelLocalFiles.value(true);
        #    }
        #
        #    dialog.allowUpdateOnSelectCtrl(true);
        #
        #    //Make dialog MDI
        #    dialog.windowType(FormWindowType::Workspace);
        #
        #    return dialog;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: DBT

; Microsoft Dynamics AX Table : AddaxTmpUserRepository unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #AddaxTmpUserRepository
    EnforceFKRelation 1
    PROPERTIES
      Name                #AddaxTmpUserRepository
      TableType           #InMemory
      CreateRecIdIndex    #Yes
      PrimaryIndex        #SurrogateKey
      ClusterIndex        #SurrogateKey
      Origin              #{E173AADC-4DE7-4B3F-9889-EF91D93FE7B3}
    ENDPROPERTIES
    
    FIELDS
      FIELD #NetworkAlias
        STRING
        PROPERTIES
          Name                #NetworkAlias
          Label               #@SYS344940
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #AddaxTmpUserRepository
          Origin              #{CC9EA1A1-A945-4753-9CAA-DC20AD2A515D}
          ExtendedDataType    #NetworkAlias
          StringSize          #80
        ENDPROPERTIES
        
      FIELD #RepositoryFolder
        STRING
        PROPERTIES
          Name                #RepositoryFolder
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #AddaxTmpUserRepository
          Origin              #{0D7D32A9-A780-4050-B1C5-C3EC506F3268}
          ExtendedDataType    #SysVersionControlRepositoryFolder
          StringSize          #259
        ENDPROPERTIES
        
      FIELD #UserId
        STRING
        PROPERTIES
          Name                #UserId
          Mandatory           #Yes
          AllowEdit           #No
          Table               #AddaxTmpUserRepository
          Origin              #{FB665A68-47EC-4611-A7D9-4961550FB129}
          ExtendedDataType    #UserId
          StringSize          #8
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
    ENDGROUPS
    
    INDICES
      #UserIdx
      PROPERTIES
        Name                #UserIdx
        AllowDuplicates     #No
        Origin              #{78B0C35F-4C9F-4C4A-88A2-E47CAC7058D3}
      ENDPROPERTIES
      
      INDEXFIELDS
        #UserId
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
    ENDREFERENCES
    
    DELETEACTIONS
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #checkNetworkAlias
        #private boolean checkNetworkAlias(NetworkAlias _alias = this.NetworkAlias)
        #{
        #    if (!_alias)
        #    {
        #        return checkFailed("User alias is needed to create the workspace folder. Choose a user with an alias.");
        #    }
        #    return true;
        #}
        #
      ENDSOURCE
      SOURCE #createFolder
        #public void createFolder()
        #{
        #    AddaxUserRepository repository = new AddaxUserRepository(this.UserId);
        #    repository.createFolder();
        #    this.RepositoryFolder = repository.userRepositoryFolder();
        #}
      ENDSOURCE
      SOURCE #initFromUserInfo
        #public void initFromUserInfo(UserInfo _userInfo)
        #{
        #    this.UserId             = _userInfo.id;
        #    this.NetworkAlias       = _userInfo.networkAlias;
        #}
      ENDSOURCE
      SOURCE #modifiedField
        #public void modifiedField(FieldId _fieldId)
        #{
        #    super(_fieldId);
        #
        #    switch (_fieldId)
        #    {
        #        case fieldNum(AddaxTmpUserRepository, UserId):
        #            this.NetworkAlias = xUserInfo::find(false, this.UserId).networkAlias;
        #            return;
        #    }
        #}
      ENDSOURCE
      SOURCE #userInfo
        #public UserInfo userInfo(boolean _forUpdate = false)
        #{
        #    return xUserInfo::find(_forUpdate, this.UserId);
        #}
      ENDSOURCE
      SOURCE #validateField
        #public boolean validateField(FieldId _fieldIdToCheck)
        #{
        #    boolean ret = super(_fieldIdToCheck);
        #
        #    if (ret)
        #    {
        #        switch (_fieldIdToCheck)
        #        {
        #            case fieldNum(AddaxTmpUserRepository, UserId):
        #                return this.checkNetworkAlias(xUserInfo::find(false, this.UserId).networkAlias);
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #validateWrite
        #public boolean validateWrite()
        #{
        #    return super() && this.checkNetworkAlias();
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: DBT

; Microsoft Dynamics AX Table : SysVersionControlParameters unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #SysVersionControlParameters
    EnforceFKRelation 0
    PROPERTIES
      Name                #SysVersionControlParameters
      Label               #@SYS85914
      SecurityKey         #SysDevelopmentTables
      MaxAccessMode       #Edit
      CacheLookup         #Found
      CreateRecIdIndex    #Yes
      SaveDataPerCompany  #No
      TableGroup          #Parameter
      PrimaryIndex        #Key
      ClusterIndex        #Key
      ModifiedDateTime    #Yes
      DEL_modifiedTime    #Yes
      ModifiedBy          #Yes
      ModifiedTransactionId #Yes
      DeveloperDocumentation  #@SYS123440
      Origin              #{2C1B07BD-0000-1000-136B-81DEC3EE9E54}
      LegacyId            #1981
    ENDPROPERTIES
    
    FIELDS
    ENDFIELDS
    GROUPS
    ENDGROUPS
    
    INDICES
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
    ENDREFERENCES
    
    DELETEACTIONS
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #addaxUserRepositoryFolder
        #/// <summary>
        #/// Gets repository folder for current user.
        #/// </summary>
        #/// <returns>
        #/// Repository folder including full path.
        #/// </returns>
        #/// <remarks>
        #/// If user repositories are not activated, the standard repository folder
        #/// from version control parameters is used.
        #/// </remarks>
        #public FilePath addaxUserRepositoryFolder()
        #{
        #    if (AddaxUserRepositoryPlugin::isActive())
        #    {
        #        if (this.RepositoryFolder)
        #        {
        #            return new AddaxUserRepository(curUserId()).userRepositoryFolder();
        #        }
        #    }
        #    else
        #    {
        #        return this.RepositoryFolder;
        #    }
        #    return '';
        #}
      ENDSOURCE
      SOURCE #getTargetRepositoryFolder
        #public FilePath getTargetRepositoryFolder()
        #{
        #    str result = this.addaxUserRepositoryFolder(); // Addax
        #
        #    if (this.VCSType == SysVersionControlType::SysVersionControlTfs && this.AppRoot)
        #    {
        #        result = this.getRepositoryFolder(result, this.AppRoot); //Addax
        #    }
        #
        #    return result;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: CLS

; Microsoft Dynamics AX Class: AddaxUserRepository unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #AddaxUserRepository
    PROPERTIES
      Name                #AddaxUserRepository
      Origin              #{65155FAC-EE49-4EC5-8993-4369B42AB979}
    ENDPROPERTIES
    
    METHODS
      SOURCE #checkUserId
        #private void checkUserId(UserId _userId)
        #{
        #    if (!_userId)
        #    {
        #        throw error(strFmt("@SYS50104", extendedTypeId2pname(extendedTypeNum(UserId))));
        #    }
        #
        #    if (!xUserInfo::find(false, _userId))
        #    {
        #        throw error(strFmt("@SYS97023", _userId));
        #    }
        #}
      ENDSOURCE
      SOURCE #checkUserInfo
        #private void checkUserInfo()
        #{
        #    if (!userInfo.networkAlias)
        #    {
        #        throw error("No network alias");
        #    }
        #}
      ENDSOURCE
      SOURCE #classDeclaration
        #/// <summary>
        #/// Represents instance of user repository and allows to create
        #/// and delete repository folders.
        #/// </summary>
        #class AddaxUserRepository
        #{
        #    Filename repositoryFolder;
        #    UserInfo userInfo;
        #
        #    #File
        #    #define.SharedRepositoryFolderName('Shared')
        #}
      ENDSOURCE
      SOURCE #createFolder
        #public void createFolder()
        #{
        #    if (!WinAPI::folderExists(this.sharedRepositoryFolder()))
        #    {
        #        this.createSharedFolder();
        #    }
        #
        #    if (WinAPI::folderExists(this.userRepositoryFolder()))
        #    {
        #        return;
        #    }
        #
        #    if (!WinAPI::createSymbolicLink(
        #        this.userRepositoryFolder(),
        #        this.sharedRepositoryFolder(),
        #        true))
        #    {
        #        throw error(WinAPI::formatMessage(WinAPI::getLastError()));
        #    }
        #}
      ENDSOURCE
      SOURCE #createSharedFolder
        #private void createSharedFolder()
        #{
        #    try
        #    {
        #        WinAPI::createDirectoryPath(this.sharedRepositoryFolder());
        #    }
        #    catch (Exception::CLRError)
        #    {
        #        throw error(AddaxClrException::createFromLast().toString());
        #    }
        #}
      ENDSOURCE
      SOURCE #deleteFolder
        #public void deleteFolder()
        #{
        #    AddaxClrException ex;
        #
        #    try
        #    {
        #        System.IO.Directory::Delete(this.userRepositoryFolder());
        #    }
        #    catch (Exception::CLRError)
        #    {
        #        ex = AddaxClrException::createFromLast();
        #
        #        // Ignore missing folder, throw error otherwise
        #        if (!(ex.clrException() is System.IO.DirectoryNotFoundException))
        #        {
        #            throw error(ex.toString());
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #new
        #public void new(UserId _userId)
        #{
        #    this.checkUserId(_userId);
        #    userInfo = xUserInfo::find(false, _userId);
        #
        #    this.checkUserInfo();
        #
        #    repositoryFolder = SysVersionControlParameters::find().RepositoryFolder;
        #    if (!repositoryFolder)
        #    {
        #        throw error("@SYS120742");
        #    }
        #}
      ENDSOURCE
      SOURCE #sharedRepositoryFolder
        #public str sharedRepositoryFolder()
        #{
        #    return repositoryFolder + #FilePathDelimiter + #SharedRepositoryFolderName;
        #}
      ENDSOURCE
      SOURCE #userRepositoryFolder
        #public str userRepositoryFolder()
        #{
        #    return repositoryFolder + #FilePathDelimiter + userInfo.NetworkAlias;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: AddaxUserRepositoryScanner unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #AddaxUserRepositoryScanner
    PROPERTIES
      Name                #AddaxUserRepositoryScanner
      RunOn               #Client
      Origin              #{E407A708-A796-4FA8-A912-25605CB47B08}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #/// <summary>
        #/// Reads user repository folders and fill temporary table
        #/// with data about the user and folder.
        #/// </summary>
        #class AddaxUserRepositoryScanner
        #{
        #    AddaxTmpUserRepository tmpUserRepository;
        #}
      ENDSOURCE
      SOURCE #folderName
        #private str folderName(str _fullFolderName)
        #{
        #    container nameComponents = fileNameSplit(_fullFolderName);
        #
        #    if (conPeek(nameComponents,3) != "")
        #    {
        #        return conPeek(nameComponents,2) + conPeek(nameComponents,3);
        #    }
        #
        #    return conPeek(nameComponents, 2);
        #}
      ENDSOURCE
      SOURCE #insertTmpRecord
        #private void insertTmpRecord(UserInfo _userInfo, str _folderPath)
        #{
        #    tmpUserRepository.clear();
        #    tmpUserRepository.initFromUserInfo(_userInfo);
        #    tmpUserRepository.RepositoryFolder = _folderPath;
        #    tmpUserRepository.insert();
        #}
      ENDSOURCE
      SOURCE #isReparsePoint
        #private boolean isReparsePoint(str _folderPath)
        #{
        #    System.IO.FileAttributes attributes = System.IO.File::GetAttributes(_folderPath);
        #    return attributes.HasFlag(System.IO.FileAttributes::ReparsePoint);
        #}
      ENDSOURCE
      SOURCE #networkAliasToUserInfo
        #private UserInfo networkAliasToUserInfo(NetworkAlias _networkAlias)
        #{
        #    UserInfo userInfo;
        #
        #    if (_networkAlias)
        #    {
        #        select firstOnly userInfo
        #            where userInfo.networkAlias == _networkAlias;
        #    }
        #
        #    return userInfo;
        #}
      ENDSOURCE
      SOURCE #readDirectory
        #private void readDirectory(str _folderPath)
        #{
        #    str folderName;
        #    UserInfo userInfo;
        #
        #    if (this.isReparsePoint(_folderPath))
        #    {
        #        folderName = this.folderName(_folderPath);
        #        userInfo = this.networkAliasToUserInfo(folderName);
        #        if (userInfo)
        #        {
        #            this.insertTmpRecord(userInfo, _folderPath);
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #scan
        #public void scan()
        #{
        #    System.String[] directories;
        #    System.Collections.IEnumerator enumerator;
        #    str directory;
        #
        #    if (!this.validate())
        #    {
        #        throw Exception::Error;
        #    }
        #
        #    try
        #    {
        #        directories = System.IO.Directory::GetDirectories(SysVersionControlParameters::find().RepositoryFolder);
        #        enumerator = directories.GetEnumerator();
        #        while (enumerator.MoveNext())
        #        {
        #            directory = enumerator.get_Current();
        #            this.readDirectory(directory);
        #        }
        #    }
        #    catch (Exception::CLRError)
        #    {
        #        throw error(AddaxClrException::createFromLast().toString());
        #    }
        #}
      ENDSOURCE
      SOURCE #tmpUserRepository
        #public AddaxTmpUserRepository tmpUserRepository()
        #{
        #    return tmpUserRepository;
        #}
      ENDSOURCE
      SOURCE #validate
        #public boolean validate()
        #{
        #    if (!SysVersionControlParameters::find().RepositoryFolder)
        #    {
        #        return checkFailed(
        #            "Repository folder must be defined",
        #            '',
        #            SysInfoAction_Formrun::newFormNameControlName(
        #                formStr(SysVersionControlParametersDev),
        #                identifierStr(Settings_RepositoryFolder)));
        #    }
        #    return true;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: AddaxUserRepositoryPlugin unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #AddaxUserRepositoryPlugin
    PROPERTIES
      Name                #AddaxUserRepositoryPlugin
      Extends             #AddaxPluginBase
      Origin              #{B58DB4C2-E07F-4A9F-BE63-1A3290C0F469}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #class AddaxUserRepositoryPlugin extends AddaxPluginBase implements AddaxPlugable
        #{
        #}
      ENDSOURCE
      SOURCE #configMenuFunction
        #public MenuFunction configMenuFunction()
        #{
        #    return new MenuFunction(menuitemDisplayStr(AddaxUserRepository), MenuItemType::Display);
        #}
      ENDSOURCE
      SOURCE #description
        #public ClassDescription description()
        #{
        #    return "Allows to define different version control repository for different AX users.";
        #}
      ENDSOURCE
      SOURCE #name
        #public Name name()
        #{
        #    return "User repository";
        #}
      ENDSOURCE
      SOURCE #isActive
        #public static boolean isActive()
        #{
        #    return AddaxPluginBase::isActiveClassName(classStr(AddaxUserRepositoryPlugin));
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: SysVersionControlFilebasedBackEndTfs unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #SysVersionControlFilebasedBackEndTfs
    PROPERTIES
      Name                #SysVersionControlFilebasedBackEndTfs
      RunOn               #Client
      Origin              #{2D2438A1-0000-1000-9F05-2AF321EA33D0}
      LegacyId            #14497
    ENDPROPERTIES
    
    METHODS
      SOURCE #fileSetCheckin
        #public boolean fileSetCheckin(
        #    Map _setOfFiles,
        #    SysVersionControlItemComment _comment,
        #    SysVersionControlChangeListId _changeList = '',
        #    SysVersionControlTmpWorkItems _workItems = null)
        #{
        #    Microsoft.Dynamics.AX.Framework.TeamFoundationServerFacade.ChangeList changeList;
        #    Microsoft.Dynamics.AX.Framework.TeamFoundationServerFacade.Change change;
        #    Microsoft.Dynamics.AX.Framework.TeamFoundationServerFacade.CheckInCommandResult result;
        #    Microsoft.Dynamics.AX.Framework.TeamFoundationServerFacade.CommitCheckInOutput commitCheckIn;
        #    Microsoft.Dynamics.AX.Framework.TeamFoundationServerFacade.ChangeList commitChanges;
        #    Microsoft.Dynamics.AX.Framework.TeamFoundationServerFacade.ChangeList undoneChanges;
        #    Microsoft.Dynamics.AX.Framework.TeamFoundationServerFacade.WorkItemCheckInInfoProxyCollection workItemsCheckIn;
        #    int cnt;
        #    int i;
        #    Filename internalFileName;
        #    MapEnumerator enum;
        #    Filename filename;
        #    int changeSet;
        #    boolean checkinSucceeded;
        #
        #    try
        #    {
        #        changeList = new Microsoft.Dynamics.AX.Framework.TeamFoundationServerFacade.ChangeList();
        #
        #        enum = _setOfFiles.getEnumerator();
        #        while (enum.moveNext())
        #        {
        #            filename = enum.currentKey();
        #            change = this.constructTfsChangeFromLocalItem(filename);
        #            changeList.Add(change);
        #        }
        #
        #        workItemsCheckIn = workItemProvider.getCheckInItems(_workItems);
        #
        #        //TFS also provide EvaluateCheckIn() method
        #        //that Evaluates a set of pending changes to see whether they are ready to check in
        #        //we assume in AX most of the check-will doesn't encounter conflicts
        #        result = tfsWorkspaceProxy.CheckIn(changeList, _comment, workItemsCheckIn);
        #
        #        changeSet = result.get_ChangeSet();
        #        if(changeSet == 0)
        #        {
        #            info("@SYS118199");
        #            checkinSucceeded = true;
        #        }
        #        else
        #        {
        #            checkinSucceeded = true;
        #
        #            //CommitCheckIn
        #            commitCheckIn = result.get_CommitCheckInOutput();
        #            commitChanges = commitCheckIn.get_Changes();
        #            undoneChanges = commitCheckIn.get_UndoneChanges();
        #            cnt = commitChanges.get_Count();
        #            for (i = 0; i < cnt; i++)
        #            {
        #                change = commitChanges.get_Item(i);
        #                internalFileName = change.get_InternalFileName();
        #                info(strFmt("@SYS96136", internalFileName));
        #            }
        #            cnt = undoneChanges.get_Count();
        #            for (i = 0; i < cnt; i++)
        #            {
        #                change = undoneChanges.get_Item(i);
        #                internalFileName = change.get_InternalFileName();
        #                info(strFmt("@SYS118200", internalFileName));
        #            }
        #        }
        #
        #        this.checkWorkItemState(_workItems);
        #    }
        #    catch (Exception::CLRError)
        #    {
        #        checkinSucceeded = false;
        #        //in case of check in fail we supress conflict error and try to resolve it
        #    }
        #
        #    return checkinSucceeded;
        #}
      ENDSOURCE
      SOURCE #init
        #public SysVersionControlSystemStatus init(SysVersionControlParameters _parameters)
        #{
        #    int infologLine = infologLine();
        #    SysVersionControlTfsServer tfsServer = _parameters.TfsServer;
        #    SysVersionControlTfsProject tfsProject = _parameters.TfsProject;
        #    SysVersionControlTfsBranch tfsBranch = _parameters.TfsBranch;
        #    repositoryFolder = _parameters.getTargetRepositoryFolder();
        #
        #    try
        #    {
        #        tfsConnectionManagerProxy = new Microsoft.Dynamics.AX.Framework.TeamFoundationServerFacade.ConnectionManagerProxy(tfsServer, tfsProject);
        #        tfsWorkspaceProxy = new Microsoft.Dynamics.AX.Framework.TeamFoundationServerFacade.WorkspaceProxy();
        #        tfsWorkspaceProxy.Init(
        #            tfsConnectionManagerProxy,
        #            _parameters.addaxUserRepositoryFolder(), // Addax
        #            tfsBranch);
        #        workItemProvider = new SysVersionControlWorkItemProviderTFS(tfsConnectionManagerProxy);
        #
        #        return SysVersionControlSystemStatus::Connected;
        #    }
        #    catch (Exception::CLRError)
        #    {
        #        this.processTfsException();
        #    }
        #    catch (Exception::Internal)
        #    {
        #        infolog.clear(infologLine);
        #        this.processTfsException();
        #    }
        #    catch
        #    {
        #        error(strFmt("@SYS343139", tfsServer));
        #    }
        #
        #    //for future enhancement tfs should support offline scenario
        #    return SysVersionControlSystemStatus::NotConnected;
        #
        #}
      ENDSOURCE
      SOURCE #workItemProvider
        #/// <summary>
        #/// Gets a work item provider that can be used to associate work items with a check-in.
        #/// </summary>
        #/// <returns>An initialized SysVersionControlWorkItemProvider.</returns>
        #public SysVersionControlWorkItemProvider workItemProvider()
        #{
        #    return workItemProvider;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: WinAPI unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #WinAPI
    PROPERTIES
      Name                #WinAPI
      RunOn               #Client
      Origin              #{2D06027C-0000-1000-5769-6E4150490000}
      LegacyId            #636
    ENDPROPERTIES
    
    METHODS
      SOURCE #browseForFolderDialog
        #/// <summary>
        #///    Opens a browse for folder dialog. The user can select a single folder.
        #/// </summary>
        #/// <param name="_description">
        #///    The descriptive text that is displayed above the tree view control in the dialog box. The default
        #///    is empty; optional.
        #/// </param>
        #/// <param name="_selectedPath">
        #///    The folder from where the browsing starts. The default is empty, starting from Desktop; optional.
        #/// </param>
        #/// <param name="_showNewFolderButton">
        #///    A Boolean value that determines whether the New Folder button appears in the folder browser dialog
        #///    box. The default is true; optional.
        #/// </param>
        #/// <returns>
        #///    The path selected by the user. Returns blank if the user cancel the dialog.
        #/// </returns>
        #/// <remarks>
        #///    This method provides a way to prompt the user to browse, create, and eventually select a folder.
        #///    Use this method when you only want to allow the user to select folders, not files. Browsing of the
        #///    folders is done through a tree control. Only folders from the file system can be selected; virtual
        #///    folders cannot. Optionally, you can set the <paramref name="_selectedPath" /> to an absolute path
        #///    that will initially be selected. You can also optionally set the <paramref name="_description" />
        #///    property to provide additional instructions to the user.
        #///    You can use the <paramref
        #///    name="_showNewFolderButton" /> property to control if the user is able to create new folders with
        #///    the New Folder button.
        #/// </remarks>
        #public static client str browseForFolderDialog(str _description = '', str _selectedPath = '', boolean _showNewFolderButton = true)
        #{
        #    System.Windows.Forms.FolderBrowserDialog    browserDialog;
        #    System.Windows.Forms.DialogResult           browserResult;
        #    System.Windows.Forms.DialogResult           okResult;
        #
        #    str                                         selectedPath;
        #    int                                         resultValue;
        #    int                                         okValue;
        #    ;
        #    // Prepare the dialog
        #    browserDialog = new System.Windows.Forms.FolderBrowserDialog();
        #    browserDialog.set_SelectedPath(_selectedPath);
        #    browserDialog.set_Description(_description);
        #    browserDialog.set_ShowNewFolderButton(_showNewFolderButton);
        #
        #    // Show the dialog
        #    browserResult = browserDialog.ShowDialog();
        #
        #    // Get the value from the dialog
        #    resultValue = CLRInterop::getAnyTypeForObject(browserResult);
        #
        #    // Parse the OK enumeration of the enum DialogResult
        #    okResult = CLRInterop::parseClrEnum('System.Windows.Forms.DialogResult', 'OK');
        #
        #    // Get the int value of the OK enumeration
        #    okValue = CLRInterop::getAnyTypeForObject(okResult);
        #
        #    // If the dialog is ended with OK, get the value or set it to blank
        #    selectedPath = okValue & resultValue ? CLR2XppStr(browserDialog.get_SelectedPath()) : '';
        #
        #    return selectedPath;
        #}
      ENDSOURCE
      SOURCE #createSymbolicLink
        #// Addax
        #public client static boolean createSymbolicLink(str _symlinkFileName, str _targetFileName, boolean _isDirectory = false)
        #{
        #    DLL         winApiDLL           = new DLL(#KernelDLL);
        #    DLLFunction createSymbolicLink  = new DLLFunction(winApiDLL, 'CreateSymbolicLinkW');
        #
        #    createSymbolicLink.returns(ExtTypes::DWord);
        #    createSymbolicLink.arg(
        #        ExtTypes::WString,
        #        ExtTypes::WString,
        #        ExtTypes::DWord);
        #
        #    return createSymbolicLink.call(_symlinkFileName, _targetFileName, _isDirectory);
        #}
      ENDSOURCE
      SOURCE #getOSVersion
        #/*
        # *  Returns a container containing :
        # *
        # *  Major windows version
        # *  Minor windows version
        # *  Platform id
        # *
        # */
        #client static public container getOSVersion()
        #{
        #    #define.OSVERSIONINFOSIZE(276) // includes 128 TCHARs
        #
        #    DLL         dll;
        #    DLLFunction dllFunction;
        #    Binary      binary;
        #    ;
        #
        #    dll = new DLL(#KernelDLL);
        #    dllFunction = new DLLFunction(dll,'GetVersionExW');
        #
        #    binary = new Binary(#OSVERSIONINFOSIZE);
        #    binary.dWord(0,#OSVERSIONINFOSIZE);
        #
        #    dllFunction.arg(ExtTypes::Pointer);
        #    dllFunction.returns(ExtTypes::Byte);
        #
        #    dllFunction.call(binary);
        #
        #    return [binary.dWord(4),binary.dWord(8),binary.dWord(16)];
        #}
      ENDSOURCE
      SOURCE #isFileNameValid
        #/// <summary>
        #/// Checks for invalid characters in the filename
        #/// </summary>
        #/// <param name="fileName">
        #/// Input just the filename value stripping off the path and extension parameters
        #/// </param>
        #/// <returns>
        #/// True if filename is valid and false otherwise
        #/// </returns>
        #/// <remarks>
        #/// The updated function containing a list of invalid filename chars is currently (as of 7.19.2010)
        #/// retrieved using GetInvalidFileNameChars. This is the documented function in use by C#.
        #/// A server side function is available as well
        #/// </remarks>
        #static client boolean isFileNameValid(str fileName)
        #{
        #    System.Char[]                           invalidCharactersArray;
        #    int                                     indexOfArray = 0;
        #    int                                     lenOfFilename;
        #    str                                     regex  = '[a-zA-Z0-9]+';
        #    System.String                           strInvalidChars;
        #    System.String                           fileNameChar;
        #
        #    invalidCharactersArray = System.IO.Path::GetInvalidFileNameChars();
        #
        #    fileName = System.Text.RegularExpressions.Regex::Replace(fileName,regex,"");
        #    lenOfFilename = strlen(fileName);
        #
        #    strInvalidChars = new System.String(invalidCharactersArray);
        #
        #    while (indexOfArray < lenOfFilename)
        #    {
        #        fileNameChar = substr(fileName,indexOfArray,1);
        #        if (strInvalidChars.Contains(fileNameChar))
        #        {
        #            return false;
        #        }
        #        indexOfArray++;
        #    }
        #    return true;
        #}
        #
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #AddaxUserRepository
  PROPERTIES
    Name                #AddaxUserRepository
    Origin              #{4118E457-2509-49BC-85C0-3A31C3AA218A}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #public class FormRun extends ObjectRun
      #{
      #}
    ENDSOURCE
    SOURCE #init
      #public void init()
      #{
      #    AddaxUserRepositoryScanner scanner = new AddaxUserRepositoryScanner();
      #    scanner.scan();
      #
      #    super();
      #
      #    tmpUserRepository.setTmpData(scanner.tmpUserRepository());
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #TmpUserRepository
          Table               #AddaxTmpUserRepository
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #delete
          #public void delete()
          #{
          #    // Remember data from buffer that is deleting, but wait with removing the folder until super() was called.
          #    AddaxUserRepository repository = new AddaxUserRepository(tmpUserRepository.userId);
          #    boolean wasSaved = tmpUserRepository.RecId != 0;
          #
          #    super(); // User may cancel deletion
          #
          #    if (wasSaved)
          #    {
          #        repository.deleteFolder();
          #    }
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    super();
          #    tmpUserRepository.createFolder();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Caption             #User repository
      Style               #SimpleList
    ENDPROPERTIES
    
    CONTAINER
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPane
          ElementPosition     #715827882
          Style               #Strip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #ActionPaneTab
          ElementPosition     #1431655764
          HierarchyParent     #ActionPane
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #RecordBasics
          ElementPosition     #1431655764
          HierarchyParent     #ActionPaneTab
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #Grid
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #GridContainer
          MultiSelect         #No
          ShowRowLabels       #No
          DataSource          #TmpUserRepository
          AlternateRowShading #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GridContainer
          ElementPosition     #1431655764
          Style               #BorderlessGridContainer
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #DeleteButton
          ElementPosition     #1610612733
          HierarchyParent     #RecordBasics
          Text                #@SYS14425
          ButtonDisplay       #Text & Image left
          NormalImage         #10121
          ImageLocation       #EmbeddedResource
          SaveRecord          #No
          Primary             #Yes
          Command             #2832
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #NewButton
          ElementPosition     #1073741822
          HierarchyParent     #RecordBasics
          ButtonDisplay       #Text & Image left
          NormalImage         #11045
          ImageLocation       #EmbeddedResource
          Primary             #Yes
          Command             #260
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TmpUserRepository_NetworkAlias
          ElementPosition     #1288490187
          HierarchyParent     #Grid
          DataSource          #TmpUserRepository
          DataField           #NetworkAlias
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TmpUserRepository_RepositoryFolder
          ElementPosition     #1717986916
          HierarchyParent     #Grid
          DataSource          #TmpUserRepository
          DataField           #RepositoryFolder
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TmpUserRepository_UserId
          ElementPosition     #858993458
          HierarchyParent     #Grid
          DataSource          #TmpUserRepository
          DataField           #UserId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: FTM

; Microsoft Dynamics AX MENUITEM : AddaxUserRepository unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #AddaxUserRepository
    Type: 1
    PROPERTIES
      Name                #AddaxUserRepository
      Label               #User repository
      HelpText            #Create or delete repositories for individual users
      Object              #AddaxUserRepository
      Origin              #{14A75010-2214-4928-B655-77107E59E869}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: PRN

; Microsoft Dynamics AX Project : AddaxWorkspaces unloaded
; --------------------------------------------------------------------------------
  PROJECTVERSION 2
  
  PROJECT #AddaxWorkspaces
  SHARED
  PROPERTIES
    Name                #AddaxWorkspaces
    Origin              #{FABFC4C5-6735-423F-AE06-0D16C944A26A}
  ENDPROPERTIES
  
    PROJECTCLASS ProjectNode
    GROUP #EditorComments
      PROPERTIES
        Name                #EditorComments
        ProjectGroupType    #All
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 2964
        NODETYPE 329
        NAME #xppSource
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 2436
        NODETYPE 329
        NAME #EditorScripts
      ENDNODE
      ENDGROUP
      
    GROUP #EditorExtension
      PROPERTIES
        Name                #EditorExtension
        ProjectGroupType    #All
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 1
        UTILOBJECTID 0
        NODETYPE 296
        NAME #FileEditorComponentsConfig
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #FileEditorComponentsConfig
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1023840
        NODETYPE 329
        NAME #AddaxEditorComponentsPlugin
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1023839
        NODETYPE 329
        NAME #FileEditorComponentOutlining
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1023838
        NODETYPE 329
        NAME #FileEditorComponentHighlightWord
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1023837
        NODETYPE 329
        NAME #FileEditorComponentBraceMatching
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 21
        UTILOBJECTID 0
        NODETYPE 820
        NAME #JAEE_AX_EditorExtensions_Outlining_dll
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 21
        UTILOBJECTID 0
        NODETYPE 820
        NAME #JAEE_AX_EditorExtensions_HighlightWord_d
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 21
        UTILOBJECTID 0
        NODETYPE 820
        NAME #JAEE_AX_EditorExtensions_BraceMatching_d
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1023836
        NODETYPE 329
        NAME #FileEditorComponentBase
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 6017
        NODETYPE 329
        NAME #SysFileDeployer
      ENDNODE
      ENDGROUP
      
    GROUP #Toolbar
      PROPERTIES
        Name                #Toolbar
        ProjectGroupType    #All
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #DEV_CreateNewProjectDlg
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1023841
        NODETYPE 329
        NAME #DEV_CreateNewProject
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #DEV_ToolbarConfig
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 1
        UTILOBJECTID 0
        NODETYPE 296
        NAME #DEV_ToolbarConfig
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 3
        UTILOBJECTID 0
        NODETYPE 296
        NAME #DEV_CompileAll
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 3
        UTILOBJECTID 0
        NODETYPE 296
        NAME #DEV_CreateNewProject
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 3
        UTILOBJECTID 0
        NODETYPE 296
        NAME #DEV_FlushAll
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 3
        UTILOBJECTID 0
        NODETYPE 296
        NAME #DEV_FlushAllClient
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1023824
        NODETYPE 329
        NAME #DEV_Logger
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1023826
        NODETYPE 329
        NAME #DEV_Util
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 61444
        NODETYPE 329
        NAME #Info
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1023834
        NODETYPE 329
        NAME #AddaxDevToolbarPlugin
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #DEV_Toolbar
      ENDNODE
      ENDGROUP
      
    GROUP #Addax
      PROPERTIES
        Name                #Addax
        ProjectGroupType    #All
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 44
        UTILOBJECTID 103613
        NODETYPE 204
        NAME #AddaxPluginTable
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1023827
        NODETYPE 329
        NAME #AddaxClrException
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1023828
        NODETYPE 329
        NAME #AddaxPlugable
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1023829
        NODETYPE 329
        NAME #AddaxPluginBase
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1023830
        NODETYPE 329
        NAME #AddaxPluginUpdate
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #AddaxPlugin
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 1
        UTILOBJECTID 0
        NODETYPE 296
        NAME #AddaxPlugin
      ENDNODE
      ENDGROUP
      
    GROUP #PrivateWorkspaces
      PROPERTIES
        Name                #PrivateWorkspaces
        ProjectGroupType    #All
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 859
        NODETYPE 329
        NAME #SysVersionControlSynchronization
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 44
        UTILOBJECTID 103614
        NODETYPE 204
        NAME #AddaxTmpUserRepository
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 44
        UTILOBJECTID 1981
        NODETYPE 204
        NAME #SysVersionControlParameters
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1023831
        NODETYPE 329
        NAME #AddaxUserRepository
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1023833
        NODETYPE 329
        NAME #AddaxUserRepositoryScanner
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1023832
        NODETYPE 329
        NAME #AddaxUserRepositoryPlugin
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 14497
        NODETYPE 329
        NAME #SysVersionControlFilebasedBackEndTfs
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 636
        NODETYPE 329
        NAME #WinAPI
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #AddaxUserRepository
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 1
        UTILOBJECTID 0
        NODETYPE 296
        NAME #AddaxUserRepository
      ENDNODE
      ENDGROUP
      
  ENDPROJECT
  

***Element: END
